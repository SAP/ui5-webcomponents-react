{"version":3,"mappings":"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","names":["AvatarGroupType","AvatarGroupType$1","registerThemePropertiesLoader","defaultThemeBase","defaultTheme","styleData","block0","context","tags","suffix","html","ifDefined","block1","block2","scopeTag","classMap","__decorate","this","decorators","target","key","desc","c","r","d","i","AvatarGroup_1","OVERFLOW_BTN_CLASS","AVATAR_GROUP_OVERFLOW_BTN_SELECTOR","offsets","AvatarSize","AvatarGroup","UI5Element","ItemNavigation","getI18nBundle","avatar","hiddenItemsCount","typeLabelKey","AVATAR_GROUP_ARIA_LABEL_GROUP","AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL","text","AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL","AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL","AVATAR_GROUP_MOVE","button","item","ltrEffectiveWidth","ResizeHandler","e","isEnter","isSpace","targetRef","isOverflowButtonClicked","isButton","isAvatar","index","colorIndex","AvatarColorScheme","isRTL","ltrWidthToItem","itemOffsetParent","hiddenItems","totalWidth","shouldFireEvent","property","slot","customElement","litRender","AvatarGroupTemplate","AvatarGroupCss","Button","event","AvatarGroup$2","withWebComponent","__vitePreload","AvatarGroup$3","Description","Avatar1","jsx","Avatar2","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","DocsHeader","Canvas","Story","args","Avatar","ArgsTableWithNote","Markdown","DomRefTable","AvatarGroupDomRef","Footer","defaultStory","componentMeta","__namedExportsOrder"],"sources":["../../node_modules/@ui5/webcomponents/dist/types/AvatarGroupType.js","../../node_modules/@ui5/webcomponents/dist/generated/themes/AvatarGroup.css.js","../../node_modules/@ui5/webcomponents/dist/generated/templates/AvatarGroupTemplate.lit.js","../../node_modules/@ui5/webcomponents/dist/AvatarGroup.js","../../packages/main/src/webComponents/AvatarGroup/index.tsx","../../packages/main/src/webComponents/AvatarGroup/AvatarGroupDescription.md?raw","../../packages/main/src/webComponents/AvatarGroup/CodeGen.tsx","../../packages/main/src/webComponents/AvatarGroup/AvatarGroup.stories.mdx"],"sourcesContent":["/**\n * Different types of AvatarGroupType.\n *\n * @readonly\n * @enum {string}\n * @public\n * @author SAP SE\n * @alias sap.ui.webc.main.types.AvatarGroupType\n */\nvar AvatarGroupType;\n(function (AvatarGroupType) {\n    /**\n     * The avatars are displayed as partially overlapped on top of each other and the entire group has one click or tap area.\n     *\n     * @public\n     * @type {Group}\n     */\n    AvatarGroupType[\"Group\"] = \"Group\";\n    /**\n     * The avatars are displayed side-by-side and each avatar has its own click or tap area.\n     *\n     * @public\n     * @type {Individual}\n     */\n    AvatarGroupType[\"Individual\"] = \"Individual\";\n})(AvatarGroupType || (AvatarGroupType = {}));\nexport default AvatarGroupType;\n//# sourceMappingURL=AvatarGroupType.js.map","import { registerThemePropertiesLoader } from \"@ui5/webcomponents-base/dist/asset-registries/Themes.js\";\nimport defaultThemeBase from \"@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js\";\nimport defaultTheme from \"./sap_horizon/parameters-bundle.css.js\";\nregisterThemePropertiesLoader(\"@ui5/webcomponents-theming\", \"sap_horizon\", async () => defaultThemeBase);\nregisterThemePropertiesLoader(\"@ui5/webcomponents\", \"sap_horizon\", async () => defaultTheme);\nconst styleData = { packageName: \"@ui5/webcomponents\", fileName: \"themes/AvatarGroup.css\", content: \":host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host(:not([hidden])){display:block;width:100%}:host{--_ui5-v1-19-0_button_focused_border:var(--_ui5-v1-19-0_avatar_group_button_focus_border)}.ui5-avatar-group-items:focus{outline:none}:host([type=Group]) .ui5-avatar-group-items:focus{border-radius:var(--_ui5-v1-19-0_avatar_group_focus_border_radius);outline:var(--_ui5-v1-19-0_avatar_outline);outline-offset:var(--_ui5-v1-19-0_avatar_focus_offset)}.ui5-avatar-group-root{display:flex}.ui5-avatar-group-items{display:inline-flex;position:relative;white-space:nowrap}:host([type=Group]) .ui5-avatar-group-items{cursor:pointer}:host([type=Group]) ::slotted([ui5-avatar]),:host([type=Group]) ::slotted([ui5-button]){pointer-events:none}.ui5-avatar-group-overflow-btn:not([hidden]),::slotted([ui5-button]:not([hidden])){--_ui5-v1-19-0_button_base_padding:0;border-radius:50%;display:inline-flex;text-overflow:clip;z-index:0}.ui5-avatar-group-overflow-btn[focused],::slotted([ui5-button][focused]){outline:var(--_ui5-v1-19-0_avatar_outline);outline-offset:var(--_ui5-v1-19-0_avatar_focus_offset)}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-xs{font-size:.75rem;height:2rem;min-width:2rem;width:2rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-s,::slotted([ui5-button]){font-size:1.125rem;height:3rem;min-width:3rem;width:3rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-m{font-size:1.625rem;height:4rem;min-width:4rem;width:4rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-l{font-size:2rem;height:5rem;min-width:5rem;width:5rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-xl{font-size:2.75rem;height:7rem;min-width:7rem;width:7rem}\" };\nexport default styleData;\n//# sourceMappingURL=AvatarGroup.css.js.map","/* eslint no-unused-vars: 0 */\nimport { html, classMap, ifDefined, scopeTag } from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nfunction block0(context, tags, suffix) { return html `<div class=\"ui5-avatar-group-root\"><div class=\"ui5-avatar-group-items\" @keyup=\"${this._onkeyup}\" @keydown=\"${this._onkeydown}\" @focusin=\"${this._onfocusin}\" tabindex=\"${ifDefined(this._groupTabIndex)}\" @click=\"${this._onClick}\" @ui5-click=\"${ifDefined(this._onUI5Click)}\" aria-label=\"${ifDefined(this._ariaLabelText)}\" role=\"${ifDefined(this._role)}\" aria-haspopup=\"${ifDefined(this._containerAriaHasPopup)}\"><slot></slot>${this._customOverflowButton ? block1.call(this, context, tags, suffix) : block2.call(this, context, tags, suffix)}</div></div>`; }\nfunction block1(context, tags, suffix) { return html `<slot name=\"overflowButton\"></slot>`; }\nfunction block2(context, tags, suffix) { return suffix ? html `<${scopeTag(\"ui5-button\", tags, suffix)} .accessibilityAttributes=\"${ifDefined(this._overflowButtonAccAttributes)}\" aria-label=\"${ifDefined(this._overflowButtonAriaLabelText)}\" ?hidden=\"${this._overflowBtnHidden}\" ?non-interactive=${this._isGroup} class=\"${classMap(this.classes.overflowButton)}\">${ifDefined(this._overflowButtonText)}</${scopeTag(\"ui5-button\", tags, suffix)}>` : html `<ui5-button .accessibilityAttributes=\"${ifDefined(this._overflowButtonAccAttributes)}\" aria-label=\"${ifDefined(this._overflowButtonAriaLabelText)}\" ?hidden=\"${this._overflowBtnHidden}\" ?non-interactive=${this._isGroup} class=\"${classMap(this.classes.overflowButton)}\">${ifDefined(this._overflowButtonText)}</ui5-button>`; }\nexport default block0;\n//# sourceMappingURL=AvatarGroupTemplate.lit.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar AvatarGroup_1;\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport { isEnter, isSpace, } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarColorScheme from \"./types/AvatarColorScheme.js\";\nimport { AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL, AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL, AVATAR_GROUP_ARIA_LABEL_GROUP, AVATAR_GROUP_MOVE, } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n    [AvatarSize.XS]: {\n        [AvatarGroupType.Individual]: \"0.0625rem\",\n        [AvatarGroupType.Group]: \"-0.75rem\",\n    },\n    [AvatarSize.S]: {\n        [AvatarGroupType.Individual]: \"0.125rem\",\n        [AvatarGroupType.Group]: \"-1.25rem\",\n    },\n    [AvatarSize.M]: {\n        [AvatarGroupType.Individual]: \"0.125rem\",\n        [AvatarGroupType.Group]: \"-1.625rem\",\n    },\n    [AvatarSize.L]: {\n        [AvatarGroupType.Individual]: \"0.125rem\",\n        [AvatarGroupType.Group]: \" -2rem\",\n    },\n    [AvatarSize.XL]: {\n        [AvatarGroupType.Individual]: \"0.25rem\",\n        [AvatarGroupType.Group]: \"-2.75rem\",\n    },\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n * The component provides advanced keyboard handling.\n * When focused, the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n *\n * <br>\n * <code>type</code> Individual:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the overflow button</li>\n * <li>[LEFT] - Navigate one avatar to the left</li>\n * <li>[RIGHT] - Navigate one avatar to the right</li>\n * <li>[HOME] - Navigate to the first avatar</li>\n * <li>[END] - Navigate to the last avatar</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n * <code>type</code> Group:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the next interactive element after the component</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.main.AvatarGroup\n * @extends sap.ui.webc.base.UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\nlet AvatarGroup = AvatarGroup_1 = class AvatarGroup extends UI5Element {\n    constructor() {\n        super();\n        this._itemNavigation = new ItemNavigation(this, {\n            getItemsCallback: () => {\n                return this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n            },\n        });\n        this._colorIndex = 0;\n        this._hiddenItems = 0;\n        this._onResizeHandler = this._onResize.bind(this);\n    }\n    static async onDefine() {\n        AvatarGroup_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n    }\n    /**\n     * Returns an array containing the <code>ui5-avatar</code> instances that are currently not displayed due to lack of space.\n     * @readonly\n     * @type {HTMLElement[]}\n     * @defaultValue []\n     * @name sap.ui.webc.main.AvatarGroup.prototype.hiddenItems\n     * @public\n     */\n    get hiddenItems() {\n        return this.items.slice(this._hiddenStartIndex);\n    }\n    /**\n     * Returns an array containing the <code>AvatarColorScheme</code> values that correspond to the avatars in the component.\n     * @readonly\n     * @type {sap.ui.webc.main.types.AvatarColorScheme[]}\n     * @name sap.ui.webc.main.AvatarGroup.prototype.colorScheme\n     * @defaultValue []\n     * @public\n     */\n    get colorScheme() {\n        return this.items.map(avatar => avatar._effectiveBackgroundColor);\n    }\n    get _customOverflowButton() {\n        return this.overflowButton.length ? this.overflowButton[0] : undefined;\n    }\n    get _ariaLabelText() {\n        const hiddenItemsCount = this.hiddenItems.length;\n        const typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL;\n        // avatar type label\n        let text = AvatarGroup_1.i18nBundle.getText(typeLabelKey);\n        // add displayed-hidden avatars label\n        text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, this._itemsCount - hiddenItemsCount, hiddenItemsCount)}`;\n        if (this._isGroup) {\n            // the container role is \"button\", add the message for complete list activation\n            text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL)}`;\n        }\n        else {\n            // the container role is \"group\", add the \"how to navigate\" message\n            text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_MOVE)}`;\n        }\n        return text;\n    }\n    get _overflowButtonAriaLabelText() {\n        return this._isGroup ? undefined : AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);\n    }\n    get _containerAriaHasPopup() {\n        return this._isGroup ? this._getAriaHasPopup() : undefined;\n    }\n    get _overflowButtonAccAttributes() {\n        return {\n            hasPopup: this._isGroup ? undefined : this._getAriaHasPopup(),\n        };\n    }\n    get _role() {\n        return this._isGroup ? \"button\" : \"group\";\n    }\n    get _hiddenStartIndex() {\n        return this._itemsCount - this._hiddenItems;\n    }\n    get _overflowBtnHidden() {\n        return this._hiddenItems === 0;\n    }\n    get _isGroup() {\n        return this.type === AvatarGroupType.Group;\n    }\n    get _itemsCount() {\n        return this.items.length;\n    }\n    get _groupTabIndex() {\n        return this._isGroup ? \"0\" : \"-1\";\n    }\n    get _overflowButton() {\n        return this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n    }\n    /**\n     * Return the effective overflow button width\n     * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n     *\n     * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n     * 2) In case of \"Individual\" group type width is directly taken from button element\n     * @private\n     */\n    get _overflowButtonEffectiveWidth() {\n        const button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton;\n        // if in \"Group\" mode overflow button size is equal to the offset from second item\n        if (!button) {\n            return 0;\n        }\n        if (this._isGroup) {\n            let item = this.items[1];\n            const ltrEffectiveWidth = item.offsetLeft - this.offsetLeft;\n            // in some cases when second avatar is overflowed the offset of the button is the right one\n            if (!item || item.hidden) {\n                item = button;\n            }\n            return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : ltrEffectiveWidth;\n        }\n        return button.offsetWidth;\n    }\n    get firstAvatarSize() {\n        return this.items[0].size;\n    }\n    get classes() {\n        return {\n            overflowButton: {\n                \"ui5-avatar-group-overflow-btn\": true,\n                \"ui5-avatar-group-overflow-btn-xs\": this.firstAvatarSize === \"XS\",\n                \"ui5-avatar-group-overflow-btn-s\": this.firstAvatarSize === \"S\",\n                \"ui5-avatar-group-overflow-btn-m\": this.firstAvatarSize === \"M\",\n                \"ui5-avatar-group-overflow-btn-l\": this.firstAvatarSize === \"L\",\n                \"ui5-avatar-group-overflow-btn-xl\": this.firstAvatarSize === \"XL\",\n            },\n        };\n    }\n    onAfterRendering() {\n        this._overflowItems();\n    }\n    onBeforeRendering() {\n        if (this._customOverflowButton) {\n            this._customOverflowButton.nonInteractive = this._isGroup;\n        }\n        this._prepareAvatars();\n    }\n    onEnterDOM() {\n        ResizeHandler.register(this, this._onResizeHandler);\n    }\n    onExitDOM() {\n        ResizeHandler.deregister(this, this._onResizeHandler);\n    }\n    _onResize() {\n        this._overflowItems();\n    }\n    _onkeydown(e) {\n        // when type is \"Individual\" the ui5-avatar and ui5-button both\n        // fire \"click\" event when SPACE or ENTER are pressed and\n        // AvatarGroup \"click\" is fired in their handlers (_onClick, _onUI5Click).\n        if (this._isGroup) {\n            if (isEnter(e)) {\n                this._fireGroupEvent(e.target);\n            }\n            else if (isSpace(e)) {\n                // prevent scrolling\n                e.preventDefault();\n            }\n        }\n    }\n    _onkeyup(e) {\n        if (!e.shiftKey && isSpace(e) && this._isGroup) {\n            this._fireGroupEvent(e.target);\n            e.preventDefault();\n        }\n    }\n    _fireGroupEvent(targetRef) {\n        const isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;\n        this.fireEvent(\"click\", {\n            targetRef,\n            overflowButtonClicked: isOverflowButtonClicked,\n        });\n    }\n    _onClick(e) {\n        const target = e.target;\n        // no matter the value of noConflict, the ui5-button and the group container (div) always fire a native click event\n        const isButton = target.hasAttribute(\"ui5-button\");\n        e.stopPropagation();\n        if (this._isGroup || isButton) {\n            this._fireGroupEvent(target);\n        }\n    }\n    _onUI5Click(e) {\n        const target = e.target;\n        // when noConflict=true only ui5-avatar will fire ui5-click event\n        const isAvatar = target.hasAttribute(\"ui5-avatar\");\n        e.stopPropagation();\n        if (isAvatar) {\n            this._fireGroupEvent(target);\n        }\n    }\n    /**\n     * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n     * Set the margins (offsets) based on RTL/LTR.\n     * @private\n     */\n    _prepareAvatars() {\n        this._colorIndex = 0;\n        this.items.forEach((avatar, index) => {\n            const colorIndex = this._getNextBackgroundColor();\n            avatar.interactive = !this._isGroup;\n            if (!avatar.getAttribute(\"_color-scheme\")) {\n                // AvatarGroup respects colors set to ui5-avatar\n                avatar.setAttribute(\"_color-scheme\", AvatarColorScheme[`Accent${colorIndex}`]);\n            }\n            // last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n            if (index !== this._itemsCount - 1 || this._customOverflowButton) {\n                // based on RTL the browser automatically sets left or right margin to avatars\n                avatar.style.marginInlineEnd = offsets[avatar._effectiveSize][this.type];\n            }\n        });\n    }\n    _onfocusin(e) {\n        this._itemNavigation.setCurrentItem(e.target);\n    }\n    /**\n     * Returns the total width to item excluding the item width\n     * RTL/LTR aware\n     * @private\n     * @param {HTMLElement} item\n     */\n    _getWidthToItem(item) {\n        const isRTL = this.effectiveDir === \"rtl\";\n        const ltrWidthToItem = item.offsetLeft - this.offsetLeft;\n        if (isRTL) {\n            const itemOffsetParent = item.offsetParent;\n            // in RTL the total width is equal to difference of the parent container width and\n            // how much is the item offset to the left minus its offsetWidth\n            if (!itemOffsetParent) {\n                return 0;\n            }\n            return itemOffsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n        }\n        return ltrWidthToItem;\n    }\n    /**\n     * Overflows items that were not able to fit the container\n     * @private\n     */\n    _overflowItems() {\n        if (this.items.length < 2) {\n            // no need to overflow avatars\n            return;\n        }\n        let hiddenItems = 0;\n        for (let index = 0; index < this._itemsCount; index++) {\n            const item = this.items[index];\n            // show item to determine if it will fit the new container size\n            item.hidden = false;\n            // container width to current item + item width (avatar)\n            // used to determine whether the following items will fit the container or not\n            let totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n            if (index !== this._itemsCount - 1 || this._customOverflowButton) {\n                totalWidth += this._overflowButtonEffectiveWidth;\n            }\n            if (totalWidth > this.offsetWidth) {\n                hiddenItems = this._itemsCount - index;\n                break;\n            }\n        }\n        // hide the items that did not fit the container size\n        this._setHiddenItems(hiddenItems);\n    }\n    _getNextBackgroundColor() {\n        // counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n        if (++this._colorIndex > 10) {\n            this._colorIndex = 1;\n        }\n        return this._colorIndex;\n    }\n    _setHiddenItems(hiddenItems) {\n        const shouldFireEvent = this._hiddenItems !== hiddenItems;\n        this._hiddenItems = hiddenItems;\n        this.items.forEach((item, index) => {\n            item.hidden = index >= this._hiddenStartIndex;\n        });\n        this._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n        if (shouldFireEvent) {\n            this.fireEvent(\"overflow\");\n        }\n    }\n    _getAriaHasPopup() {\n        if (this.ariaHaspopup === \"\") {\n            return;\n        }\n        return this.ariaHaspopup;\n    }\n};\n__decorate([\n    property({ type: AvatarGroupType, defaultValue: AvatarGroupType.Group })\n], AvatarGroup.prototype, \"type\", void 0);\n__decorate([\n    property()\n], AvatarGroup.prototype, \"ariaHaspopup\", void 0);\n__decorate([\n    property({ noAttribute: true })\n], AvatarGroup.prototype, \"_overflowButtonText\", void 0);\n__decorate([\n    slot({ type: HTMLElement, \"default\": true })\n], AvatarGroup.prototype, \"items\", void 0);\n__decorate([\n    slot()\n], AvatarGroup.prototype, \"overflowButton\", void 0);\nAvatarGroup = AvatarGroup_1 = __decorate([\n    customElement({\n        tag: \"ui5-avatar-group\",\n        renderer: litRender,\n        template: AvatarGroupTemplate,\n        styles: AvatarGroupCss,\n        dependencies: [Button],\n    })\n    /**\n    * Fired when the component is activated either with a\n    * click/tap or by using the Enter or Space key.\n    * @param {HTMLElement} targetRef The DOM ref of the clicked item.\n    * @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n    * @event sap.ui.webc.main.AvatarGroup#click\n    * @public\n    * @since 1.0.0-rc.11\n    */\n    ,\n    event(\"click\", {\n        detail: {\n            targetRef: { type: HTMLElement },\n            overflowButtonClicked: { type: Boolean },\n        },\n    })\n    /**\n    * Fired when the count of visible <code>ui5-avatar</code> elements in the\n    * component has changed\n    * @event sap.ui.webc.main.AvatarGroup#overflow\n    * @public\n    * @since 1.0.0-rc.13\n    */\n    ,\n    event(\"overflow\")\n], AvatarGroup);\nAvatarGroup.define();\nexport default AvatarGroup;\n//# sourceMappingURL=AvatarGroup.js.map","'use client';\n\nimport '@ui5/webcomponents/dist/AvatarGroup.js';\nimport type { AvatarGroupClickEventDetail } from '@ui5/webcomponents/dist/AvatarGroup.js';\nimport type { ReactNode } from 'react';\nimport type { AvatarColorScheme } from '../../enums/index.js';\nimport { AvatarGroupType } from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\nimport type { UI5WCSlotsNode } from '../../types/index.js';\n\ninterface AvatarGroupAttributes {\n  /**\n   * Defines the mode of the `AvatarGroup`.\n   */\n  type?: AvatarGroupType | keyof typeof AvatarGroupType;\n}\n\nexport interface AvatarGroupDomRef extends AvatarGroupAttributes, Ui5DomRef {\n  /**\n   * Returns an array containing the `AvatarColorScheme` values that correspond to the avatars in the component.\n   */\n  readonly colorScheme: (AvatarColorScheme | keyof typeof AvatarColorScheme)[];\n  /**\n   * Returns an array containing the `Avatar` instances that are currently not displayed due to lack of space.\n   */\n  readonly hiddenItems: ReactNode | ReactNode[];\n}\n\nexport interface AvatarGroupPropTypes extends AvatarGroupAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the items of the component. Use the `Avatar` component as an item.\n   *\n   * **Note:** The UX guidelines recommends using avatars with \"Circle\" shape. Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency as the built-in overflow action has \"Circle\" shape.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the overflow button of the component. **Note:** We recommend using the `Button` component.\n   *\n   * **Note:** If this slot is not used, the component will display the built-in overflow button.\n   *\n   * __Note:__ The content of the prop will be rendered into a [&lt;slot&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot) by assigning the respective [slot](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot) attribute (`slot=\"overflowButton\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--docs).\n   */\n  overflowButton?: UI5WCSlotsNode;\n  /**\n   * Fired when the component is activated either with a click/tap or by using the Enter or Space key.\n   */\n  onClick?: (event: Ui5CustomEvent<AvatarGroupDomRef, AvatarGroupClickEventDetail>) => void;\n  /**\n   * Fired when the count of visible `Avatar` elements in the component has changed\n   */\n  onOverflow?: (event: Ui5CustomEvent<AvatarGroupDomRef>) => void;\n}\n\n/**\n * Displays a group of avatars arranged horizontally. It is useful to visually showcase a group of related avatars, such as, project team members or employees. The component allows you to display the avatars in different sizes, depending on your use case. The `AvatarGroup` component has two group types:\n *\n * *   `Group` type: The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.\n * *   `Individual` type: The avatars are displayed side-by-side and each avatar has its own click/tap area.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-AvatarGroup)\n */\nconst AvatarGroup = withWebComponent<AvatarGroupPropTypes, AvatarGroupDomRef>(\n  'ui5-avatar-group',\n  ['type'],\n  [],\n  ['overflowButton'],\n  ['click', 'overflow'],\n  () => import('@ui5/webcomponents/dist/AvatarGroup.js')\n);\n\nAvatarGroup.displayName = 'AvatarGroup';\n\nAvatarGroup.defaultProps = {\n  type: AvatarGroupType.Group\n};\n\nexport { AvatarGroup };\n","export default \"## Responsive Behavior\\n\\nWhen the available space is less than the width required to display all avatars, an overflow visualization appears as a button placed at the end with the same shape and size as the avatars. The visualization displays the number of avatars that have overflowed and are not currently visible.\\n\\n## Usage\\n\\nUse the `AvatarGroup` if:\\n\\n- You want to display a group of avatars.\\n- You want to display several avatars which have something in common.\\n\\nDo not use the `AvatarGroup` if:\\n\\n- You want to display a single avatar.\\n- You want to display a gallery for simple images.\\n- You want to use it for other visual content than avatars.\\n\\n## Keyboard Handling\\n\\nThe component provides advanced keyboard handling. When focused, the user can use the following keyboard shortcuts in order to perform a navigation:  \\n`type` Individual:\\n\\n- \\\\[TAB\\\\] - Move focus to the overflow button\\n- \\\\[LEFT\\\\] - Navigate one avatar to the left\\n- \\\\[RIGHT\\\\] - Navigate one avatar to the right\\n- \\\\[HOME\\\\] - Navigate to the first avatar\\n- \\\\[END\\\\] - Navigate to the last avatar\\n- \\\\[SPACE\\\\],\\\\[ENTER\\\\],\\\\[RETURN\\\\] - Trigger `undefined` event\\n\\n`type` Group:\\n\\n- \\\\[TAB\\\\] - Move focus to the next interactive element after the component\\n- \\\\[SPACE\\\\],\\\\[ENTER\\\\],\\\\[RETURN\\\\] - Trigger `undefined` event\\n\"","import React from 'react';\n\nexport const Avatar1 = (\n  <img src=\"https://sap.github.io/ui5-webcomponents/assets/images/avatars/woman_avatar_5.png\" alt=\"Avatar1\" />\n);\nexport const Avatar2 = (\n  <img src=\"https://sap.github.io/ui5-webcomponents/assets/images/avatars/man_avatar_3.png\" alt=\"Avatar2\" />\n);\n","import { Canvas, Markdown, Meta, Story } from '@storybook/blocks';\nimport { AvatarGroup } from './index';\nimport { AvatarGroupType } from '../../enums/AvatarGroupType';\nimport { Avatar } from '../Avatar';\nimport { ArgsTableWithNote, DocsHeader, DomRefTable, Footer } from '@sb/components';\nimport Description from './AvatarGroupDescription.md?raw';\nimport AvatarGroupDomRef from './AvatarGroupDomRef.json';\nimport { Avatar1, Avatar2 } from './CodeGen';\n\n<Meta\n  title=\"Data Display / AvatarGroup\"\n  component={AvatarGroup}\n  argTypes={{\n    children: { control: { disable: true } },\n    overflowButton: { control: { disable: true } }\n  }}\n  args={{\n    type: AvatarGroupType.Group\n  }}\n/>\n\n<DocsHeader since=\"0.13.0\" />\n\n<br />\n\n## Example\n\n<Canvas>\n  <Story name=\"Default\">\n    {(args) => {\n      return (\n        <AvatarGroup {...args}>\n          <Avatar icon=\"employee\" />\n          <Avatar initials=\"JD\" />\n          <Avatar>{Avatar1}</Avatar>\n          <Avatar>{Avatar2}</Avatar>\n        </AvatarGroup>\n      );\n    }}\n  </Story>\n</Canvas>\n\n## Properties\n\n<ArgsTableWithNote story=\"Default\" />\n\n<Markdown>{Description}</Markdown>\n\n<DomRefTable rows={AvatarGroupDomRef} />\n\n<Footer />\n"],"file":"assets/AvatarGroup.stories-9eba90a1.js"}