{"version":3,"mappings":"wKAoGA,MAAAA,EAAAC,EAAiB,eACf,iFACoF,6DACrB,GAC9D,WACQ,IAAAC,EAAA,oiBAEX,EAEAF,EAAA,uBAEAA,EAAA,cAAwB,WAAAG,EAAA,IAExB","names":["CheckBox","withWebComponent","__vitePreload","ValueState"],"sources":["../../packages/main/src/webComponents/CheckBox/index.tsx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/CheckBox.js';\nimport type { WrappingType } from '../../enums/index.js';\nimport { ValueState } from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n\ninterface CheckBoxAttributes {\n  /**\n   * Defines the accessible ARIA name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the component\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines if the component is checked.\n   *\n   * **Note:** The property can be changed with user interaction, either by cliking/tapping on the component, or by pressing the Enter or Space key.\n   */\n  checked?: boolean;\n  /**\n   * Defines whether the component is disabled.\n   *\n   * **Note:** A disabled component is completely noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Defines whether the component is displayed as partially checked.\n   *\n   * **Note:** The indeterminate state can be set only programmatically and can’t be achieved by user interaction and the resulting visual state depends on the values of the `indeterminate` and `checked` properties:\n   *\n   * *   If the component is checked and indeterminate, it will be displayed as partially checked\n   * *   If the component is checked and it is not indeterminate, it will be displayed as checked\n   * *   If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute\n   */\n  indeterminate?: boolean;\n  /**\n   * Determines the name with which the component will be submitted in an HTML form.\n   *\n   * **Important:** For the `name` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   *\n   * **Note:** When set, a native `input` HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n   */\n  name?: string;\n  /**\n   * Defines whether the component is read-only.\n   *\n   * **Note:** A read-only component is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the component is required.\n   */\n  required?: boolean;\n  /**\n   * Defines the text of the component.\n   */\n  text?: string;\n  /**\n   * Defines the value state of the component.\n   *\n   * **Note:**\n   *\n   * *   `Warning`\n   * *   `Error`\n   * *   `None`(default)\n   * *   `Success`\n   * *   `Information`\n   */\n  valueState?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines whether the component text wraps when there is not enough space.\n   * **Note:** for option \"Normal\" the text will wrap and the words will not be broken based on hyphenation.\n   */\n  wrappingType?: WrappingType | keyof typeof WrappingType;\n}\n\nexport interface CheckBoxDomRef extends CheckBoxAttributes, Ui5DomRef {}\n\nexport interface CheckBoxPropTypes extends CheckBoxAttributes, Omit<CommonProps, 'onChange'> {\n  /**\n   * Fired when the component checked state changes.\n   */\n  onChange?: (event: Ui5CustomEvent<CheckBoxDomRef>) => void;\n}\n\n/**\n * Allows the user to set a binary value, such as true/false or yes/no for an item.\n *\n * The `CheckBox` component consists of a box and a label that describes its purpose. If it's checked, an indicator is displayed inside the box. To check/uncheck the `CheckBox`, the user has to click or tap the square box or its label.\n *\n * The `CheckBox` component only has 2 states - checked and unchecked. Clicking or tapping toggles the `CheckBox` between checked and unchecked state.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-CheckBox)\n */\nconst CheckBox = withWebComponent<CheckBoxPropTypes, CheckBoxDomRef>(\n  'ui5-checkbox',\n  ['accessibleName', 'accessibleNameRef', 'name', 'text', 'valueState', 'wrappingType'],\n  ['checked', 'disabled', 'indeterminate', 'readonly', 'required'],\n  [],\n  ['change'],\n  () => import('@ui5/webcomponents/dist/CheckBox.js')\n);\n\nCheckBox.displayName = 'CheckBox';\n\nCheckBox.defaultProps = {\n  valueState: ValueState.None\n};\n\nexport { CheckBox };\n"],"file":"assets/index-f47d858a.js"}