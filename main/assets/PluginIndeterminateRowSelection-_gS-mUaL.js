import{j as t}from"./jsx-runtime-DtaoT6pD.js";import{I as n}from"./DomRefTable.module-5WwzUwG5.js";import{M as p,C as a}from"./chunk-HLWAVYOI-n7MrcCCc.js";import"./index-OjgoNOWw.js";import{F as s}from"./Footer-cixRgl9U.js";import{M as l}from"./index-CpDM34eY.js";import{c}from"./AnalyticalTable.stories-wRZsq06Y.js";import{u as m}from"./index-RwE9nQVW.js";import"./react-jss.esm-tmBtHfec.js";import"./index-z_kNdanE.js";import"./clsx-Zbgk8kpT.js";import"./i18n-defaults-EHbh3l3V.js";import"./i18nBundle-h5yKZf-0.js";import"./VersionInfo-yX_RFFR1.js";import"./I18nContext-VUOpdMoH.js";import"./useIsomorphicLayoutEffect-s31TYDr7.js";import"./ThemingParameters-UghqSl-x.js";import"./index-DWXxr99t.js";import"./UI5Element-4kitL615.js";import"./CustomElementsScopeUtils-icazltFf.js";import"./index-QYh6idnL.js";import"./ModalsContext-0q87fkkd.js";import"./CssSizeVariables-loCRUewX.js";import"./CustomVariables-jcpx1a4M.js";import"./GlobalStyleClasses-kWTEndz_.js";import"./addCustomCSSWithScoping-kI6DTjO7.js";import"./utils-jDGQm03y.js";import"./index-ru9JVOl8.js";import"./iframe-mnmm-wZe.js";import"../sb-preview/runtime.js";import"./withWebComponent-y_2h_qsG.js";import"./slot-HSrR9XJ-.js";import"./Icon-Js7kozs_.js";import"./Icons-4dOk8XAM.js";import"./Integer-kog98579.js";import"./class-map-aNJl42Aw.js";import"./i18n-defaults-9rb3FZ03.js";import"./index-A00chfo8.js";import"./Avatar-ilP4dNAW.js";import"./ResizeHandler-_S6lmbp5.js";import"./employee-MVCfoSat.js";import"./alert-HOiYa7NP.js";import"./index-aypobGTy.js";import"./AriaLabelHelper-RbKlVwzD.js";import"./index-dUEZ2ePL.js";import"./Link-GTmnzkaf.js";import"./MarkedEvents-aYv14vsS.js";import"./WrappingType-avPrqc94.js";import"./react-18-1WT2dSvK.js";import"./_baseForOwn-UZJwRxDU.js";import"./mapValues-HzTlT2lF.js";import"./_baseUniq-JVyScZ-n.js";import"./index-PPLHz8o0.js";import"./index-UBYxvHMA.js";import"./index-f1R-0qJ_.js";import"./index-tQzSB4V8.js";import"./Label-HOoOa3vg.js";import"./index-Wtp7dgnG.js";import"./Button-pPgusm5x.js";import"./index-ZctuE7XR.js";import"./Popover-7MGo300E.js";import"./PopupUtils-9DzRw33t.js";import"./getActiveElement-IIKAy3xo.js";import"./PopupsCommon.css-kmG9UuxN.js";import"./FocusableElements-eRJsgpvJ.js";import"./isElementHidden-d3-Fo4V6.js";import"./decline-G6ZpYmOu.js";import"./i18n-defaults-CPLPRuO1.js";import"./MediaRange-sEMt71Ve.js";import"./style-map-cRo_ADDP.js";import"./BrowserScrollbar.css-IWLYYIFQ.js";import"./information-8_EqQaO_.js";import"./delete-1TokmA9Q.js";import"./ListItem-BEPSw87m.js";import"./ListItemBase-MAK9PlY7.js";import"./ItemNavigation-WwQ-GsFh.js";import"./TabbableElements-aYIPY3zp.js";import"./debounce-8VpZswfd.js";import"./BusyIndicator-OqXUphwC.js";import"./RadioButton-C3splJyU.js";import"./ValueState-zUcANXoY.js";import"./CheckBox-gO88dNhA.js";import"./accept-vD_qClvM.js";import"./HasPopup-9BAMrqbD.js";import"./slim-arrow-right-ua4N9pvL.js";import"./settings-z1dmT-al.js";import"./index-Jm2lAFsC.js";import"./filter-4GKlysnB.js";import"./group-2-v-8GNNzv.js";import"./index-f-WjSBfi.js";import"./stopPropagation-dV8jBYUw.js";import"./index-IBuKw03b.js";import"./CustomListItem-c_drmvf-.js";import"./index-8fZUsBbV.js";import"./index-Q9Z7m0P9.js";import"./StandardListItem-JXqWltTh.js";import"./ValueState-I_-hGNIb.js";import"./index-EYSIIIT-.js";import"./Input-3kxgj_Fk.js";import"./Suggestions.css--Mic9Aj5.js";import"./ResponsivePopoverCommon.css-A5n-yhJ1.js";import"./ValueStateMessage.css-_uSbOmUY.js";import"./navigation-down-arrow-3QcfVzmb.js";import"./navigation-right-arrow-8oibEGaS.js";import"./useCurrentTheme-C7Cc_nsL.js";import"./index-LUAYCGsD.js";import"./index-k2QTyyon.js";import"./index-PVI6Tpgd.js";import"./Title-RSxLzkgC.js";import"./useIsomorphicId-G0VPUEKO.js";import"./useIsRTL-YHHOUupY.js";import"./debounce-F9irgL9Y.js";import"./index-9VvcOxud.js";import"./index-NQDTRSxs.js";import"./Select-jNWK1Z_L.js";import"./InvisibleMessage-R9CLsv22.js";import"./slim-arrow-down-MOwVcJ-F.js";import"./ResponsivePopover-EwdKzLnG.js";import"./Dialog-qvYGNCPg.js";import"./index-jRIHdhWy.js";import"./index-OAQlwkvx.js";import"./ToggleButton-HebtP3hC.js";import"./index-jVtF-dKx.js";import"./GroupHeaderListItem-Z_igfQ3w.js";import"./Token-5WrctUSB.js";import"./ScrollEnablement-leelvQIa.js";import"./animate-Pj1TncyK.js";import"./ComboBoxItem-5M_4g9kV.js";function De(i={}){const{wrapper:o}=Object.assign({},m(),i.components);return o?t.jsx(o,Object.assign({},i,{children:t.jsx(r,{})})):r();function r(){const e=Object.assign({h1:"h1",p:"p",code:"code",strong:"strong",h2:"h2",pre:"pre",h4:"h4"},m(),i.components);return t.jsxs(t.Fragment,{children:[t.jsx(p,{title:"Data Display / AnalyticalTable / Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(e.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(n,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,t.jsxs(e.p,{children:["The ",t.jsx(e.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,t.jsx(e.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,t.jsxs(e.p,{children:[t.jsx(e.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,t.jsx(l,{hideCloseButton:!0,children:t.jsxs(t.Fragment,{children:[" The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",t.jsx(e.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,t.jsx(e.h2,{id:"example",children:"Example"}),`
`,t.jsx(a,{sourceState:"none",of:c}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-jsx",children:`<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.MultiSelect}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={[AnalyticalTableHooks.useIndeterminateRowSelection()]}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,t.jsx(e.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,t.jsx(e.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,t.jsxs(e.p,{children:["The callback is fired, every time the internal ",t.jsx(e.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,t.jsx(e.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,t.jsx(s,{})]})}}export{De as default};
