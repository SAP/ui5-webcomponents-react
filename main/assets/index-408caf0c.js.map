{"version":3,"file":"index-408caf0c.js","sources":["../../packages/main/src/enums/MessageBoxActions.ts","../../packages/main/src/enums/MessageBoxTypes.ts","../../node_modules/@ui5/webcomponents-icons/dist/v4/sys-help-2.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/sys-help-2.js","../../node_modules/@ui5/webcomponents-icons/dist/sys-help-2.js","../../packages/main/src/components/MessageBox/MessageBox.jss.ts","../../packages/main/src/components/MessageBox/index.tsx"],"sourcesContent":["export enum MessageBoxActions {\n  Abort = 'Abort',\n  Cancel = 'Cancel',\n  Close = 'Close',\n  Delete = 'Delete',\n  Ignore = 'Ignore',\n  No = 'No',\n  OK = 'OK',\n  Retry = 'Retry',\n  Yes = 'Yes'\n}\n","export enum MessageBoxTypes {\n  Confirm = 'Confirm',\n  Error = 'Error',\n  Information = 'Information',\n  Success = 'Success',\n  Warning = 'Warning'\n}\n","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"sys-help-2\";\nconst pathData = \"M256 0q53 0 99.5 20T437 74.5t55 81.5 20 100-20 99.5-55 81.5-81.5 55-99.5 20-100-20-81.5-55T20 355.5 0 256t20-100 54.5-81.5T156 20 256 0zm-5 425q15 0 26-11t11-26-11-25.5-26-10.5-25.5 10.5T215 388t10.5 26 25.5 11zm101-239q0-32-27-57t-77-25q-46 0-72.5 24T146 187h52q5-24 17.5-32.5T251 146t35 12.5 12 27.5q0 10-2.5 14T282 215l-20 17q-15 12-23 21t-11.5 18.5-4.5 21-1 27.5h50q0-12 .5-19t3-12.5T283 278t15-13l27-25 16-18 9-16z\";\nconst ltr = true;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/sys-help-2\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"sys-help-2\";\nconst pathData = \"M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm32 289q31-10 50.5-36.5T358 192q0-43-29.5-72.5T256 90q-21 0-39.5 8T184 118.5 162 148t-8 35q0 20 9 30.5t23 10.5q13 0 22.5-9t9.5-23q0-16 11-27t27-11 27 11 11 27-11 27-27 11q-14 0-23 9.5t-9 22.5v26q0 14 9 23t23 9q13 0 22-9t10-22zm-32 127q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z\";\nconst ltr = true;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/sys-help-2\";\nexport { pathData, ltr, accData };","import { isLegacyThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/sys-help-2.js\";\nimport { pathData as pathDatav5 } from \"./v5/sys-help-2.js\";\n\nconst pathData = isLegacyThemeFamily() ? pathDatav4 : pathDatav5;\n\nexport default \"sys-help-2\";\nexport { pathData, ltr, accData };","import { CssSizeVariables, ThemingParameters } from '@ui5/webcomponents-react-base';\n\nconst style = {\n  messageBox: {\n    '&[data-type=\"Confirm\"]': {\n      '&::part(header)': {\n        boxShadow: `inset 0 -0.0625rem ${ThemingParameters.sapNeutralBorderColor}, ${ThemingParameters.sapContent_HeaderShadow}`\n      },\n      '& $header': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n      }\n    }\n  },\n  header: {\n    display: 'flex',\n    height: CssSizeVariables.ui5WcrBarHeight,\n    textAlign: 'center',\n    width: '100%',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    borderBottom: `1px solid var(--messageBoxBorderColor)`,\n    color: ThemingParameters.sapContent_LabelColor,\n    fontSize: '1rem',\n    '& ui5-icon:first-child': {\n      width: '1rem',\n      height: '1rem'\n    },\n    '& [ui5-title]': {\n      fontSize: '1rem'\n    }\n  },\n  spacer: { width: '0.5rem' },\n  confirmIcon: { color: ThemingParameters.sapNeutralColor },\n  footer: {\n    height: CssSizeVariables.ui5WcrBarHeight,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    '& > *': {\n      margin: '0 0.25rem'\n    },\n    '& > ui5-button': {\n      display: 'flex',\n      minWidth: '4rem'\n    }\n  }\n};\n\nexport default style;\n","'use client';\n\nimport iconSysHelp from '@ui5/webcomponents-icons/dist/sys-help-2.js';\nimport { enrichEventWithDetails, useI18nBundle, useIsomorphicId } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport type { ReactNode } from 'react';\nimport React, { cloneElement, forwardRef, isValidElement } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport {\n  ButtonDesign,\n  MessageBoxActions,\n  MessageBoxTypes,\n  PopupAccessibleRole,\n  TitleLevel,\n  ValueState\n} from '../../enums/index.js';\nimport {\n  ABORT,\n  CANCEL,\n  CLOSE,\n  CONFIRMATION,\n  DELETE,\n  ERROR,\n  IGNORE,\n  INFORMATION,\n  NO,\n  OK,\n  RETRY,\n  SUCCESS,\n  WARNING,\n  YES\n} from '../../i18n/i18n-defaults.js';\nimport { stopPropagation } from '../../internal/stopPropagation.js';\nimport type { ButtonPropTypes, DialogDomRef, DialogPropTypes } from '../../webComponents/index.js';\nimport { Button, Dialog, Icon, Title } from '../../webComponents/index.js';\nimport { Text } from '../Text/index.js';\nimport styles from './MessageBox.jss.js';\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\ntype MessageBoxAction = MessageBoxActions | keyof typeof MessageBoxActions | string;\n\nexport interface MessageBoxPropTypes\n  extends Omit<\n    DialogPropTypes,\n    'children' | 'footer' | 'headerText' | 'onAfterClose' | 'state' | 'accessibleNameRef' | 'open' | 'initialFocus'\n  > {\n  /**\n   * Defines the IDs of the elements that label the component.\n   *\n   * __Note:__ Per default the prop receives the IDs of the header and the content.\n   */\n  accessibleNameRef?: DialogPropTypes['accessibleNameRef'];\n  /**\n   * Flag whether the Message Box should be opened or closed\n   */\n  open?: DialogPropTypes['open'];\n  /**\n   * A custom title for the MessageBox. If not present, it will be derived from the `MessageBox` type.\n   */\n  titleText?: DialogPropTypes['headerText'];\n  /**\n   * Defines the content of the `MessageBox`.\n   *\n   * **Note:** Although this prop accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design and a11y capabilities.\n   */\n  children: ReactNode | ReactNode[];\n  /**\n   * Array of actions of the MessageBox. Those actions will be transformed into buttons in the `MessageBox` footer.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `MessageBoxAction`s (text) or the `Button` component in order to preserve the intended.\n   */\n  actions?: (MessageBoxAction | ReactNode)[];\n  /**\n   * Specifies which action of the created dialog will be emphasized.\n   *\n   * @since 0.16.3\n   */\n  emphasizedAction?: MessageBoxAction;\n  /**\n   * A custom icon. If not present, it will be derived from the `MessageBox` type.\n   */\n  icon?: ReactNode;\n  /**\n   * Defines the type of the `MessageBox` with predefined title, icon, actions and a visual highlight color.\n   */\n  type?: MessageBoxTypes | keyof typeof MessageBoxTypes;\n  /**\n   * Defines the ID of the HTML Element or the `MessageBoxAction`, which will get the initial focus.\n   */\n  initialFocus?: MessageBoxAction;\n  /**\n   * Callback to be executed when the `MessageBox` is closed (either by pressing on one of the `actions` or by pressing the `ESC` key). `event.detail.action` contains the pressed action button.\n   */\n  onClose?: (event: CustomEvent<{ action: MessageBoxAction }>) => void;\n}\n\nconst useStyles = createUseStyles(styles, { name: 'MessageBox' });\n\nconst getIcon = (icon, type, classes) => {\n  if (isValidElement(icon)) return icon;\n  switch (type) {\n    case MessageBoxTypes.Confirm:\n      return (\n        <Icon name={iconSysHelp} aria-hidden=\"true\" accessibleRole=\"presentation\" className={classes.confirmIcon} />\n      );\n    default:\n      return null;\n  }\n};\n\nconst convertMessageBoxTypeToState = (type: MessageBoxTypes) => {\n  switch (type) {\n    case MessageBoxTypes.Information:\n      return ValueState.Information;\n    case MessageBoxTypes.Success:\n      return ValueState.Success;\n    case MessageBoxTypes.Warning:\n      return ValueState.Warning;\n    case MessageBoxTypes.Error:\n      return ValueState.Error;\n    default:\n      return ValueState.None;\n  }\n};\n\nconst getActions = (actions, type): (string | ReactNode)[] => {\n  if (actions && actions.length > 0) {\n    return actions;\n  }\n  if (type === MessageBoxTypes.Confirm) {\n    return [MessageBoxActions.OK, MessageBoxActions.Cancel];\n  }\n  if (type === MessageBoxTypes.Error) {\n    return [MessageBoxActions.Close];\n  }\n  return [MessageBoxActions.OK];\n};\n\n/**\n * The `MessageBox` component provides easier methods to create a `Dialog`, such as standard alerts, confirmation dialogs, or arbitrary message dialogs.\n * For convenience, it also provides an `open` prop, so it is not necessary to attach a `ref` to open the `MessageBox`.\n */\nconst MessageBox = forwardRef<DialogDomRef, MessageBoxPropTypes>((props, ref) => {\n  const {\n    open,\n    type,\n    children,\n    className,\n    titleText,\n    icon,\n    actions,\n    emphasizedAction,\n    onClose,\n    initialFocus,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const actionTranslations = {\n    [MessageBoxActions.Abort]: i18nBundle.getText(ABORT),\n    [MessageBoxActions.Cancel]: i18nBundle.getText(CANCEL),\n    [MessageBoxActions.Close]: i18nBundle.getText(CLOSE),\n    [MessageBoxActions.Delete]: i18nBundle.getText(DELETE),\n    [MessageBoxActions.Ignore]: i18nBundle.getText(IGNORE),\n    [MessageBoxActions.No]: i18nBundle.getText(NO),\n    [MessageBoxActions.OK]: i18nBundle.getText(OK),\n    [MessageBoxActions.Retry]: i18nBundle.getText(RETRY),\n    [MessageBoxActions.Yes]: i18nBundle.getText(YES)\n  };\n\n  const titleToRender = () => {\n    if (titleText) {\n      return titleText;\n    }\n    switch (type) {\n      case MessageBoxTypes.Confirm:\n        return i18nBundle.getText(CONFIRMATION);\n      case MessageBoxTypes.Error:\n        return i18nBundle.getText(ERROR);\n      case MessageBoxTypes.Information:\n        return i18nBundle.getText(INFORMATION);\n      case MessageBoxTypes.Success:\n        return i18nBundle.getText(SUCCESS);\n      case MessageBoxTypes.Warning:\n        return i18nBundle.getText(WARNING);\n      default:\n        return null;\n    }\n  };\n\n  const handleOnClose = (e) => {\n    const { action } = e.target.dataset;\n    stopPropagation(e);\n    onClose(enrichEventWithDetails(e, { action }));\n  };\n\n  const messageBoxId = useIsomorphicId();\n  const internalActions = getActions(actions, type);\n\n  const getInitialFocus = () => {\n    const actionToFocus = internalActions.find((action) => action === initialFocus);\n    if (typeof actionToFocus === 'string') {\n      return `${messageBoxId}-action-${actionToFocus}`;\n    }\n    return initialFocus;\n  };\n\n  // @ts-expect-error: footer, headerText and onAfterClose are already omitted via prop types\n  const { footer: _0, headerText: _1, onAfterClose: _2, ...restWithoutOmitted } = rest;\n\n  const iconToRender = getIcon(icon, type, classes);\n  const needsCustomHeader = !props.header && !!iconToRender;\n\n  return (\n    <Dialog\n      open={open}\n      ref={ref}\n      className={clsx(classes.messageBox, className)}\n      onAfterClose={open ? handleOnClose : stopPropagation}\n      accessibleNameRef={needsCustomHeader ? `${messageBoxId}-title ${messageBoxId}-text` : undefined}\n      accessibleRole={PopupAccessibleRole.AlertDialog}\n      {...restWithoutOmitted}\n      headerText={titleToRender()}\n      state={convertMessageBoxTypeToState(type as MessageBoxTypes)}\n      initialFocus={getInitialFocus()}\n      data-type={type}\n    >\n      {needsCustomHeader && (\n        <header slot=\"header\" className={classes.header}>\n          {iconToRender}\n          {iconToRender && <span className={classes.spacer} />}\n          <Title id={`${messageBoxId}-title`} level={TitleLevel.H1}>\n            {titleToRender()}\n          </Title>\n        </header>\n      )}\n      <Text id={`${messageBoxId}-text`}>{children}</Text>\n      <footer slot=\"footer\" className={classes.footer}>\n        {internalActions.map((action, index) => {\n          if (typeof action !== 'string' && isValidElement(action)) {\n            return cloneElement<ButtonPropTypes | { 'data-action': string }>(action, {\n              onClick: action?.props?.onClick\n                ? (e) => {\n                    action?.props?.onClick(e);\n                    handleOnClose(e);\n                  }\n                : handleOnClose,\n              'data-action': action?.props?.['data-action'] ?? `${index}: custom action`\n            });\n          }\n          if (typeof action === 'string') {\n            return (\n              <Button\n                id={`${messageBoxId}-action-${action}`}\n                key={`${action}-${index}`}\n                design={emphasizedAction === action ? ButtonDesign.Emphasized : ButtonDesign.Transparent}\n                onClick={handleOnClose}\n                data-action={action}\n              >\n                {actionTranslations[action] ?? action}\n              </Button>\n            );\n          }\n          return null;\n        })}\n      </footer>\n    </Dialog>\n  );\n});\n\nMessageBox.displayName = 'MessageBox';\n\nMessageBox.defaultProps = {\n  open: false,\n  type: MessageBoxTypes.Confirm,\n  emphasizedAction: MessageBoxActions.OK,\n  actions: []\n};\n\nexport { MessageBox };\n"],"names":["MessageBoxActions","MessageBoxTypes","name","pathData","ltr","collection","packageName","registerIcon","isLegacyThemeFamily","iconSysHelp","style","ThemingParameters","CssSizeVariables","styles","useStyles","createUseStyles","getIcon","icon","type","classes","isValidElement","jsx","Icon","convertMessageBoxTypeToState","ValueState","getActions","actions","MessageBox","forwardRef","props","ref","open","children","className","titleText","emphasizedAction","onClose","initialFocus","rest","i18nBundle","useI18nBundle","actionTranslations","ABORT","CANCEL","CLOSE","DELETE","IGNORE","NO","OK","RETRY","YES","titleToRender","CONFIRMATION","ERROR","INFORMATION","SUCCESS","WARNING","handleOnClose","e","action","stopPropagation","enrichEventWithDetails","messageBoxId","useIsomorphicId","internalActions","getInitialFocus","actionToFocus","_0","_1","_2","restWithoutOmitted","iconToRender","needsCustomHeader","jsxs","Dialog","clsx","PopupAccessibleRole","Title","TitleLevel","Text","index","cloneElement","_a","_b","Button","ButtonDesign"],"mappings":"ghCAAY,IAAAA,GAAAA,IACVA,EAAA,MAAQ,QACRA,EAAA,OAAS,SACTA,EAAA,MAAQ,QACRA,EAAA,OAAS,SACTA,EAAA,OAAS,SACTA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,MAAQ,QACRA,EAAA,IAAM,MATIA,IAAAA,GAAA,CAAA,CAAA,ECAAC,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,MAAQ,QACRA,EAAA,YAAc,cACdA,EAAA,QAAU,UACVA,EAAA,QAAU,UALAA,IAAAA,GAAA,CAAA,CAAA,ECEZ,MAAMC,GAAO,aACPC,EAAW,saACXC,GAAM,GAENC,GAAa,eACbC,GAAc,2BAEpBC,EAAaL,GAAM,CAAA,SAAEC,EAAQ,IAAEC,GAAG,WAAEC,GAAU,YAAEC,EAAW,CAAE,ECP7D,MAAMJ,GAAO,aACPC,EAAW,gaACXC,GAAM,GAENC,GAAa,eACbC,GAAc,2BAEpBC,EAAaL,GAAM,CAAE,SAAAC,EAAU,IAAAC,GAAK,WAAAC,GAAY,YAAAC,EAAW,CAAE,ECL5CE,EAAqB,EAEtC,MAAAC,GAAe,aCJTC,GAAQ,CACZ,WAAY,CACV,yBAA0B,CACxB,kBAAmB,CACjB,UAAW,sBAAsBC,EAAkB,qBAAqB,KAAKA,EAAkB,uBAAuB,EACxH,EACA,YAAa,CACX,uCAAwCA,EAAkB,sBAC5D,CACF,CACF,EACA,OAAQ,CACN,QAAS,OACT,OAAQC,EAAiB,gBACzB,UAAW,SACX,MAAO,OACP,WAAY,SACZ,UAAW,aACX,aAAc,yCACd,MAAOD,EAAkB,sBACzB,SAAU,OACV,yBAA0B,CACxB,MAAO,OACP,OAAQ,MACV,EACA,gBAAiB,CACf,SAAU,MACZ,CACF,EACA,OAAQ,CAAE,MAAO,QAAS,EAC1B,YAAa,CAAE,MAAOA,EAAkB,eAAgB,EACxD,OAAQ,CACN,OAAQC,EAAiB,gBACzB,MAAO,OACP,QAAS,OACT,WAAY,SACZ,eAAgB,WAChB,QAAS,CACP,OAAQ,WACV,EACA,iBAAkB,CAChB,QAAS,OACT,SAAU,MACZ,CACF,CACF,EAEAC,GAAeH,GC+CfI,GAAAC,EAAAF,GAAA,CAAA,KAAA,YAAA,CAAA,EAEAG,GAAA,CAAAC,EAAAC,EAAAC,IAAA,CACE,GAAAC,EAAAA,eAAAH,CAAA,EAA0B,OAAAA,EAC1B,OAAAC,EAAA,CAAc,KAAAjB,EAAA,QAEV,OAAAoB,EAAA,IAAAC,GAAA,CAAA,KAAAb,GAAA,cAAA,OAAA,eAAA,eAAA,UAAAU,EAAA,WAAA,CAAA,EAC4G,QAG5G,OAAA,IAAO,CAEb,EAEAI,GAAAL,GAAA,CACE,OAAAA,EAAA,CAAc,KAAAjB,EAAA,YAEV,OAAAuB,EAAA,YAAkB,KAAAvB,EAAA,QAElB,OAAAuB,EAAA,QAAkB,KAAAvB,EAAA,QAElB,OAAAuB,EAAA,QAAkB,KAAAvB,EAAA,MAElB,OAAAuB,EAAA,MAAkB,QAElB,OAAAA,EAAA,IAAkB,CAExB,EAEAC,GAAA,CAAAC,EAAAR,IACEQ,GAAAA,EAAA,OAAA,EACEA,EAEFR,IAAAjB,EAAA,QACE,CAAAD,EAAA,GAAAA,EAAA,MAAA,EAEFkB,IAAAjB,EAAA,MACE,CAAAD,EAAA,KAAA,EAEF,CAAAA,EAAA,EAAA,EAOF2B,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACE,KAAA,CAAM,KAAAC,EACJ,KAAAb,EACA,SAAAc,EACA,UAAAC,EACA,UAAAC,EACA,KAAAjB,EACA,QAAAS,EACA,iBAAAS,EACA,QAAAC,EACA,aAAAC,EACA,GAAAC,CACG,EAAAT,EAGLV,EAAAL,KAEAyB,EAAAC,EAAA,0BAAA,EAEAC,EAAA,CAA2B,CAAAzC,EAAA,KAAA,EAAAuC,EAAA,QAAAG,CAAA,EAC0B,CAAA1C,EAAA,MAAA,EAAAuC,EAAA,QAAAI,CAAA,EACE,CAAA3C,EAAA,KAAA,EAAAuC,EAAA,QAAAK,CAAA,EACF,CAAA5C,EAAA,MAAA,EAAAuC,EAAA,QAAAM,CAAA,EACE,CAAA7C,EAAA,MAAA,EAAAuC,EAAA,QAAAO,CAAA,EACA,CAAA9C,EAAA,EAAA,EAAAuC,EAAA,QAAAQ,CAAA,EACR,CAAA/C,EAAA,EAAA,EAAAuC,EAAA,QAAAS,EAAA,EACA,CAAAhD,EAAA,KAAA,EAAAuC,EAAA,QAAAU,EAAA,EACM,CAAAjD,EAAA,GAAA,EAAAuC,EAAA,QAAAW,EAAA,CACJ,EAGjDC,EAAA,IAAA,CACE,GAAAjB,EACE,OAAAA,EAEF,OAAAhB,EAAA,CAAc,KAAAjB,EAAA,QAEV,OAAAsC,EAAA,QAAAa,EAAA,EAAsC,KAAAnD,EAAA,MAEtC,OAAAsC,EAAA,QAAAc,EAAA,EAA+B,KAAApD,EAAA,YAE/B,OAAAsC,EAAA,QAAAe,EAAA,EAAqC,KAAArD,EAAA,QAErC,OAAAsC,EAAA,QAAAgB,EAAA,EAAiC,KAAAtD,EAAA,QAEjC,OAAAsC,EAAA,QAAAiB,EAAA,EAAiC,QAEjC,OAAA,IAAO,CACX,EAGFC,EAAAC,GAAA,CACE,KAAA,CAAA,OAAAC,CAAA,EAAAD,EAAA,OAAA,QACAE,EAAAF,CAAA,EACAtB,EAAAyB,EAAAH,EAAA,CAAA,OAAAC,CAAA,CAAA,CAAA,CAA6C,EAG/CG,EAAAC,KACAC,EAAAvC,GAAAC,EAAAR,CAAA,EAEA+C,EAAA,IAAA,CACE,MAAAC,EAAAF,EAAA,KAAAL,GAAAA,IAAAtB,CAAA,EACA,OAAA,OAAA6B,GAAA,SACE,GAAAJ,CAAA,WAAAI,CAAA,GAEF7B,CAAO,EAIT,CAAA,OAAA8B,GAAA,WAAAC,GAAA,aAAAC,GAAA,GAAAC,CAAA,EAAAhC,EAEAiC,EAAAvD,GAAAC,EAAAC,EAAAC,CAAA,EACAqD,EAAA,CAAA3C,EAAA,QAAA,CAAA,CAAA0C,EAEA,OAAAE,EAAA,KACEC,GAAC,CAAA,KAAA3C,EACC,IAAAD,EACA,UAAA6C,EAAAxD,EAAA,WAAAc,CAAA,EAC6C,aAAAF,EAAA0B,EAAAG,EACR,kBAAAY,EAAA,GAAAV,CAAA,UAAAA,CAAA,QAAA,OACiD,eAAAc,GAAA,YAClD,GAAAN,EAChC,WAAAnB,EAAA,EACsB,MAAA5B,GAAAL,CAAA,EACiC,aAAA+C,EAAA,EAC7B,YAAA/C,EACnB,SAAA,CAEVsD,GAAAC,EAAAA,KAAA,SAAA,CAAA,KAAA,SAAA,UAAAtD,EAAA,OAAA,SAAA,CAEIoD,EAAAA,GAAAlD,EAAA,IAAA,OAAA,CAAA,UAAAF,EAAA,OAAA,EACiDE,EAAAA,IAAAwD,GAAA,CAAA,GAAA,GAAAf,CAAA,SAAA,MAAAgB,GAAA,GAAA,SAAA3B,EAAA,CAAA,CAAA,CAGlD,EAAA,EACF9B,MAAA0D,GAAA,CAAA,GAAA,GAAAjB,CAAA,QAAA,SAAA9B,EAAA,EAE0CX,EAAAA,IAAA,SAAA,CAAA,KAAA,SAAA,UAAAF,EAAA,OAAA,SAAA6C,EAAA,IAAA,CAAAL,EAAAqB,IAAA,SAGxC,OAAA,OAAArB,GAAA,UAAAvC,EAAA,eAAAuC,CAAA,EACEsB,EAAAA,aAAAtB,EAAA,CAAyE,SAAAuB,EAAAvB,GAAA,YAAAA,EAAA,QAAA,MAAAuB,EAAA,QAAAxB,GAAA,QAGjEwB,EAAAvB,GAAA,YAAAA,EAAA,QAAA,MAAAuB,EAAA,QAAAxB,GACAD,EAAAC,CAAA,CAAe,EAAAD,EAEjB,gBAAA0B,EAAAxB,GAAA,YAAAA,EAAA,QAAA,YAAAwB,EAAA,iBAAA,GAAAH,CAAA,iBACqD,CAAA,EAG7D,OAAArB,GAAA,SACEtC,EAAA,IACE+D,GAAC,CAAA,GAAA,GAAAtB,CAAA,WAAAH,CAAA,GACqC,OAAAxB,IAAAwB,EAAA0B,EAAA,WAAAA,EAAA,YAEyC,QAAA5B,EACpE,cAAAE,EACI,SAAAlB,EAAAkB,CAAA,GAAAA,CAEkB,EAAA,GAAAA,CAAA,IAAAqB,CAAA,EALR,EAS7B,IAAO,CAAA,EAAA,CAEX,CAAA,CAAA,CAGN,CAAA,EAEArD,EAAA,YAAA,aAEAA,EAAA,aAAA,CAA0B,KAAA,GAClB,KAAA1B,EAAA,QACgB,iBAAAD,EAAA,GACc,QAAA,CAAA,CAEtC;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[2,3,4]}