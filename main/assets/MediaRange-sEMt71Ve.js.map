{"version":3,"file":"MediaRange-sEMt71Ve.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/MediaRange.js"],"sourcesContent":["const mediaRanges = new Map();\nconst DEAFULT_RANGE_SET = new Map();\nDEAFULT_RANGE_SET.set(\"S\", [0, 599]);\nDEAFULT_RANGE_SET.set(\"M\", [600, 1023]);\nDEAFULT_RANGE_SET.set(\"L\", [1024, 1439]);\nDEAFULT_RANGE_SET.set(\"XL\", [1440, Infinity]);\n/**\n * Enumeration containing the names and settings of predefined screen width media query range sets.\n *\n * @namespace\n * @name MediaRange.RANGESETS\n * @public\n */\nvar RANGESETS;\n(function (RANGESETS) {\n    /**\n     * A 4-step range set (S-M-L-XL).\n     *\n     * The ranges of this set are:\n     * <ul>\n     * <li><code>\"S\"</code>: For screens smaller than 600 pixels.</li>\n     * <li><code>\"M\"</code>: For screens greater than or equal to 600 pixels and smaller than 1024 pixels.</li>\n     * <li><code>\"L\"</code>: For screens greater than or equal to 1024 pixels and smaller than 1440 pixels.</li>\n     * <li><code>\"XL\"</code>: For screens greater than or equal to 1440 pixels.</li>\n     * </ul>\n     *\n     * @name MediaRange.RANGESETS.RANGE_4STEPS\n     * @public\n     */\n    RANGESETS[\"RANGE_4STEPS\"] = \"4Step\";\n})(RANGESETS || (RANGESETS = {}));\n/**\n * Initializes a screen width media query range set.\n *\n * This initialization step makes the range set ready to be used for one of the other functions in namespace <code>MediaRange</code>.\n *\n * A range set can be defined as shown in the following example:\n * <pre>\n * MediaRange.initRangeSet(\"MyRangeSet\", [200, 400], [\"Small\", \"Medium\", \"Large\"]);\n * </pre>\n * This example defines the following named ranges:\n * <ul>\n * <li><code>\"Small\"</code>: For screens smaller than 200 pixels.</li>\n * <li><code>\"Medium\"</code>: For screens greater than or equal to 200 pixels and smaller than 400 pixels.</li>\n * <li><code>\"Large\"</code>: For screens greater than or equal to 400 pixels.</li>\n * </ul>\n *\n * @param {string} name The name of the range set to be initialized.\n * The name must be a valid id and consist only of letters and numeric digits.\n * @param {Range} [range] The given range set.\n * @name MediaRange.initRangeSet\n */\nconst initRangeSet = (name, range) => {\n    mediaRanges.set(name, range);\n};\n/**\n * Returns information about the current active range of the range set with the given name.\n *\n * If the optional parameter <code>width</code> is given, the active range will be determined for that width,\n * otherwise it is determined for the current window size.\n *\n * @param {string} name The name of the range set. The range set must be initialized beforehand ({@link MediaRange.initRangeSet})\n * @param {number} [width] An optional width, based on which the range should be determined;\n * If <code>width</code> is not provided, the window size will be used.\n * @returns {string} The name of the current active interval of the range set.\n *\n * @name MediaRange.getCurrentRange\n * @function\n * @public\n */\nconst getCurrentRange = (name, width = window.innerWidth) => {\n    let rangeSet = mediaRanges.get(name);\n    if (!rangeSet) {\n        rangeSet = mediaRanges.get(RANGESETS.RANGE_4STEPS);\n    }\n    let currentRangeName;\n    const effectiveWidth = Math.floor(width);\n    rangeSet.forEach((value, key) => {\n        if (effectiveWidth >= value[0] && effectiveWidth <= value[1]) {\n            currentRangeName = key;\n        }\n    });\n    return currentRangeName || [...rangeSet.keys()][0];\n};\n/**\n * API for screen width changes.\n *\n * @namespace\n * @name MediaRange\n */\nconst MediaRange = {\n    RANGESETS,\n    initRangeSet,\n    getCurrentRange,\n};\nMediaRange.initRangeSet(MediaRange.RANGESETS.RANGE_4STEPS, DEAFULT_RANGE_SET);\nexport default MediaRange;\n//# sourceMappingURL=MediaRange.js.map"],"names":["mediaRanges","DEAFULT_RANGE_SET","RANGESETS","initRangeSet","name","range","getCurrentRange","width","rangeSet","currentRangeName","effectiveWidth","value","key","MediaRange"],"mappings":"AAAA,MAAMA,EAAc,IAAI,IAClBC,EAAoB,IAAI,IAC9BA,EAAkB,IAAI,IAAK,CAAC,EAAG,GAAG,CAAC,EACnCA,EAAkB,IAAI,IAAK,CAAC,IAAK,IAAI,CAAC,EACtCA,EAAkB,IAAI,IAAK,CAAC,KAAM,IAAI,CAAC,EACvCA,EAAkB,IAAI,KAAM,CAAC,KAAM,GAAQ,CAAC,EAQ5C,IAAIC,GACH,SAAUA,EAAW,CAelBA,EAAU,aAAkB,OAChC,GAAGA,IAAcA,EAAY,CAAE,EAAC,EAsBhC,MAAMC,EAAe,CAACC,EAAMC,IAAU,CAClCL,EAAY,IAAII,EAAMC,CAAK,CAC/B,EAgBMC,EAAkB,CAACF,EAAMG,EAAQ,OAAO,aAAe,CACzD,IAAIC,EAAWR,EAAY,IAAII,CAAI,EAC9BI,IACDA,EAAWR,EAAY,IAAIE,EAAU,YAAY,GAErD,IAAIO,EACJ,MAAMC,EAAiB,KAAK,MAAMH,CAAK,EACvC,OAAAC,EAAS,QAAQ,CAACG,EAAOC,IAAQ,CACzBF,GAAkBC,EAAM,CAAC,GAAKD,GAAkBC,EAAM,CAAC,IACvDF,EAAmBG,EAE/B,CAAK,EACMH,GAAoB,CAAC,GAAGD,EAAS,KAAM,CAAA,EAAE,CAAC,CACrD,EAOMK,EAAa,CACf,UAAAX,EACA,aAAAC,EACA,gBAAAG,CACJ,EACAO,EAAW,aAAaA,EAAW,UAAU,aAAcZ,CAAiB","x_google_ignoreList":[0]}