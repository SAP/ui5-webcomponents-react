{"version":3,"file":"index-e79d6ee3.js","sources":["../../packages/main/src/components/MessageViewButton/index.tsx"],"sourcesContent":["'use client';\n\nimport alertIcon from '@ui5/webcomponents-icons/dist/alert.js';\nimport errorIcon from '@ui5/webcomponents-icons/dist/error.js';\nimport informationIcon from '@ui5/webcomponents-icons/dist/information.js';\nimport sysEnter2Icon from '@ui5/webcomponents-icons/dist/sys-enter-2.js';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ValueState } from '../../enums/index.js';\nimport type { ButtonDomRef, ButtonPropTypes } from '../../webComponents/index.js';\nimport { Button } from '../../webComponents/index.js';\n\nconst buttonStyles = Object.values(ValueState).reduce((acc, cur) => {\n  let cssType;\n  switch (cur) {\n    case ValueState.Error:\n      cssType = 'Negative';\n      break;\n    case ValueState.Success:\n      cssType = 'Success';\n      break;\n    case ValueState.Warning:\n      cssType = 'Critical';\n      break;\n    default:\n      cssType = 'Neutral';\n  }\n  const standard = `&[data-type=\"${cur}\"]`;\n  const hover = `&[data-type=\"${cur}\"]:hover`;\n  const active = `&[data-type=\"${cur}\"]:active`;\n  return {\n    ...acc,\n    [standard]: {\n      color: ThemingParameters[`sapButton_${cssType}_TextColor`],\n      background: ThemingParameters[`sapButton_${cssType}_Background`],\n      borderColor: ThemingParameters[`sapButton_${cssType}_BorderColor`]\n    },\n    [hover]: {\n      color: ThemingParameters[`sapButton_${cssType}_Hover_TextColor`],\n      background: ThemingParameters[`sapButton_${cssType}_Hover_Background`],\n      borderColor: ThemingParameters[`sapButton_${cssType}_Hover_BorderColor`]\n    },\n    [active]: {\n      color: ThemingParameters[`sapButton_${cssType}_Active_TextColor`],\n      background: ThemingParameters[`sapButton_${cssType}_Active_Background`],\n      borderColor: ThemingParameters[`sapButton_${cssType}_Active_BorderColor`]\n    }\n  };\n}, {});\n\nconst useStyles = createUseStyles(\n  {\n    btn: {\n      ...buttonStyles\n    }\n  },\n  { name: 'MessageViewButtonStyles' }\n);\n\nexport interface MessageViewButtonProptypes\n  extends Omit<ButtonPropTypes, 'design' | 'icon' | 'iconEnd' | 'children' | 'type' | 'submits'> {\n  /**\n   * Specifies the type of the button.\n   */\n  type?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines the number of messages for a given message type.\n   *\n   * __Note:__ Numbers smaller than 2 are not displayed.\n   */\n  counter?: number;\n}\n\nconst getIcon = (type) => {\n  switch (type) {\n    case ValueState.Error:\n      return errorIcon;\n    case ValueState.Success:\n      return sysEnter2Icon;\n    case ValueState.Warning:\n      return alertIcon;\n    default:\n      return informationIcon;\n  }\n};\n\n/**\n * The `MessageViewButton` can be used for opening a `Popover` containing the `MessageView` component. It should always reflect the message `type` with the highest severity.\n */\nconst MessageViewButton = forwardRef<ButtonDomRef, MessageViewButtonProptypes>((props, ref) => {\n  const { type = ValueState.Error, counter, className, ...rest } = props;\n  const classes = useStyles();\n  const classNames = clsx(classes.btn, className);\n  const icon = getIcon(type);\n\n  return (\n    <Button ref={ref} className={classNames} icon={icon} {...rest} data-type={type}>\n      {counter > 1 && counter}\n    </Button>\n  );\n});\n\nMessageViewButton.displayName = 'MessageViewButton';\n\nexport { MessageViewButton };\n"],"names":["buttonStyles","ValueState","acc","cur","cssType","standard","hover","active","ThemingParameters","useStyles","createUseStyles","getIcon","type","errorIcon","sysEnter2Icon","alertIcon","informationIcon","MessageViewButton","forwardRef","props","ref","counter","className","rest","classes","classNames","clsx","icon","jsx","Button"],"mappings":"0ZAcA,MAAAA,EAAA,OAAA,OAAAC,CAAA,EAAA,OAAA,CAAAC,EAAAC,IAAA,CACE,IAAAC,EACA,OAAAD,EAAA,CAAa,KAAAF,EAAA,MAETG,EAAA,WACA,MAAA,KAAAH,EAAA,QAEAG,EAAA,UACA,MAAA,KAAAH,EAAA,QAEAG,EAAA,WACA,MAAA,QAEAA,EAAA,SAAU,CAEd,MAAAC,EAAA,gBAAAF,CAAA,KACAG,EAAA,gBAAAH,CAAA,WACAI,EAAA,gBAAAJ,CAAA,YACA,MAAA,CAAO,GAAAD,EACF,CAAAG,CAAA,EAAA,CACS,MAAAG,EAAA,aAAAJ,CAAA,YAAA,EAC+C,WAAAI,EAAA,aAAAJ,CAAA,aAAA,EACM,YAAAI,EAAA,aAAAJ,CAAA,cAAA,CACE,EACnE,CAAAE,CAAA,EAAA,CACS,MAAAE,EAAA,aAAAJ,CAAA,kBAAA,EACwD,WAAAI,EAAA,aAAAJ,CAAA,mBAAA,EACM,YAAAI,EAAA,aAAAJ,CAAA,oBAAA,CACE,EACzE,CAAAG,CAAA,EAAA,CACU,MAAAC,EAAA,aAAAJ,CAAA,mBAAA,EACwD,WAAAI,EAAA,aAAAJ,CAAA,oBAAA,EACM,YAAAI,EAAA,aAAAJ,CAAA,qBAAA,CACE,CAC1E,CAEJ,EAAA,CAAA,CAAA,EAEAK,EAAAC,EAAkB,CAChB,IAAA,CACO,GAAAV,CACA,CACL,EACF,CAAA,KAAA,yBAAA,CAEF,EAgBAW,EAAAC,GAAA,CACE,OAAAA,EAAA,CAAc,KAAAX,EAAA,MAEV,OAAAY,EAAO,KAAAZ,EAAA,QAEP,OAAAa,EAAO,KAAAb,EAAA,QAEP,OAAAc,EAAO,QAEP,OAAAC,CAAO,CAEb,EAKAC,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACE,KAAA,CAAA,KAAAR,EAAAX,EAAA,MAAA,QAAAoB,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAJ,EACAK,EAAAf,IACAgB,EAAAC,EAAAF,EAAA,IAAAF,CAAA,EACAK,EAAAhB,EAAAC,CAAA,EAEA,OAAAgB,EAAAA,IAAAC,EAAA,CAAA,IAAAT,EAAA,UAAAK,EAAA,KAAAE,EAAA,GAAAJ,EAAA,YAAAX,EAAA,SAAAS,EAAA,GAAAA,CAAA,CAAA,CAKF,CAAA,EAEAJ,EAAA,YAAA;;;;;"}