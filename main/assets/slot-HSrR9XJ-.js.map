{"version":3,"file":"slot-HSrR9XJ-.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/decorators/slot.js"],"sourcesContent":["/**\n * Returns a slot decorator.\n *\n * @param { Slot } slotData\n * @returns { PropertyDecorator }\n */\nconst slot = (slotData) => {\n    return (target, slotKey) => {\n        const ctor = target.constructor;\n        if (!Object.prototype.hasOwnProperty.call(ctor, \"metadata\")) {\n            ctor.metadata = {};\n        }\n        const metadata = ctor.metadata;\n        if (!metadata.slots) {\n            metadata.slots = {};\n        }\n        const slotMetadata = metadata.slots;\n        if (slotData && slotData.default && slotMetadata.default) {\n            throw new Error(\"Only one slot can be the default slot.\");\n        }\n        const key = slotData && slotData.default ? \"default\" : slotKey;\n        slotData = slotData || { type: HTMLElement };\n        if (!slotData.type) {\n            slotData.type = HTMLElement;\n        }\n        if (!slotMetadata[key]) {\n            slotMetadata[key] = slotData;\n        }\n        if (slotData.default) {\n            delete slotMetadata.default.default;\n            slotMetadata.default.propertyName = slotKey;\n        }\n        ctor.metadata.managedSlots = true;\n    };\n};\nexport default slot;\n//# sourceMappingURL=slot.js.map"],"names":["slot","slotData","target","slotKey","ctor","metadata","slotMetadata","key"],"mappings":"AAMK,MAACA,EAAQC,GACH,CAACC,EAAQC,IAAY,CACxB,MAAMC,EAAOF,EAAO,YACf,OAAO,UAAU,eAAe,KAAKE,EAAM,UAAU,IACtDA,EAAK,SAAW,IAEpB,MAAMC,EAAWD,EAAK,SACjBC,EAAS,QACVA,EAAS,MAAQ,IAErB,MAAMC,EAAeD,EAAS,MAC9B,GAAIJ,GAAYA,EAAS,SAAWK,EAAa,QAC7C,MAAM,IAAI,MAAM,wCAAwC,EAE5D,MAAMC,EAAMN,GAAYA,EAAS,QAAU,UAAYE,EACvDF,EAAWA,GAAY,CAAE,KAAM,WAAW,EACrCA,EAAS,OACVA,EAAS,KAAO,aAEfK,EAAaC,CAAG,IACjBD,EAAaC,CAAG,EAAIN,GAEpBA,EAAS,UACT,OAAOK,EAAa,QAAQ,QAC5BA,EAAa,QAAQ,aAAeH,GAExCC,EAAK,SAAS,aAAe,EACrC","x_google_ignoreList":[0]}