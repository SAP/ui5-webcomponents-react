{"version":3,"file":"useTooltipFormatter-502e0732.js","sources":["../../packages/charts/src/internal/Utils.ts","../../packages/charts/src/hooks/usePrepareDimensionsAndMeasures.ts","../../packages/charts/src/hooks/useTooltipFormatter.ts"],"sourcesContent":["import { getValueByDataKey } from 'recharts/lib/util/ChartUtils.js';\nimport type { IChartMeasure } from '../interfaces/IChartMeasure.js';\n\nexport const getCellColors = (element: Record<string, any>, data: Record<string, any>, index: number): string => {\n  return (\n    element.highlightColor?.(getValueByDataKey(data, element.accessor), element, data) ??\n    element.color ??\n    `var(--sapChart_OrderedColor_${(index % 11) + 1})`\n  );\n};\n\nlet canvas;\n\nexport const getTextWidth = (text) => {\n  const font = `normal 12pt \"72\",\"72full\",Arial,Helvetica,sans-serif`;\n  // re-use canvas object for better performance\n  canvas = canvas || (canvas = document.createElement('canvas'));\n  const context = canvas.getContext('2d');\n  context.font = font;\n  const metrics = context.measureText(text);\n  return metrics.width;\n};\n\nexport const truncateLongLabel = (value: string, length = 13) => {\n  if (value?.length > length) {\n    return `${value.slice(0, length - 2)}...`;\n  }\n  return value;\n};\n\nexport const resolvePrimaryAndSecondaryMeasures = (measures: IChartMeasure[], secondaryAxisDataKey: string) => {\n  const secondaryMeasure = measures.find((measure) => measure.accessor === secondaryAxisDataKey);\n  const primaryMeasure = measures[0] === secondaryMeasure ? measures[1] ?? measures[0] : measures[0];\n\n  return {\n    primaryMeasure,\n    secondaryMeasure\n  };\n};\n","import { useMemo } from 'react';\n\nexport const usePrepareDimensionsAndMeasures = <DimensionConfig = any, MeasureConfig = any>(\n  rawDimensions,\n  rawMeasures,\n  dimensionDefaults = {},\n  measureDefaults = {}\n) => {\n  const dimensions: DimensionConfig = useMemo(\n    () =>\n      rawDimensions.map((label) => ({\n        ...dimensionDefaults,\n        ...label\n      })),\n    [rawDimensions, dimensionDefaults]\n  );\n\n  const measures: MeasureConfig = useMemo(\n    () =>\n      rawMeasures.map((value) => ({\n        ...measureDefaults,\n        ...value\n      })),\n    [rawMeasures, measureDefaults]\n  );\n\n  return { dimensions, measures };\n};\n","import { useCallback } from 'react';\n\nexport const useTooltipFormatter = (measures) => {\n  return useCallback(\n    (value, name, props) => {\n      const measure = measures.find(({ accessor }) => accessor === props.dataKey);\n      if (measure && typeof measure.formatter === 'function') {\n        return measure.formatter(value);\n      }\n      return value;\n    },\n    [measures]\n  );\n};\n"],"names":["getCellColors","element","data","index","_a","getValueByDataKey","canvas","getTextWidth","text","font","context","truncateLongLabel","value","length","resolvePrimaryAndSecondaryMeasures","measures","secondaryAxisDataKey","secondaryMeasure","measure","usePrepareDimensionsAndMeasures","rawDimensions","rawMeasures","dimensionDefaults","measureDefaults","dimensions","useMemo","label","useTooltipFormatter","useCallback","name","props","accessor"],"mappings":"mFAGO,MAAMA,EAAgB,CAACC,EAA8BC,EAA2BC,IAA0B,OAC/G,QACEC,EAAAH,EAAQ,iBAAR,YAAAG,EAAA,KAAAH,EAAyBI,EAAkBH,EAAMD,EAAQ,QAAQ,EAAGA,EAASC,KAC7ED,EAAQ,OACR,+BAAgCE,EAAQ,GAAM,CAAC,GAEnD,EAEA,IAAIG,EAES,MAAAC,EAAgBC,GAAS,CACpC,MAAMC,EAAO,uDAEbH,EAASA,IAAWA,EAAS,SAAS,cAAc,QAAQ,GACtD,MAAAI,EAAUJ,EAAO,WAAW,IAAI,EACtC,OAAAI,EAAQ,KAAOD,EACCC,EAAQ,YAAYF,CAAI,EACzB,KACjB,EAEaG,EAAoB,CAACC,EAAeC,EAAS,MACpDD,GAAA,YAAAA,EAAO,QAASC,EACX,GAAGD,EAAM,MAAM,EAAGC,EAAS,CAAC,CAAC,MAE/BD,EAGIE,EAAqC,CAACC,EAA2BC,IAAiC,CAC7G,MAAMC,EAAmBF,EAAS,KAAMG,GAAYA,EAAQ,WAAaF,CAAoB,EAGtF,MAAA,CACL,eAHqBD,EAAS,CAAC,IAAME,EAAmBF,EAAS,CAAC,GAAKA,EAAS,CAAC,EAAIA,EAAS,CAAC,EAI/F,iBAAAE,CAAA,CAEJ,ECpCaE,EAAkC,CAC7CC,EACAC,EACAC,EAAoB,CAAC,EACrBC,EAAkB,KACf,CACH,MAAMC,EAA8BC,EAAA,QAClC,IACEL,EAAc,IAAKM,IAAW,CAC5B,GAAGJ,EACH,GAAGI,CAAA,EACH,EACJ,CAACN,EAAeE,CAAiB,CAAA,EAG7BP,EAA0BU,EAAA,QAC9B,IACEJ,EAAY,IAAKT,IAAW,CAC1B,GAAGW,EACH,GAAGX,CAAA,EACH,EACJ,CAACS,EAAaE,CAAe,CAAA,EAGxB,MAAA,CAAE,WAAAC,EAAY,SAAAT,EACvB,ECzBaY,EAAuBZ,GAC3Ba,EAAA,YACL,CAAChB,EAAOiB,EAAMC,IAAU,CAChB,MAAAZ,EAAUH,EAAS,KAAK,CAAC,CAAE,SAAAgB,CAAS,IAAMA,IAAaD,EAAM,OAAO,EAC1E,OAAIZ,GAAW,OAAOA,EAAQ,WAAc,WACnCA,EAAQ,UAAUN,CAAK,EAEzBA,CACT,EACA,CAACG,CAAQ,CAAA"}