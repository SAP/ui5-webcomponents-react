import{e as Ie}from"./DemoProps-BWWtsAFv.js";import{j as e}from"./useIsomorphicLayoutEffect-CpdNMtv3.js";import{T as k}from"./ThemingParameters-DOkJX3Ed.js";import{e as G}from"./index-CBpU8qq5.js";import{r as P}from"./index-DEe9W-hO.js";import{u as Se,a as De,C as Te,Y as z,b as O,X as I,c as R}from"./YAxisTicks-bHI6l1i2.js";import{u as Le,C as Ye}from"./ChartDataLabel-Dom8TxH2.js";import{u as Ne,t as Be,a as Oe,b as Re}from"./staticProps-CmwUUUCl.js";import{u as Ke}from"./useLongestYAxisLabel-LXIPLwwn.js";import{u as We}from"./useOnClickInternal-Dc9F6l6s.js";import{u as Fe,a as Ee,r as $e,b as J}from"./useTooltipFormatter-Cr_5KS-E.js";import{C as He}from"./ChartContainer-IxoHiASu.js";import{a as de}from"./defaults-DSQ_D0Ei.js";import{C as Me}from"./react-content-loader.es-CK-1p032.js";import{C as Ue}from"./ComposedChart-DFtCMXID.js";import{R as Xe,T as Ge,d as Je,B as Qe,e as Ze,h as et}from"./generateCategoricalChart-CWLB_fE8.js";import{u as tt}from"./withWebComponent-ystZv1Rq.js";import{u as at}from"./useIsRTL-CMHMLISR.js";import"./_baseForOwn-DVWQo5xw.js";import"./debounce-D7W5PopO.js";import"./_baseUniq-BqAhPu7p.js";import"./index-B59Cbv-c.js";import"./clsx-B-dksMZM.js";import"./i18n-defaults-CnAElpi7.js";import"./i18nBundle-BRH4h-L2.js";import"./Boot-CS6Wsrzl.js";import"./EventProvider-CVfkyUHo.js";import"./I18nContext-qX06pm-v.js";import"./useStylesheet-B1i3sL0q.js";import"./throttle-B-28IFuh.js";import"./isString-C_Q1T2_B.js";import"./index-DA5Fl2n0.js";import"./iframe-D2J1Qk1k.js";import"../sb-preview/runtime.js";import"./Label-B7GS_Fjb.js";import"./UI5Element-GBezswur.js";import"./CustomElementsScopeUtils-CNP7-t5L.js";import"./WrappingType-CW8URInd.js";import"./i18n-defaults-BHzefwI9.js";import"./parameters-bundle.css-DQGkr9pp.js";import"./utils-DQyyc3O0.js";import"./tiny-invariant-CCoILDQG.js";import"./Line-CcMzkhOC.js";import"./Scatter-D0-TzS_b.js";import"./isPlainObject-B-J9bPgK.js";import"./mapValues-DXlf5GIm.js";import"./directionChange-sxDj8oYs.js";const A=r=>{const{x:u,y:h,width:c,height:p,index:j,fill:V,strokeWidth:d,layout:Y}=r,x={x1:d?u+(c-d)/2-1:u-3,x2:d?u+d+(c-d)/2:u+c+3},i={y1:d?h+(p-d)/2-1:h-3,y2:d?h+d+(p-d)/2:h+p+3};return Y==="horizontal"?e.jsx("line",{x1:x.x1,x2:x.x2,y1:h,y2:h,stroke:V,strokeWidth:3},`target-${j}`):e.jsx("line",{x1:u+c,x2:u+c,y1:i.y1,y2:i.y2,stroke:V,strokeWidth:3},`target-${j}`)};try{A.displayName="ComparisonLine",A.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}try{A.displayName="ComparisonLine",A.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}const ot=e.jsxs(e.Fragment,{children:[e.jsx("rect",{x:"20",y:"20",width:"85",height:"15"}),e.jsx("rect",{x:"20",y:"40",width:"117",height:"15"}),e.jsx("rect",{x:"20",y:"60",width:"67",height:"15"}),e.jsx("rect",{x:"20",y:"80",width:"75",height:"15"}),e.jsx("rect",{x:"20",y:"100",width:"125",height:"15"}),e.jsx("rect",{x:"20",y:"120",width:"60",height:"15"}),e.jsx("rect",{x:"115",y:"17.5",width:"2",height:"20"}),e.jsx("rect",{x:"150",y:"37.5",width:"2",height:"20"}),e.jsx("rect",{x:"90",y:"57.5",width:"2",height:"20"}),e.jsx("rect",{x:"100",y:"77.5",width:"2",height:"20"}),e.jsx("rect",{x:"120",y:"97.5",width:"2",height:"20"}),e.jsx("rect",{x:"87",y:"117.5",width:"2",height:"20"})]}),rt=e.jsxs(e.Fragment,{children:[e.jsx("rect",{x:"20",y:"50",width:"15",height:"85"}),e.jsx("rect",{x:"40",y:"70",width:"15",height:"65"}),e.jsx("rect",{x:"60",y:"68",width:"15",height:"67"}),e.jsx("rect",{x:"80",y:"60",width:"15",height:"75"}),e.jsx("rect",{x:"100",y:"10",width:"15",height:"125"}),e.jsx("rect",{x:"120",y:"75",width:"15",height:"60"}),e.jsx("rect",{x:"17.5",y:"35",width:"20",height:"2"}),e.jsx("rect",{x:"37.5",y:"62",width:"20",height:"2"}),e.jsx("rect",{x:"57.5",y:"56",width:"20",height:"2"}),e.jsx("rect",{x:"77.5",y:"37",width:"20",height:"2"}),e.jsx("rect",{x:"97.5",y:"45",width:"20",height:"2"}),e.jsx("rect",{x:"117.5",y:"70",width:"20",height:"2"})]}),_=({layout:r,measures:u})=>{const h=new Set(u.map(c=>c.type));return e.jsxs(Me,{viewBox:"0 0 165 145",preserveAspectRatio:"xMidYMid meet",width:"100%",height:"100%",speed:2,backgroundColor:k.sapContent_ImagePlaceholderBackground,foregroundColor:k.sapContent_ImagePlaceholderForegroundColor,backgroundOpacity:k.sapContent_DisabledOpacity,children:[r==="vertical"&&e.jsx("rect",{x:"20",y:"10",width:"1",height:"135"}),r==="horizontal"&&e.jsx("rect",{x:"10",y:"135",width:"135",height:"1"}),r==="vertical"&&h.has("primary")&&ot,r==="horizontal"&&h.has("primary")&&rt]})};try{_.displayName="BulletChartPlaceholder",_.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}try{_.displayName="BulletChartPlaceholder",_.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}const nt={formatter:de},it={formatter:de,opacity:1},b=P.forwardRef((r,u)=>{var H,M,U;const{loading:h,dataset:c,onDataPointClick:p,noLegend:j,noAnimation:V,tooltipConfig:d,onLegendClick:Y,onClick:x,layout:i="horizontal",style:he,className:ue,slot:pe,syncId:me,ChartPlaceholder:fe,children:ye,...ge}=r,[be,K]=tt(u),a={yAxisVisible:!1,xAxisVisible:!0,gridStroke:k.sapList_BorderColor,gridHorizontal:!0,gridVertical:!1,legendPosition:"bottom",legendHorizontalAlign:"left",zoomingTool:!1,resizeDebounce:250,yAxisConfig:{},xAxisConfig:{},secondYAxisConfig:{},secondXAxisConfig:{},...r.chartConfig},{referenceLine:o}=a,{dimensions:N,measures:q}=Fe(r.dimensions,r.measures,nt,it),f=P.useMemo(()=>q.sort(t=>t.type==="comparison"?1:t.type==="primary"?-1:0),[q]),xe=Ee(f),y=N[0],{primaryMeasure:C,secondaryMeasure:W}=$e(f,(H=a==null?void 0:a.secondYAxis)==null?void 0:H.dataKey),Ce=Le(y),ve=f.map(({accessor:t})=>t),g=a.secondYAxis?ve.findIndex(t=>{var s;return t===((s=a.secondYAxis)==null?void 0:s.dataKey)}):0,F=P.useCallback((t,s,n)=>{var l;if(typeof p=="function")if(t.name){const w=(l=t==null?void 0:t.value)==null?void 0:l.length;p(G(n??s,{value:w?t.value[1]-t.value[0]:t.value,dataIndex:t.index??s,dataKey:w?Object.keys(t).filter(m=>t.value.length?t[m]===t.value[1]-t.value[0]:t[m]===t.value&&m!=="value")[0]:t.dataKey??Object.keys(t).find(m=>t[m]===t.value&&m!=="value"),payload:t.payload}))}else p(G({},{value:s.value,dataKey:s.dataKey,dataIndex:s.index,payload:s.payload}))},[p]),we=Ne(Y),ke=We(x),B=(c==null?void 0:c.length)>30,Ae=y==null?void 0:y.accessor,[E,_e]=Ke(c,i==="vertical"?N:f,a.legendPosition),je=Se(a.margin,a.zoomingTool),Ve=De(K,i==="vertical"?1:r.dimensions.length),$={axisLine:a.yAxisVisible,tickLine:Be,tickFormatter:C==null?void 0:C.formatter,interval:0},v=at(K),qe=P.useCallback(()=>e.jsx(_,{layout:i,measures:q}),[i,q]),{chartConfig:st,dimensions:lt,measures:ct,...Pe}=ge;return e.jsx(He,{ref:be,loading:h,dataset:c,Placeholder:fe??qe,style:he,className:ue,slot:pe,resizeDebounce:a.resizeDebounce,...Pe,children:e.jsxs(Ue,{syncId:me,onClick:ke,stackOffset:"sign",margin:je,data:c,layout:i,className:typeof p=="function"||typeof x=="function"?"has-click-handler":void 0,children:[e.jsx(Te,{vertical:a.gridVertical,horizontal:a.gridHorizontal,stroke:a.gridStroke}),a.xAxisVisible&&N.map((t,s)=>{let n;const l={dataKey:t.accessor,interval:(t==null?void 0:t.interval)??(B?"preserveStart":0),tickLine:s<1,axisLine:s<1,allowDuplicatedCategory:s===0};return i==="vertical"?(l.type="category",l.tick=e.jsx(O,{config:t}),l.yAxisId=s,l.width=E,n=z,l.orientation=v?"right":"left"):(l.dataKey=t.accessor,l.tick=e.jsx(R,{config:t}),l.xAxisId=s,l.height=Ve[s],n=I,l.reversed=v),e.jsx(n,{...l},t.reactKey)}),i==="horizontal"&&e.jsx(z,{...$,yAxisId:"primary",width:E,orientation:v?"right":"left",tick:e.jsx(O,{config:C}),...a.yAxisConfig}),i==="vertical"&&e.jsx(I,{...$,reversed:v,xAxisId:"primary",type:"number",tick:e.jsx(R,{config:C}),...a.xAxisConfig}),((M=a.secondYAxis)==null?void 0:M.dataKey)&&i==="horizontal"&&e.jsx(z,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${g%11+1})`},tick:e.jsx(O,{config:W,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${g%11+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${g%11+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:v?"left":"right",interval:0,yAxisId:"secondary",...a.secondYAxisConfig}),((U=a.secondYAxis)==null?void 0:U.dataKey)&&i==="vertical"&&e.jsx(I,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${g%11+1})`},tick:e.jsx(R,{config:W,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${g%11+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${g%11+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:"top",interval:0,xAxisId:"secondary",type:"number",...a.secondXAxisConfig}),i==="horizontal"&&e.jsx(I,{xAxisId:"comparisonXAxis",hide:!0}),i==="vertical"&&e.jsx(z,{yAxisId:"comparisonYAxis",type:"category",hide:!0}),o&&e.jsx(Xe,{...o,stroke:(o==null?void 0:o.color)??(o==null?void 0:o.stroke),y:o!=null&&o.value?i==="horizontal"?o==null?void 0:o.value:void 0:o==null?void 0:o.y,x:o!=null&&o.value?i==="vertical"?o==null?void 0:o.value:void 0:o==null?void 0:o.x,yAxisId:(o==null?void 0:o.yAxisId)??i==="horizontal"?"primary":void 0,xAxisId:(o==null?void 0:o.xAxisId)??i==="vertical"?"primary":void 0,label:o==null?void 0:o.label}),(d==null?void 0:d.active)!==!1&&e.jsx(Ge,{cursor:Oe,formatter:xe,contentStyle:Re,labelFormatter:Ce,...d}),!j&&e.jsx(Je,{verticalAlign:a.legendPosition,align:a.legendHorizontalAlign,onClick:we,wrapperStyle:_e}),f==null?void 0:f.map((t,s)=>{var w,m;const n={isAnimationActive:!V};let l="top";switch(t.type){case"primary":case"additional":n.fillOpacity=t.opacity,n.strokeOpacity=t.opacity,n.barSize=t.width,n.onClick=F,n.stackId="A",n.labelPosition=t.stackId?"insideTop":"top",i==="vertical"?l="insideRight":l="insideTop";break;case"comparison":n.onClick=F,n.fill=t.color??"black",n.strokeWidth=t.width,n.shape=e.jsx(A,{layout:i}),n.strokeOpacity=t.opacity,n.label=!1,n.xAxisId="comparisonXAxis",n.yAxisId="comparisonYAxis",n.dot=!B;break}return i==="vertical"?n.xAxisId=((w=a.secondYAxis)==null?void 0:w.dataKey)===t.accessor?"secondary":"primary":n.yAxisId=((m=a.secondYAxis)==null?void 0:m.dataKey)===t.accessor?"secondary":"primary",e.jsx(Qe,{name:t.label??t.accessor,label:B?null:e.jsx(Ye,{config:t,chartType:"bar",position:l}),stroke:t.color??`var(--sapChart_OrderedColor_${s%11+1})`,fill:t.color??`var(--sapChart_OrderedColor_${s%11+1})`,type:"monotone",dataKey:t.accessor,...n,children:t.type!=="comparison"&&c.map((X,ze)=>e.jsx(Ze,{fill:J(t,X,s),stroke:J(t,X,s)},ze))},t.reactKey)}),a.zoomingTool&&e.jsx(et,{y:10,dataKey:Ae,tickFormatter:y==null?void 0:y.formatter,stroke:k.sapObjectHeader_BorderColor,travellerWidth:10,height:20}),ye]})})});b.displayName="BulletChart";try{b.displayName="BulletChart",b.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:`Flag whether the chart should display a loading indicator.

This can either be a placeholder shimmer (in case the chart has no data yet) or a small
loading bar in the top of the chart (in case the chart has already some data to display).`,name:"loading",required:!1,type:{name:"boolean"}},dataset:{defaultValue:null,description:"The `dataset` is an array of object which will be displayed in the chart.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to overwrite internally used tooltip props, so use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}}}}}catch{}try{b.displayName="BulletChart",b.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:`Flag whether the chart should display a loading indicator.

This can either be a placeholder shimmer (in case the chart has no data yet) or a small
loading bar in the top of the chart (in case the chart has already some data to display).`,name:"loading",required:!1,type:{name:"boolean"}},dataset:{defaultValue:null,description:"The `dataset` is an array of object which will be displayed in the chart.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to overwrite internally used tooltip props, so use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}}}}}catch{}const oa={title:"BulletChart",component:b,argTypes:{dataset:{control:{disable:!0}},children:{control:{disable:!0}}},args:{dataset:Ie,layout:"horizontal",dimensions:[{accessor:"name",formatter:r=>`${r} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional"},{accessor:"volume",label:"Volume",formatter:r=>r.toLocaleString(),type:"comparison"}]}},S={},D={args:{layout:"vertical",dimensions:[{accessor:"name",formatter:r=>r.slice(0,3)}],measures:[{accessor:"users",formatter:r=>`${r/10}`,type:"additional",label:"Number of users",width:10},{accessor:"sessions",type:"primary",width:10,opacity:.5},{accessor:"volume",type:"comparison",width:10}]}},T={args:{dimensions:[{accessor:"name",formatter:r=>`${r} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional",highlightColor:r=>{if(r>100)return"red"}},{accessor:"volume",label:"Volume",formatter:r=>r.toLocaleString(),type:"comparison"}]}},L={args:{dataset:[]}};var Q,Z,ee;S.parameters={...S.parameters,docs:{...(Q=S.parameters)==null?void 0:Q.docs,source:{originalSource:"{}",...(ee=(Z=S.parameters)==null?void 0:Z.docs)==null?void 0:ee.source}}};var te,ae,oe;D.parameters={...D.parameters,docs:{...(te=D.parameters)==null?void 0:te.docs,source:{originalSource:`{
  args: {
    layout: 'vertical',
    dimensions: [{
      accessor: 'name',
      formatter: element => element.slice(0, 3)
    }],
    measures: [{
      accessor: 'users',
      formatter: element => \`\${element / 10}\`,
      type: 'additional',
      label: 'Number of users',
      width: 10
    }, {
      accessor: 'sessions',
      type: 'primary',
      width: 10,
      opacity: 0.5
    }, {
      accessor: 'volume',
      type: 'comparison',
      width: 10
    }]
  }
}`,...(oe=(ae=D.parameters)==null?void 0:ae.docs)==null?void 0:oe.source}}};var re,ne,ie;T.parameters={...T.parameters,docs:{...(re=T.parameters)==null?void 0:re.docs,source:{originalSource:`{
  args: {
    dimensions: [{
      accessor: 'name',
      formatter: d => \`\${d} 2019\`,
      interval: 0
    }],
    measures: [{
      accessor: 'sessions',
      label: 'Active Sessions',
      type: 'primary'
    }, {
      accessor: 'users',
      label: 'Users',
      type: 'additional',
      highlightColor: value => {
        if (value > 100) {
          return 'red';
        }
      }
    }, {
      accessor: 'volume',
      label: 'Volume',
      formatter: val => val.toLocaleString(),
      type: 'comparison'
    }]
  }
}`,...(ie=(ne=T.parameters)==null?void 0:ne.docs)==null?void 0:ie.source}}};var se,le,ce;L.parameters={...L.parameters,docs:{...(se=L.parameters)==null?void 0:se.docs,source:{originalSource:`{
  args: {
    dataset: []
  }
}`,...(ce=(le=L.parameters)==null?void 0:le.docs)==null?void 0:ce.source}}};const ra=["Default","WithCustomSize","WithHighlightedMeasures","LoadingPlaceholder"];export{S as Default,L as LoadingPlaceholder,D as WithCustomSize,T as WithHighlightedMeasures,ra as __namedExportsOrder,oa as default};
