import{M as c,C as d,e as u}from"./chunk-S4VUQJ4A-08d9fe3a.js";import{T as e}from"./index-a43e9ed5.js";import{B as m}from"./Button-4505b9f6.js";import"./employee-78fe46d2.js";import{A as g}from"./DomRefTable.module-e393ca02.js";import{D as f}from"./DocsHeader-db99fc3f.js";import{F as h}from"./Footer-9de7bb04.js";import{j as t}from"./jsx-runtime-d079401a.js";import"./index-f1f2c4b1.js";import{D as x}from"./DomRefTable-76dfa9f5.js";import{u as p}from"./index-59d6410c.js";import"./iframe-1161af65.js";import"../sb-preview/runtime.js";import"./index-92d824d3.js";import"./index-c74c9f7f.js";import"./mapValues-57c90777.js";import"./_baseForOwn-2252ef3e.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./_getPrototype-73159a4c.js";import"./_baseUniq-61c59340.js";import"./index-356e4a49.js";import"./ToggleButton-c0a19ccb.js";import"./withWebComponent-b4c67a1a.js";import"./utils-e9940b93.js";import"./CustomElementsScopeUtils-264b8a39.js";import"./useIsomorphicLayoutEffect-c49de97d.js";import"./Icons-65b34360.js";import"./UI5Element-e590cd60.js";import"./Icon-b897d66f.js";import"./slot-76e48863.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-d5195a49.js";import"./react-jss.esm-2e5f50f2.js";import"./index-915cc8f9.js";import"./decline-2f6198d2.js";import"./i18n-defaults-bdef1cce.js";import"./information-e97f915a.js";import"./alert-7494fabe.js";import"./class-map-e1b423a4.js";import"./index-743fc8f1.js";import"./clsx-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-203b56de.js";import"./index-47c1ec51.js";import"./Integer-f7f172c9.js";import"./index-287312b0.js";import"./Avatar-60d18bb8.js";import"./ResizeHandler-34ecee99.js";import"./index-a669c36f.js";import"./index-a7b16038.js";import"./Link-a373b451.js";import"./WrappingType-b81e595a.js";import"./index-fb6e8b5e.js";import"./TableOfContent-e49b5707.js";import"./index-380c4570.js";import"./Label-69062358.js";import"./index-c6e940b2.js";import"./index-25b911ef.js";import"./Popover-742c9988.js";import"./PopupUtils-f407c5e4.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-97942203.js";import"./FocusableElements-d024bb16.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-ecc46a93.js";import"./BrowserScrollbar.css-4a87524a.js";const b=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function j(o={}){const{wrapper:i}=Object.assign({},p(),o.components);return i?t.jsx(i,{...o,children:t.jsx(n,{})}):n();function n(){const s=Object.assign({h2:"h2"},p(),o.components);return t.jsxs(t.Fragment,{children:[t.jsx(c,{title:"Inputs / ToggleButton",component:e,argTypes:{children:{control:"text"}},args:{design:m.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t.jsx(f,{}),`
`,t.jsx("br",{}),`
`,t.jsx(s.h2,{id:"example",children:"Example"}),`
`,t.jsx(d,{children:t.jsx(u,{name:"Default",children:a=>t.jsx(e,{...a})})}),`
`,t.jsx(s.h2,{id:"properties",children:"Properties"}),`
`,t.jsx(g,{story:"Default"}),`
`,t.jsx(x,{rows:b}),`
`,t.jsx(h,{})]})}}const l=o=>t.jsx(e,{...o});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:e,args:{design:m.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:j};const Ot=["defaultStory"];export{Ot as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-2171d614.js.map
