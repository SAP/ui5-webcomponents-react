{"version":3,"mappings":"2KAwFA,MAAAA,EAAAC,EAAoB,mBAClB,yFAC6F,6CAC/C,GAC7C,WACQ,IAAAC,EAAA,mhBAEX,EAEAF,EAAA,0BAEAA,EAAA,cAA2B,WAAAG,EAAA,IAE3B","names":["RadioButton","withWebComponent","__vitePreload","ValueState"],"sources":["../../packages/main/src/webComponents/RadioButton/index.tsx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/RadioButton.js';\nimport type { WrappingType } from '../../enums/index.js';\nimport { ValueState } from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n\ninterface RadioButtonAttributes {\n  /**\n   * Defines the accessible ARIA name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the IDs of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines whether the component is checked or not.\n   *\n   * **Note:** The property value can be changed with user interaction, either by clicking/tapping on the component, or by using the Space or Enter key.\n   */\n  checked?: boolean;\n  /**\n   * Defines whether the component is disabled.\n   *\n   * **Note:** A disabled component is completely noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the name of the component. Radio buttons with the same `name` will form a radio button group.\n   *\n   * **Note:** The selection can be changed with `ARROW_UP/DOWN` and `ARROW_LEFT/RIGHT` keys between radio buttons in same group.\n   *\n   * **Note:** Only one radio button can be selected per group.\n   *\n   * **Important:** For the `name` property to have effect when submitting forms, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   *\n   * **Note:** When set, a native `input` HTML element will be created inside the component so that it can be submitted as part of an HTML form.\n   */\n  name?: string;\n  /**\n   * Defines whether the component is read-only.\n   *\n   * **Note:** A read-only component is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the component is required.\n   */\n  required?: boolean;\n  /**\n   * Defines the text of the component.\n   */\n  text?: string;\n  /**\n   * Defines the form value of the component. When a form with a radio button group is submitted, the group's value will be the value of the currently selected radio button.\n   * **Important:** For the `value` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  value?: string;\n  /**\n   * Defines the value state of the component.\n   */\n  valueState?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines whether the component text wraps when there is not enough space.\n   * **Note:** for option \"Normal\" the text will wrap and the words will not be broken based on hyphenation.\n   */\n  wrappingType?: WrappingType | keyof typeof WrappingType;\n}\n\nexport interface RadioButtonDomRef extends RadioButtonAttributes, Ui5DomRef {}\n\nexport interface RadioButtonPropTypes extends RadioButtonAttributes, Omit<CommonProps, 'onChange'> {\n  /**\n   * Fired when the component checked state changes.\n   */\n  onChange?: (event: Ui5CustomEvent<RadioButtonDomRef>) => void;\n}\n\n/**\n * The `RadioButton` component enables users to select a single option from a set of options. When a `RadioButton` is selected by the user, the `onChange` event is fired. When a `RadioButton` that is within a group is selected, the one that was previously selected gets automatically deselected. You can group radio buttons by using the `name` property.\n * **Note:** If `RadioButton` is not part of a group, it can be selected once, but can not be deselected back.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Componentsâ€™ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-RadioButton)\n */\nconst RadioButton = withWebComponent<RadioButtonPropTypes, RadioButtonDomRef>(\n  'ui5-radio-button',\n  ['accessibleName', 'accessibleNameRef', 'name', 'text', 'value', 'valueState', 'wrappingType'],\n  ['checked', 'disabled', 'readonly', 'required'],\n  [],\n  ['change'],\n  () => import('@ui5/webcomponents/dist/RadioButton.js')\n);\n\nRadioButton.displayName = 'RadioButton';\n\nRadioButton.defaultProps = {\n  valueState: ValueState.None\n};\n\nexport { RadioButton };\n"],"file":"assets/index-1c828f5f.js"}