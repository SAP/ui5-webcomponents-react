{"version":3,"file":"ObjectPage.stories-217e8eae.js","sources":["../../packages/main/src/enums/ObjectPageMode.ts","../../packages/main/src/internal/safeGetChildrenArray.ts","../../packages/main/src/components/ObjectPage/CollapsedAvatar.tsx","../../packages/main/src/components/ObjectPage/ObjectPage.jss.ts","../../packages/main/src/components/ObjectPage/ObjectPageUtils.ts","../../packages/main/src/components/ObjectPage/index.tsx","../../packages/main/src/components/ObjectPageSection/ObjectPageSection.jss.ts","../../packages/main/src/components/ObjectPageSection/index.tsx","../../packages/main/src/components/ObjectPageSubSection/index.tsx"],"sourcesContent":["export enum ObjectPageMode {\n  /**\n   * All `ObjectPageSections` and `ObjectPageSubSections` are displayed on one page.\n   * Selecting tabs will scroll to the corresponding section.\n   */\n  Default = 'Default',\n  /**\n   * All `ObjectPageSections` are displayed on separate pages.\n   * Selecting tabs will lead to the corresponding page.\n   */\n  IconTabBar = 'IconTabBar'\n}\n","import type { ReactNode } from 'react';\nimport { Children, isValidElement } from 'react';\n\nexport const safeGetChildrenArray = <T = Exclude<ReactNode, boolean | null | undefined>>(children: unknown): T[] => {\n  const childArray = [];\n\n  Children.forEach(children, (child) => {\n    if (isValidElement(child)) {\n      childArray.push(child);\n    }\n  });\n\n  return childArray as T[];\n};\n","import { clsx } from 'clsx';\nimport type { CSSProperties, ReactElement } from 'react';\nimport React, { cloneElement, useEffect, useMemo, useRef, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { AvatarSize } from '../../enums/index.js';\n\nconst styles = {\n  base: {\n    alignSelf: 'center',\n    opacity: 0,\n    paddingInlineEnd: '1rem'\n  },\n  hidden: {\n    opacity: 0\n  },\n  visible: {\n    transition: 'opacity 0.5s',\n    opacity: 1\n  },\n  imageContainer: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    maxHeight: '3rem',\n    width: '3rem',\n    maxWidth: '3rem'\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst useStyles = createUseStyles(styles, {\n  name: 'CollapsedAvatar'\n});\n\nexport interface CollapsedAvatarPropTypes {\n  image?: string | ReactElement;\n  imageShapeCircle?: boolean;\n  style?: CSSProperties;\n}\n\nexport const CollapsedAvatar = (props: CollapsedAvatarPropTypes) => {\n  const { image, imageShapeCircle, style } = props;\n  const classes = useStyles();\n  const [isMounted, setIsMounted] = useState(false);\n  const domRef = useRef(null);\n\n  const avatarContent = useMemo(() => {\n    if (!image) return null;\n\n    if (typeof image === 'string') {\n      return (\n        <span\n          className={classes.imageContainer}\n          style={{ borderRadius: imageShapeCircle ? '50%' : 0, overflow: 'hidden' }}\n        >\n          <img className={classes.image} src={image} alt=\"Object Page Image\" />\n        </span>\n      );\n    } else {\n      return cloneElement(image, {\n        size: AvatarSize.S,\n        className: image.props?.className\n          ? `${classes.imageContainer} ${image.props?.className}`\n          : classes.imageContainer\n      } as unknown);\n    }\n  }, [image, imageShapeCircle]);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  const containerClasses = clsx(classes.base, isMounted ? classes.visible : classes.hidden);\n\n  return (\n    <div ref={domRef} className={containerClasses} style={style} data-component-name=\"ObjectPageCollapsedAvatar\">\n      {avatarContent}\n    </div>\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base';\nimport { ResponsiveContainerPadding } from '../../internal/ContainerQueries.js';\nimport { DynamicPageCssVariables } from '../DynamicPage/DynamicPage.jss.js';\n\nexport const ObjectPageCssVariables = {\n  anchorFloat: '--_ui5wcr_ObjectPage_actions_float',\n  anchorLeft: '--_ui5wcr_ObjectPage_actions_left',\n  anchorRight: '--_ui5wcr_ObjectPage_actions_right'\n};\n\nexport const styles = {\n  objectPage: {\n    [DynamicPageCssVariables.headerDisplay]: 'block',\n    container: 'objectPage / inline-size',\n    boxSizing: 'border-box',\n    width: '100%',\n    height: '100%',\n    maxHeight: '100vh',\n    position: 'relative',\n    whiteSpace: 'normal',\n    fontFamily: ThemingParameters.sapFontFamily,\n    backgroundColor: ThemingParameters.sapBackgroundColor,\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    [DynamicPageCssVariables.titleFontSize]: ThemingParameters.sapObjectHeader_Title_FontSize,\n    '& section[id*=\"ObjectPageSection-\"] > div[role=\"heading\"]': {\n      display: 'none'\n    },\n    // explanation why first-child selector is not sufficient here:\n    // https://stackoverflow.com/questions/7128406/css-select-the-first-child-from-elements-with-particular-attribute\n    '& section[id*=\"ObjectPageSection-\"] ~ section[id*=\"ObjectPageSection-\"] > div[role=\"heading\"]': {\n      display: 'block'\n    }\n  },\n  '@global html': {\n    [ObjectPageCssVariables.anchorFloat]: 'right',\n    [ObjectPageCssVariables.anchorRight]: '1.25rem',\n    [ObjectPageCssVariables.anchorLeft]: 'unset'\n  },\n  '@global [dir=\"rtl\"]': {\n    [ObjectPageCssVariables.anchorFloat]: 'left',\n    [ObjectPageCssVariables.anchorRight]: 'unset',\n    [ObjectPageCssVariables.anchorLeft]: '1.25rem'\n  },\n  iconTabBarMode: {\n    '& section[data-component-name=\"ObjectPageSection\"] > div[role=\"heading\"]': {\n      display: 'none'\n    }\n  },\n  headerCollapsed: {\n    [DynamicPageCssVariables.headerDisplay]: 'none',\n    [DynamicPageCssVariables.titleFontSize]: ThemingParameters.sapObjectHeader_Title_SnappedFontSize\n  },\n  headerContainer: {\n    extend: ResponsiveContainerPadding,\n    marginBottom: '0.25rem',\n    backgroundColor: ThemingParameters.sapObjectHeader_Background,\n    display: 'grid',\n    gridAutoColumns: 'min-content calc(100% - 5rem - 2rem)' /*avatar size - padding */,\n    '& [data-component-name=\"ObjectPageHeaderContent\"]': {\n      gridColumn: 2\n    }\n  },\n  headerHoverStyles: {\n    '&[data-not-clickable=\"true\"]': {\n      cursor: 'unset'\n    },\n    '&[data-not-clickable=\"false\"]': {\n      backgroundColor: `${ThemingParameters.sapObjectHeader_Hover_Background}`,\n      '& [data-component-name=\"DynamicPageTitle\"]': {\n        backgroundColor: ThemingParameters.sapObjectHeader_Hover_Background\n      }\n    }\n  },\n  header: {\n    extend: ResponsiveContainerPadding,\n    [DynamicPageCssVariables.headerDisplay]: 'block',\n    boxSizing: 'border-box',\n    backgroundColor: ThemingParameters.sapObjectHeader_Background,\n    position: 'sticky',\n    top: 0,\n    zIndex: 2,\n    '& [data-component-name=\"DynamicPageTitle\"]': {\n      gridColumn: 2,\n      paddingInline: 0\n    },\n    cursor: 'pointer'\n  },\n  headerImage: {\n    minWidth: '5rem',\n    maxWidth: '5rem',\n    maxHeight: '5rem',\n    display: 'inline-block',\n    marginInlineEnd: '2rem'\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  anchorBar: {\n    position: 'sticky',\n    zIndex: 2\n  },\n  tabContainer: {\n    position: 'sticky',\n    zIndex: 1,\n    // each tab has inline padding of 1rem, so it needs to be subtracted from the default responsive padding\n    '@container objectPage (max-width: 599px)': {\n      '--_ui5wcr_ObjectPage_tab_bar_inline_padding': 0\n    },\n    '@container objectPage (min-width: 600px) and (max-width: 1023px)': {\n      '--_ui5wcr_ObjectPage_tab_bar_inline_padding': '1rem'\n    },\n    '@container objectPage (min-width: 1024px) and (max-width: 1439px)': {\n      '--_ui5wcr_ObjectPage_tab_bar_inline_padding': '1rem'\n    },\n    '@container objectPage (min-width: 1440px)': {\n      '--_ui5wcr_ObjectPage_tab_bar_inline_padding': '2rem'\n    }\n  },\n  tabContainerComponent: {\n    '&::part(content)': {\n      display: 'none'\n    }\n  },\n  content: {\n    extend: ResponsiveContainerPadding\n  },\n  footer: {\n    position: 'sticky',\n    bottom: '0.5rem',\n    margin: '0 0.5rem'\n  },\n  subSectionPopover: {\n    '&::part(content)': {\n      padding: 0\n    }\n  },\n  titleInHeader: { padding: 0 },\n  snappedContent: { gridColumn: '1 / span 2' }\n};\n","import { isValidElement } from 'react';\nimport { safeGetChildrenArray } from '../../internal/safeGetChildrenArray.js';\n\nexport const getSectionById = (sections, id) => {\n  return safeGetChildrenArray(sections).find((objectPageSection) => {\n    return isValidElement(objectPageSection) && objectPageSection.props?.id === id;\n  });\n};\n\nexport const extractSectionIdFromHtmlId = (id: string) => {\n  if (!id) return null;\n  return id.replace(/^ObjectPageSection-/, '');\n};\n","'use client';\n\nimport { debounce, enrichEventWithDetails, ThemingParameters, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport type { ReactElement, ReactNode } from 'react';\nimport React, {\n  cloneElement,\n  forwardRef,\n  isValidElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { AvatarSize, GlobalStyleClasses, ObjectPageMode } from '../../enums/index.js';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport { addCustomCSSWithScoping } from '../../internal/addCustomCSSWithScoping.js';\nimport { safeGetChildrenArray } from '../../internal/safeGetChildrenArray.js';\nimport { useObserveHeights } from '../../internal/useObserveHeights.js';\nimport type { AvatarPropTypes } from '../../webComponents/index.js';\nimport { Tab, TabContainer } from '../../webComponents/index.js';\nimport { DynamicPageCssVariables } from '../DynamicPage/DynamicPage.jss.js';\nimport { DynamicPageAnchorBar } from '../DynamicPageAnchorBar/index.js';\nimport { DynamicPageHeader } from '../DynamicPageHeader/index.js';\nimport type { ObjectPageSectionPropTypes } from '../ObjectPageSection/index.js';\nimport { CollapsedAvatar } from './CollapsedAvatar.js';\nimport { styles } from './ObjectPage.jss.js';\nimport { extractSectionIdFromHtmlId, getSectionById } from './ObjectPageUtils.js';\n\naddCustomCSSWithScoping(\n  'ui5-tabcontainer',\n  // padding-inline is used here to ensure the same responsive padding behavior as for the rest of the component\n  // todo: the additional text span adds 3px to the container - needs to be investigated why\n  `\n  :host([data-component-name=\"ObjectPageTabContainer\"]) .ui5-tc__header {\n    padding: 0;\n    padding-inline: var(--_ui5wcr_ObjectPage_tab_bar_inline_padding);\n    box-shadow: inset 0 -0.0625rem ${ThemingParameters.sapPageHeader_BorderColor}, 0 0.125rem 0.25rem 0 rgb(0 0 0 / 8%);\n  }\n  :host([data-component-name=\"ObjectPageTabContainer\"]) [id$=\"additionalText\"] {\n    display: none;\n  }\n  `\n);\n\nconst TAB_CONTAINER_HEADER_HEIGHT = 48;\n\nexport interface ObjectPagePropTypes extends Omit<CommonProps, 'placeholder'> {\n  /**\n   * Defines the upper, always static, title section of the `ObjectPage`.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `DynamicPageTitle` in order to preserve the intended design.\n   * __Note:__ If not defined otherwise the prop `showSubHeaderRight` of the `DynamicPageTitle` is set to `true` by default.\n   */\n  headerTitle?: ReactElement;\n  /**\n   * Defines the dynamic header section of the `ObjectPage`.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `DynamicPageHeader` in order to preserve the intended design.\n   */\n  headerContent?: ReactElement;\n  /**\n   * React element which defines the footer content.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `Bar` with `design={BarDesign.FloatingFooter}` in order to preserve the intended design.\n   */\n  footer?: ReactElement;\n  /**\n   * Defines the image of the `ObjectPage`. You can pass a path to an image or an `Avatar` component.\n   */\n  image?: string | ReactElement;\n  /**\n   * Defines the content area of the `ObjectPage`. It consists of sections and subsections.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `ObjectPageSection` and `ObjectPageSubSection` in order to preserve the intended design.\n   */\n  children?: ReactElement<ObjectPageSectionPropTypes> | ReactElement<ObjectPageSectionPropTypes>[];\n  /**\n   * Defines the ID of the currently `ObjectPageSection` section.\n   */\n  selectedSectionId?: string;\n  /**\n   * Defines the ID of the currently `ObjectPageSubSection` section.\n   */\n  selectedSubSectionId?: string;\n  /**\n   * Defines whether the `headerContent` is hidden by scrolling down.\n   */\n  alwaysShowContentHeader?: boolean;\n  /**\n   * Defines whether the title is displayed in the content section of the header or above the image.\n   */\n  showTitleInHeaderContent?: boolean;\n  /**\n   * Defines whether the image should be displayed in a circle or in a square.<br />\n   * __Note:__ If the `image` is not a `string`, this prop has no effect.\n   */\n  imageShapeCircle?: boolean;\n  /**\n   * Defines the `ObjectPage` mode.\n   *\n   * - \"Default\": All `ObjectPageSections` and `ObjectPageSubSections` are displayed on one page. Selecting tabs will scroll to the corresponding section.\n   * - \"IconTabBar\": All `ObjectPageSections` are displayed on separate pages. Selecting tabs will lead to the corresponding page.\n   */\n  mode?: ObjectPageMode | keyof typeof ObjectPageMode;\n  /**\n   * Defines whether the pin button of the header is displayed.\n   */\n  showHideHeaderButton?: boolean;\n  /**\n   * Defines whether the `headerContent` is pinnable.\n   */\n  headerContentPinnable?: boolean;\n  /**\n   * Defines internally used a11y properties.\n   */\n  a11yConfig?: {\n    objectPageTopHeader?: {\n      role?: string;\n      ariaRoledescription?: string;\n    };\n    dynamicPageAnchorBar?: {\n      role?: string;\n    };\n  };\n  /**\n   * If set, only the specified placeholder will be displayed as content of the `ObjectPage`, no sections or sub-sections will be rendered.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use placeholder components like the `IllustratedMessage` or custom skeletons pages in order to preserve the intended design.\n   */\n  placeholder?: ReactNode;\n  /**\n   * Fired when the selected section changes.\n   */\n  onSelectedSectionChange?: (\n    event: CustomEvent<{ selectedSectionIndex: number; selectedSectionId: string; section: HTMLDivElement }>\n  ) => void;\n  /**\n   * Fired when the `headerContent` is expanded or collapsed.\n   */\n  onToggleHeaderContent?: (visible: boolean) => void;\n  /**\n   * Fired when the `headerContent` changes its pinned state.\n   */\n  onPinnedStateChange?: (pinned: boolean) => void;\n}\n\nconst useStyles = createUseStyles(styles, { name: 'ObjectPage' });\n\n/**\n * A component that allows apps to easily display information related to a business object.\n *\n * The `ObjectPage` is composed of a header (title and content) and block content wrapped in sections and subsections that structure the information.\n */\nconst ObjectPage = forwardRef<HTMLDivElement, ObjectPagePropTypes>((props, ref) => {\n  const {\n    headerTitle,\n    image,\n    footer,\n    mode,\n    imageShapeCircle,\n    className,\n    style,\n    slot,\n    showHideHeaderButton,\n    children,\n    selectedSectionId,\n    alwaysShowContentHeader,\n    showTitleInHeaderContent,\n    headerContent,\n    headerContentPinnable,\n    a11yConfig,\n    placeholder,\n    onSelectedSectionChange,\n    onToggleHeaderContent,\n    onPinnedStateChange,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  const firstSectionId = safeGetChildrenArray<ReactElement>(children)[0]?.props?.id;\n\n  const [internalSelectedSectionId, setInternalSelectedSectionId] = useState(selectedSectionId ?? firstSectionId);\n  const [selectedSubSectionId, setSelectedSubSectionId] = useState(props.selectedSubSectionId);\n  const [headerPinned, setHeaderPinned] = useState(alwaysShowContentHeader);\n  const isProgrammaticallyScrolled = useRef(false);\n\n  const [componentRef, objectPageRef] = useSyncRef(ref);\n  const topHeaderRef = useRef<HTMLDivElement>(null);\n  const scrollEvent = useRef();\n  // @ts-expect-error: useSyncRef will create a ref if not present\n  const [componentRefHeaderContent, headerContentRef] = useSyncRef(headerContent?.ref);\n  const anchorBarRef = useRef<HTMLDivElement>(null);\n  const selectionScrollTimeout = useRef(null);\n  const [isAfterScroll, setIsAfterScroll] = useState(false);\n  const isToggledRef = useRef(false);\n  const [headerCollapsedInternal, setHeaderCollapsedInternal] = useState<undefined | boolean>(undefined);\n  const [scrolledHeaderExpanded, setScrolledHeaderExpanded] = useState(false);\n  const scrollTimeout = useRef(0);\n  const [spacerBottomHeight, setSpacerBottomHeight] = useState('0px');\n  const titleInHeader = headerTitle && showTitleInHeaderContent;\n\n  const prevInternalSelectedSectionId = useRef(internalSelectedSectionId);\n  const fireOnSelectedChangedEvent = (targetEvent, index, id, section) => {\n    if (typeof onSelectedSectionChange === 'function' && prevInternalSelectedSectionId.current !== id) {\n      onSelectedSectionChange(\n        enrichEventWithDetails(targetEvent, {\n          selectedSectionIndex: parseInt(index, 10),\n          selectedSectionId: id,\n          section\n        })\n      );\n      prevInternalSelectedSectionId.current = id;\n    }\n  };\n  const debouncedOnSectionChange = useRef(debounce(fireOnSelectedChangedEvent, 500)).current;\n  useEffect(() => {\n    return () => {\n      debouncedOnSectionChange.cancel();\n      clearTimeout(selectionScrollTimeout.current);\n    };\n  }, []);\n\n  // observe heights of header parts\n  const { topHeaderHeight, headerContentHeight, anchorBarHeight, totalHeaderHeight, headerCollapsed } =\n    useObserveHeights(\n      objectPageRef,\n      topHeaderRef,\n      headerContentRef,\n      anchorBarRef,\n      [headerCollapsedInternal, setHeaderCollapsedInternal],\n      {\n        noHeader: !headerTitle && !headerContent,\n        fixedHeader: headerPinned,\n        scrollTimeout\n      }\n    );\n\n  useEffect(() => {\n    if (typeof onToggleHeaderContent === 'function' && isToggledRef.current) {\n      onToggleHeaderContent(headerCollapsed !== true);\n    }\n  }, [headerCollapsed]);\n\n  const avatar = useMemo(() => {\n    if (!image) {\n      return null;\n    }\n\n    if (typeof image === 'string') {\n      return (\n        <span\n          className={classes.headerImage}\n          style={{ borderRadius: imageShapeCircle ? '50%' : 0, overflow: 'hidden' }}\n        >\n          <img src={image} className={classes.image} alt=\"Company Logo\" />\n        </span>\n      );\n    } else {\n      return cloneElement(image, {\n        size: AvatarSize.L,\n        className: clsx(classes.headerImage, image.props?.className)\n      } as AvatarPropTypes);\n    }\n  }, [image, classes.headerImage, classes.image, imageShapeCircle]);\n\n  const prevTopHeaderHeight = useRef(0);\n  const scrollToSection = useCallback(\n    (sectionId) => {\n      if (!sectionId) {\n        return;\n      }\n      if (firstSectionId === sectionId) {\n        objectPageRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n      } else {\n        const childOffset = objectPageRef.current?.querySelector<HTMLElement>(`#ObjectPageSection-${sectionId}`)\n          ?.offsetTop;\n        if (!isNaN(childOffset)) {\n          const safeTopHeaderHeight = topHeaderHeight || prevTopHeaderHeight.current;\n          if (topHeaderHeight) {\n            prevTopHeaderHeight.current = topHeaderHeight;\n          }\n          objectPageRef.current?.scrollTo({\n            top:\n              childOffset -\n              safeTopHeaderHeight -\n              anchorBarHeight -\n              TAB_CONTAINER_HEADER_HEIGHT /*tabBar*/ -\n              (headerPinned ? (headerCollapsed === true ? 0 : headerContentHeight) : 0),\n            behavior: 'smooth'\n          });\n        }\n      }\n      isProgrammaticallyScrolled.current = false;\n    },\n    [\n      firstSectionId,\n      objectPageRef,\n      topHeaderHeight,\n      anchorBarHeight,\n      headerPinned,\n      headerContentHeight,\n      headerCollapsed,\n      prevTopHeaderHeight.current\n    ]\n  );\n\n  const programmaticallySetSection = () => {\n    const currentId = selectedSectionId ?? firstSectionId;\n    if (currentId !== prevSelectedSectionId.current) {\n      debouncedOnSectionChange.cancel();\n      isProgrammaticallyScrolled.current = true;\n      setInternalSelectedSectionId(currentId);\n      prevSelectedSectionId.current = currentId;\n      const sections = objectPageRef.current?.querySelectorAll('section[data-component-name=\"ObjectPageSection\"]');\n      const currentIndex = safeGetChildrenArray(children).findIndex((objectPageSection) => {\n        return isValidElement(objectPageSection) && objectPageSection.props?.id === currentId;\n      });\n      fireOnSelectedChangedEvent({}, currentIndex, currentId, sections[0]);\n    }\n  };\n\n  // change selected section when prop is changed (external change)\n  const prevSelectedSectionId = useRef();\n  const [timeStamp, setTimeStamp] = useState(0);\n  const requestAnimationFrameRef = useRef<undefined | number>();\n  useEffect(() => {\n    if (selectedSectionId) {\n      if (mode === ObjectPageMode.Default) {\n        // wait for DOM draw, otherwise initial scroll won't work as intended\n        if (timeStamp < 750 && timeStamp !== undefined) {\n          requestAnimationFrameRef.current = requestAnimationFrame((internalTimestamp) => {\n            setTimeStamp(internalTimestamp);\n          });\n        } else {\n          setTimeStamp(undefined);\n          programmaticallySetSection();\n        }\n      } else {\n        programmaticallySetSection();\n      }\n    }\n    return () => {\n      cancelAnimationFrame(requestAnimationFrameRef.current);\n    };\n  }, [timeStamp, selectedSectionId, firstSectionId, debouncedOnSectionChange]);\n\n  // section was selected by clicking on the tab bar buttons\n  const handleOnSectionSelected = useCallback(\n    (targetEvent, newSelectionSectionId, index, section) => {\n      isProgrammaticallyScrolled.current = true;\n      debouncedOnSectionChange.cancel();\n      setInternalSelectedSectionId((oldSelectedSection) => {\n        if (oldSelectedSection === newSelectionSectionId) {\n          scrollToSection(newSelectionSectionId);\n        }\n        return newSelectionSectionId;\n      });\n      scrollEvent.current = targetEvent;\n      fireOnSelectedChangedEvent(targetEvent, index, newSelectionSectionId, section);\n    },\n    [onSelectedSectionChange, setInternalSelectedSectionId, isProgrammaticallyScrolled, scrollToSection]\n  );\n\n  // do internal scrolling\n  useEffect(() => {\n    if (mode === ObjectPageMode.Default && isProgrammaticallyScrolled.current === true && !selectedSubSectionId) {\n      scrollToSection(internalSelectedSectionId);\n    }\n  }, [internalSelectedSectionId, mode, isProgrammaticallyScrolled, scrollToSection, selectedSubSectionId]);\n\n  // Scrolling for Sub Section Selection\n  useEffect(() => {\n    if (selectedSubSectionId && isProgrammaticallyScrolled.current === true) {\n      const currentSubSection = objectPageRef.current?.querySelector<HTMLDivElement>(\n        `div[id=\"ObjectPageSubSection-${selectedSubSectionId}\"]`\n      );\n      const childOffset = currentSubSection?.offsetTop;\n      if (!isNaN(childOffset)) {\n        currentSubSection.focus({ preventScroll: true });\n        objectPageRef.current?.scrollTo({\n          top:\n            childOffset -\n            topHeaderHeight -\n            anchorBarHeight -\n            TAB_CONTAINER_HEADER_HEIGHT /*tabBar*/ -\n            (headerPinned ? headerContentHeight : 0) -\n            16,\n          behavior: 'smooth'\n        });\n      }\n      isProgrammaticallyScrolled.current = false;\n    }\n  }, [\n    selectedSubSectionId,\n    isProgrammaticallyScrolled.current,\n    topHeaderHeight,\n    anchorBarHeight,\n    headerPinned,\n    headerContentHeight\n  ]);\n\n  useEffect(() => {\n    if (alwaysShowContentHeader !== undefined) {\n      setHeaderPinned(alwaysShowContentHeader);\n    }\n    if (alwaysShowContentHeader) {\n      onToggleHeaderContentVisibility({ detail: { visible: true } });\n    }\n  }, [alwaysShowContentHeader]);\n\n  const prevHeaderPinned = useRef(headerPinned);\n  useEffect(() => {\n    if (prevHeaderPinned.current && !headerPinned && objectPageRef.current.scrollTop > topHeaderHeight) {\n      onToggleHeaderContentVisibility({ detail: { visible: false } });\n      prevHeaderPinned.current = false;\n    }\n    if (!prevHeaderPinned.current && headerPinned) {\n      prevHeaderPinned.current = true;\n    }\n  }, [headerPinned, topHeaderHeight]);\n\n  useEffect(() => {\n    setSelectedSubSectionId(props.selectedSubSectionId);\n    if (props.selectedSubSectionId) {\n      isProgrammaticallyScrolled.current = true;\n      if (mode === ObjectPageMode.IconTabBar) {\n        let sectionId;\n        safeGetChildrenArray<ReactElement<ObjectPageSectionPropTypes>>(children).forEach((section) => {\n          if (isValidElement(section) && section.props && section.props.children) {\n            safeGetChildrenArray(section.props.children).forEach((subSection) => {\n              if (\n                isValidElement(subSection) &&\n                subSection.props &&\n                subSection.props.id === props.selectedSubSectionId\n              ) {\n                sectionId = section.props?.id;\n              }\n            });\n          }\n        });\n        if (sectionId) {\n          setInternalSelectedSectionId(sectionId);\n        }\n      }\n    }\n  }, [props.selectedSubSectionId, setInternalSelectedSectionId, setSelectedSubSectionId, children, mode]);\n\n  useEffect(() => {\n    const objectPage = objectPageRef.current;\n\n    const sections = objectPage.querySelectorAll<HTMLDivElement>('[id^=\"ObjectPageSection\"]');\n    const section = sections[sections.length - 1];\n\n    const observer = new ResizeObserver(([sectionElement]) => {\n      let heightDiff = 0;\n      if (objectPage.scrollHeight === objectPage.offsetHeight) {\n        heightDiff = Math.max(\n          objectPage.getBoundingClientRect().bottom - sectionElement.target.getBoundingClientRect().bottom,\n          0\n        );\n      }\n      const subSections = section.querySelectorAll<HTMLDivElement>('[id^=\"ObjectPageSubSection\"]');\n      const lastSubSection = subSections[subSections.length - 1];\n      if (lastSubSection) {\n        heightDiff +=\n          objectPage.getBoundingClientRect().height -\n          topHeaderHeight -\n          TAB_CONTAINER_HEADER_HEIGHT /*tabBar*/ -\n          (!headerCollapsed ? headerContentHeight : 0) -\n          lastSubSection.getBoundingClientRect().height -\n          32;\n      }\n      // heightDiff - footer - tabbar\n      setSpacerBottomHeight(\n        footer ? `calc(${heightDiff}px - 1rem - ${TAB_CONTAINER_HEADER_HEIGHT}px)` : `${heightDiff}px`\n      );\n    });\n\n    if (objectPage && section) {\n      observer.observe(section, { box: 'border-box' });\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [footer, headerCollapsed, topHeaderHeight, headerContentHeight]);\n\n  const onToggleHeaderContentVisibility = useCallback((e) => {\n    isToggledRef.current = true;\n    scrollTimeout.current = performance.now() + 500;\n    if (!e.detail.visible) {\n      setHeaderCollapsedInternal(true);\n      objectPageRef.current?.classList.add(classes.headerCollapsed);\n    } else {\n      setHeaderCollapsedInternal(false);\n      setScrolledHeaderExpanded(true);\n      objectPageRef.current?.classList.remove(classes.headerCollapsed);\n    }\n  }, []);\n\n  const handleOnSubSectionSelected = useCallback(\n    (e) => {\n      isProgrammaticallyScrolled.current = true;\n      if (mode === ObjectPageMode.IconTabBar) {\n        const sectionId = e.detail.sectionId;\n        setInternalSelectedSectionId(sectionId);\n\n        const sections = objectPageRef.current?.querySelectorAll('section[data-component-name=\"ObjectPageSection\"]');\n        const currentIndex = safeGetChildrenArray(children).findIndex((objectPageSection) => {\n          return isValidElement(objectPageSection) && objectPageSection.props?.id === sectionId;\n        });\n        debouncedOnSectionChange(e, currentIndex, sectionId, sections[currentIndex]);\n      }\n      const subSectionId = e.detail.subSectionId;\n      setSelectedSubSectionId(subSectionId);\n    },\n    [mode, setInternalSelectedSectionId, setSelectedSubSectionId, isProgrammaticallyScrolled, children]\n  );\n\n  const objectPageClasses = clsx(\n    classes.objectPage,\n    GlobalStyleClasses.sapScrollBar,\n    className,\n    mode === ObjectPageMode.IconTabBar && classes.iconTabBarMode\n  );\n\n  const { onScroll: _0, selectedSubSectionId: _1, ...propsWithoutOmitted } = rest;\n\n  useEffect(() => {\n    const sections = objectPageRef.current?.querySelectorAll('section[data-component-name=\"ObjectPageSection\"]');\n    const objectPageHeight = objectPageRef.current?.clientHeight ?? 1000;\n    const marginBottom = objectPageHeight - totalHeaderHeight - /*TabContainer*/ TAB_CONTAINER_HEADER_HEIGHT;\n    const rootMargin = `-${totalHeaderHeight}px 0px -${marginBottom < 0 ? 0 : marginBottom}px 0px`;\n    const observer = new IntersectionObserver(\n      ([section]) => {\n        if (section.isIntersecting && isProgrammaticallyScrolled.current === false) {\n          if (\n            objectPageRef.current.getBoundingClientRect().top + totalHeaderHeight + TAB_CONTAINER_HEADER_HEIGHT <=\n            section.target.getBoundingClientRect().bottom\n          ) {\n            const currentId = extractSectionIdFromHtmlId(section.target.id);\n            setInternalSelectedSectionId(currentId);\n            const currentIndex = safeGetChildrenArray(children).findIndex((objectPageSection) => {\n              return isValidElement(objectPageSection) && objectPageSection.props?.id === currentId;\n            });\n            debouncedOnSectionChange(scrollEvent.current, currentIndex, currentId, section.target);\n          }\n        }\n      },\n      {\n        root: objectPageRef.current,\n        rootMargin,\n        threshold: [0]\n      }\n    );\n\n    sections.forEach((el) => {\n      observer.observe(el);\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [children, totalHeaderHeight, setInternalSelectedSectionId, isProgrammaticallyScrolled]);\n\n  // Fallback when scrolling faster than the IntersectionObserver can observe (in most cases faster than 60fps)\n  useEffect(() => {\n    const sections = objectPageRef.current?.querySelectorAll('section[data-component-name=\"ObjectPageSection\"]');\n    if (isAfterScroll) {\n      let currentSection = sections[sections.length - 1];\n      let currentIndex;\n      for (let i = 0; i <= sections.length - 1; i++) {\n        const section = sections[i];\n        if (\n          objectPageRef.current.getBoundingClientRect().top + totalHeaderHeight + TAB_CONTAINER_HEADER_HEIGHT <=\n          section.getBoundingClientRect().bottom\n        ) {\n          currentSection = section;\n          currentIndex = i;\n          break;\n        }\n      }\n      const currentSectionId = extractSectionIdFromHtmlId(currentSection?.id);\n      if (currentSectionId !== internalSelectedSectionId) {\n        setInternalSelectedSectionId(currentSectionId);\n        debouncedOnSectionChange(\n          scrollEvent.current,\n          currentIndex ?? sections.length - 1,\n          currentSectionId,\n          currentSection\n        );\n      }\n      setIsAfterScroll(false);\n    }\n  }, [isAfterScroll]);\n\n  const titleHeaderNotClickable =\n    (alwaysShowContentHeader && !headerContentPinnable) ||\n    !headerContent ||\n    (!showHideHeaderButton && !headerContentPinnable);\n\n  const onTitleClick = useCallback(\n    (e) => {\n      e.stopPropagation();\n      if (!titleHeaderNotClickable) {\n        onToggleHeaderContentVisibility(enrichEventWithDetails(e, { visible: headerCollapsed }));\n      }\n    },\n    [onToggleHeaderContentVisibility, headerCollapsed, titleHeaderNotClickable]\n  );\n\n  const snappedHeaderInObjPage = headerTitle && headerTitle.props.snappedContent && headerCollapsed === true && !!image;\n\n  const renderTitleSection = useCallback(\n    (inHeader = false) => {\n      const titleInHeaderClass = inHeader ? classes.titleInHeader : undefined;\n\n      if (headerTitle?.props && headerTitle.props?.showSubHeaderRight === undefined) {\n        return cloneElement(headerTitle, {\n          showSubHeaderRight: true,\n          className: clsx(titleInHeaderClass, headerTitle?.props?.className),\n          'data-not-clickable': titleHeaderNotClickable,\n          onToggleHeaderContentVisibility: onTitleClick,\n          'data-header-content-visible': headerContent && headerCollapsed !== true,\n          'data-is-snapped-rendered-outside': snappedHeaderInObjPage\n        });\n      }\n      return cloneElement(headerTitle, {\n        className: clsx(titleInHeaderClass, headerTitle?.props?.className),\n        'data-not-clickable': titleHeaderNotClickable,\n        onToggleHeaderContentVisibility: onTitleClick,\n        'data-header-content-visible': headerContent && headerCollapsed !== true,\n        'data-is-snapped-rendered-outside': snappedHeaderInObjPage\n      });\n    },\n    [headerTitle, titleHeaderNotClickable, onTitleClick, headerCollapsed, snappedHeaderInObjPage, !!headerContent]\n  );\n\n  const isInitial = useRef(true);\n  useEffect(() => {\n    if (!isInitial.current) {\n      scrollTimeout.current = performance.now() + 200;\n    } else {\n      isInitial.current = false;\n    }\n  }, [snappedHeaderInObjPage]);\n\n  const renderHeaderContentSection = useCallback(() => {\n    if (headerContent?.props) {\n      return cloneElement(headerContent, {\n        ...headerContent.props,\n        topHeaderHeight,\n        style: headerCollapsed === true ? { position: 'absolute', visibility: 'hidden' } : headerContent.props.style,\n        headerPinned: headerPinned || scrolledHeaderExpanded,\n        ref: componentRefHeaderContent,\n        children: (\n          <div className={classes.headerContainer} data-component-name=\"ObjectPageHeaderContainer\">\n            {avatar}\n            {(headerContent.props.children || titleInHeader) && (\n              <div data-component-name=\"ObjectPageHeaderContent\">\n                {titleInHeader && renderTitleSection(true)}\n                {headerContent.props.children}\n              </div>\n            )}\n          </div>\n        )\n      });\n    } else if (titleInHeader) {\n      return (\n        <DynamicPageHeader\n          topHeaderHeight={topHeaderHeight}\n          style={headerCollapsed === true ? { position: 'absolute', visibility: 'hidden' } : undefined}\n          headerPinned={headerPinned || scrolledHeaderExpanded}\n          ref={componentRefHeaderContent}\n        >\n          <div className={classes.headerContainer} data-component-name=\"ObjectPageHeaderContainer\">\n            {avatar}\n            <div data-component-name=\"ObjectPageHeaderContent\">{titleInHeader && renderTitleSection(true)}</div>\n          </div>\n        </DynamicPageHeader>\n      );\n    }\n  }, [\n    headerContent,\n    topHeaderHeight,\n    headerPinned,\n    scrolledHeaderExpanded,\n    titleInHeader,\n    avatar,\n    headerContentRef,\n    renderTitleSection\n  ]);\n\n  const onTabItemSelect = (event) => {\n    event.preventDefault();\n    const { sectionId, index, isSubTab, parentId } = event.detail.tab.dataset;\n    if (isSubTab) {\n      handleOnSubSectionSelected(enrichEventWithDetails(event, { sectionId: parentId, subSectionId: sectionId }));\n    } else {\n      const section = safeGetChildrenArray<ReactElement>(children).find((el) => {\n        return el.props.id == sectionId;\n      });\n      handleOnSectionSelected(event, section?.props?.id, index, section);\n    }\n  };\n\n  const prevScrollTop = useRef();\n  const onObjectPageScroll = useCallback(\n    (e) => {\n      if (!isToggledRef.current) {\n        isToggledRef.current = true;\n      }\n      if (scrollTimeout.current >= performance.now()) {\n        return;\n      }\n      scrollEvent.current = e;\n      if (typeof props.onScroll === 'function') {\n        props.onScroll(e);\n      }\n      if (selectedSubSectionId) {\n        setSelectedSubSectionId(undefined);\n      }\n      if (selectionScrollTimeout.current) {\n        clearTimeout(selectionScrollTimeout.current);\n      }\n      selectionScrollTimeout.current = setTimeout(() => {\n        setIsAfterScroll(true);\n      }, 100);\n      if (!headerPinned || e.target.scrollTop === 0) {\n        objectPageRef.current?.classList.remove(classes.headerCollapsed);\n      }\n      if (scrolledHeaderExpanded && e.target.scrollTop !== prevScrollTop.current) {\n        if (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight) {\n          return;\n        }\n        prevScrollTop.current = e.target.scrollTop;\n        if (!headerPinned) {\n          setHeaderCollapsedInternal(true);\n        }\n        setScrolledHeaderExpanded(false);\n      }\n    },\n    [topHeaderHeight, headerPinned, props.onScroll, scrolledHeaderExpanded, selectedSubSectionId]\n  );\n\n  const onHoverToggleButton = useCallback(\n    (e) => {\n      if (e?.type === 'mouseover') {\n        topHeaderRef.current?.classList.add(classes.headerHoverStyles);\n      } else {\n        topHeaderRef.current?.classList.remove(classes.headerHoverStyles);\n      }\n    },\n    [classes.headerHoverStyles]\n  );\n\n  const objectPageStyles = { ...style };\n  if (headerCollapsed === true && (headerContent || titleInHeader)) {\n    objectPageStyles[DynamicPageCssVariables.titleFontSize] = ThemingParameters.sapObjectHeader_Title_SnappedFontSize;\n  }\n\n  return (\n    <div\n      data-component-name=\"ObjectPage\"\n      slot={slot}\n      className={objectPageClasses}\n      style={objectPageStyles}\n      ref={componentRef}\n      onScroll={onObjectPageScroll}\n      {...propsWithoutOmitted}\n    >\n      <header\n        onMouseOver={onHoverToggleButton}\n        onMouseLeave={onHoverToggleButton}\n        data-component-name=\"ObjectPageTopHeader\"\n        ref={topHeaderRef}\n        role={a11yConfig?.objectPageTopHeader?.role}\n        data-not-clickable={titleHeaderNotClickable}\n        aria-roledescription={a11yConfig?.objectPageTopHeader?.ariaRoledescription ?? 'Object Page header'}\n        className={classes.header}\n        onClick={onTitleClick}\n        style={{\n          gridAutoColumns: `min-content ${\n            headerTitle && image && headerCollapsed === true ? `calc(100% - 3rem - 1rem)` : '100%'\n          }`,\n          display: !showTitleInHeaderContent || headerCollapsed === true ? 'grid' : 'none'\n        }}\n      >\n        {headerTitle && image && headerCollapsed === true && (\n          <CollapsedAvatar image={image} imageShapeCircle={imageShapeCircle} />\n        )}\n        {headerTitle && renderTitleSection()}\n        {snappedHeaderInObjPage && (\n          <div className={classes.snappedContent} data-component-name=\"ATwithImageSnappedContentContainer\">\n            {headerTitle.props.snappedContent}\n          </div>\n        )}\n      </header>\n      {renderHeaderContentSection()}\n      {headerContent && headerTitle && (\n        <div\n          data-component-name=\"ObjectPageAnchorBar\"\n          ref={anchorBarRef}\n          className={classes.anchorBar}\n          style={{\n            top:\n              scrolledHeaderExpanded || headerPinned\n                ? `${topHeaderHeight + (headerCollapsed === true ? 0 : headerContentHeight)}px`\n                : `${topHeaderHeight + 5}px`\n          }}\n        >\n          <DynamicPageAnchorBar\n            headerContentVisible={headerContent && headerCollapsed !== true}\n            headerContentPinnable={headerContentPinnable}\n            showHideHeaderButton={showHideHeaderButton}\n            headerPinned={headerPinned}\n            a11yConfig={a11yConfig}\n            onToggleHeaderContentVisibility={onToggleHeaderContentVisibility}\n            setHeaderPinned={setHeaderPinned}\n            onHoverToggleButton={onHoverToggleButton}\n            onPinnedStateChange={onPinnedStateChange}\n          />\n        </div>\n      )}\n      {!placeholder && (\n        <div\n          className={classes.tabContainer}\n          data-component-name=\"ObjectPageTabContainer\"\n          style={{\n            top:\n              headerPinned || scrolledHeaderExpanded\n                ? `${topHeaderHeight + (headerCollapsed === true ? 0 : headerContentHeight)}px`\n                : `${topHeaderHeight}px`\n          }}\n        >\n          <TabContainer\n            collapsed\n            fixed\n            onTabSelect={onTabItemSelect}\n            data-component-name=\"ObjectPageTabContainer\"\n            className={classes.tabContainerComponent}\n          >\n            {safeGetChildrenArray(children).map((section, index) => {\n              if (!isValidElement(section) || !section.props) return null;\n              const subTabs = safeGetChildrenArray(section.props.children).filter(\n                (subSection) =>\n                  // @ts-expect-error: if the `ObjectPageSubSection` component is passed as children, the `displayName` is available. Otherwise, the default children should be rendered w/o additional logic.\n                  isValidElement(subSection) && subSection?.type?.displayName === 'ObjectPageSubSection'\n              );\n              return (\n                <Tab\n                  key={`Anchor-${section.props?.id}`}\n                  data-index={index}\n                  data-section-id={section.props.id}\n                  text={section.props.titleText}\n                  selected={internalSelectedSectionId === section.props?.id || undefined}\n                  subTabs={subTabs.map((item) => {\n                    if (!isValidElement(item)) {\n                      return null;\n                    }\n                    return (\n                      <Tab\n                        data-parent-id={section.props.id}\n                        key={item.props.id}\n                        data-is-sub-tab\n                        data-section-id={item.props.id}\n                        text={item.props.titleText}\n                        selected={item.props.id === selectedSubSectionId || undefined}\n                      >\n                        {/*ToDo: workaround for nested tab selection*/}\n                        <span style={{ display: 'none' }} />\n                      </Tab>\n                    );\n                  })}\n                >\n                  {/*ToDo: workaround for nested tab selection*/}\n                  <span style={{ display: 'none' }} />\n                </Tab>\n              );\n            })}\n          </TabContainer>\n        </div>\n      )}\n      <div data-component-name=\"ObjectPageContent\" className={classes.content}>\n        <div style={{ height: headerCollapsed ? `${headerContentHeight}px` : 0 }} aria-hidden=\"true\" />\n        {placeholder\n          ? placeholder\n          : mode === ObjectPageMode.IconTabBar\n          ? getSectionById(children, internalSelectedSectionId)\n          : children}\n        <div style={{ height: spacerBottomHeight }} aria-hidden=\"true\" />\n      </div>\n      {footer && <div style={{ height: '1rem' }} data-component-name=\"ObjectPageFooterSpacer\" />}\n      {footer && (\n        <footer className={classes.footer} data-component-name=\"ObjectPageFooter\">\n          {footer}\n        </footer>\n      )}\n    </div>\n  );\n});\n\nObjectPage.displayName = 'ObjectPage';\n\nObjectPage.defaultProps = {\n  image: null,\n  mode: ObjectPageMode.Default,\n  imageShapeCircle: false,\n  showHideHeaderButton: false\n};\n\nexport { ObjectPage };\n","import { ThemingParameters } from '@ui5/webcomponents-react-base';\nimport { CustomThemingParameters } from '../../themes/CustomVariables.js';\n\nconst styles = {\n  section: {\n    '& [data-component-name=\"ObjectPageSubSection\"]:not(:first-child)': {\n      paddingBlockStart: '0.5rem'\n    }\n  },\n  headerContainer: {\n    paddingBlock: '0.5rem',\n    color: ThemingParameters.sapGroup_TitleTextColor,\n    fontFamily: ThemingParameters.sapFontFamily\n  },\n  titleContainer: {\n    borderTop: CustomThemingParameters.ObjectPageSectionBorderTop,\n    boxSizing: 'border-box',\n    height: '2.25rem'\n  },\n  title: {\n    height: CustomThemingParameters.ObjectPageSectionTitleHeight,\n    lineHeight: CustomThemingParameters.ObjectPageSectionTitleLineHeight,\n    color: ThemingParameters.sapGroup_TitleTextColor,\n    fontSize: ThemingParameters.sapFontHeader4Size,\n    display: 'inline-block',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    fontFamily: CustomThemingParameters.ObjectPageSectionTitleFontFamily,\n    textDecoration: CustomThemingParameters.ObjectPageSectionTitleTextDecoration\n  },\n  uppercase: {\n    textTransform: 'uppercase'\n  },\n  wrap: {\n    '& $titleContainer': {\n      height: 'unset'\n    },\n    '& $title': {\n      whiteSpace: 'normal',\n      height: 'unset',\n      lineHeight: 'normal'\n    }\n  },\n  sectionContent: {\n    whiteSpace: 'normal'\n  },\n  sectionContentInner: {\n    paddingBlock: '0.5rem',\n    fontFamily: ThemingParameters.sapFontFamily\n  }\n};\n\nexport default styles;\n","'use client';\n\nimport { clsx } from 'clsx';\nimport type { ReactNode } from 'react';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport type { TitleLevel } from '../../enums/index.js';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport styles from './ObjectPageSection.jss.js';\n\nexport interface ObjectPageSectionPropTypes extends CommonProps {\n  /**\n   * Defines the ID of the `ObjectPageSection`.<br />\n   * __Note:__ The `id` is taken into account when the section selection changes.\n   */\n  id: string;\n  /**\n   * Defines the content of the `ObjectPageSection`.\n   */\n  children: ReactNode | ReactNode[];\n  /**\n   * Defines the title of the `ObjectPageSection`.\n   *\n   * @default ''\n   */\n  titleText?: string;\n  /**\n   * Defines whether the title is always displayed in uppercase.\n   *\n   * @default true\n   */\n  titleTextUppercase?: boolean;\n  /**\n   * Determines whether to display the Section title or not.\n   */\n  hideTitleText?: boolean;\n  /**\n   * Determines the ARIA level of the ObjectPageSection `titleText`. The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.\n   *\n   * __Note:__ Defining a `titleTextLevel` will add aria-level attribute from 1 to 6, instead of changing the ObjectPageSectionBase title HTML tag from H1 to H6.\n   * For example: if titleTextLevel is TitleLevel.H1, it will result as aria-level of 1 added to the ObjectPageSection title.\n   *\n   * @default TitleLevel.H3\n   */\n  titleTextLevel?: TitleLevel | keyof typeof TitleLevel;\n  /**\n   * Determines whether the Section title wraps on multiple lines, when the available space is not enough.\n   */\n  wrapTitleText?: boolean;\n  /**\n   * Section header content.\n   *\n   * __Note__: Although this prop accepts all HTML Elements, it is strongly recommended that you only use non-focusable elements to preserve the intended design.\n   */\n  header?: ReactNode;\n}\n\nconst useStyles = createUseStyles(styles, { name: 'ObjectPageSection' });\n/**\n * Top-level information container of an `ObjectPage`.\n */\nconst ObjectPageSection = forwardRef<HTMLElement, ObjectPageSectionPropTypes>((props, ref) => {\n  const {\n    titleText = '',\n    id,\n    children,\n    titleTextUppercase = true,\n    className,\n    style,\n    hideTitleText,\n    titleTextLevel = 'H3',\n    wrapTitleText,\n    header,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  const htmlId = `ObjectPageSection-${id}`;\n\n  const titleClasses = clsx(classes.title, titleTextUppercase && classes.uppercase);\n\n  return (\n    <section\n      ref={ref}\n      role=\"region\"\n      className={clsx(classes.section, wrapTitleText && classes.wrap, className)}\n      style={style}\n      {...rest}\n      id={htmlId}\n      data-component-name=\"ObjectPageSection\"\n    >\n      {!!header && <div className={classes.headerContainer}>{header}</div>}\n      {!hideTitleText && (\n        <div\n          role=\"heading\"\n          aria-level={parseInt(titleTextLevel.slice(1))}\n          className={classes.titleContainer}\n          data-component-name=\"ObjectPageSectionTitleText\"\n        >\n          <div className={titleClasses}>{titleText}</div>\n        </div>\n      )}\n      <div className={classes.sectionContent}>\n        <div className={classes.sectionContentInner} data-component-name=\"ObjectPageSectionContent\">\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n});\n\nObjectPageSection.displayName = 'ObjectPageSection';\n\nexport { ObjectPageSection };\n","'use client';\n\nimport { ThemingParameters } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport type { ReactNode } from 'react';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport type { TitleLevel } from '../../enums/index.js';\nimport { FlexBoxAlignItems, FlexBoxDirection, FlexBoxJustifyContent } from '../../enums/index.js';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport { CustomThemingParameters } from '../../themes/CustomVariables.js';\nimport { FlexBox } from '../FlexBox/index.js';\n\nexport interface ObjectPageSubSectionPropTypes extends CommonProps {\n  /**\n   * Defines the ID of the `ObjectPageSubSection`.\n   */\n  id: string;\n  /**\n   * Defines the content of the `ObjectPageSubSection`.\n   */\n  children: ReactNode | ReactNode[];\n  /**\n   * Defines the title of the `ObjectPageSubSection`.\n   */\n  titleText?: string;\n  /**\n   * Actions available for this subsection.\n   *\n   * __Note:__ Keep in mind that the components set in the actions prop do NOT have overflow behavior. If the available space is not enough, the components will be displayed on more lines.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use simple input components like `Button` or `Switch` to preserve the intended design.\n   */\n  actions?: ReactNode | ReactNode[];\n  /**\n   * Determines whether to display the SubSection `titleText` or not.\n   */\n  hideTitleText?: boolean;\n  /**\n   * Determines the ARIA level of the ObjectPageSubSection `titleText`. The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.\n   *\n   * __Note:__ Defining a `titleTextLevel` will add aria-level attribute from 1 to 6, instead of changing the ObjectPageSectionBase title HTML tag from H1 to H6.\n   * For example: if titleTextLevel is TitleLevel.H1, it will result as aria-level of 1 added to the ObjectPageSection title.\n   *\n   * @default TittleLevel.H4\n   */\n  titleTextLevel?: TitleLevel | keyof typeof TitleLevel;\n  /**\n   * Defines whether the title is always displayed in uppercase.\n   */\n  titleTextUppercase?: boolean;\n}\n\nconst styles = {\n  objectPageSubSection: {\n    '&:focus': {\n      outline: `${ThemingParameters.sapContent_FocusWidth} ${ThemingParameters.sapContent_FocusStyle} ${ThemingParameters.sapContent_FocusColor}`,\n      outlineOffset: `calc(-1 * ${ThemingParameters.sapContent_FocusWidth})`\n    }\n  },\n  headerContainer: {\n    marginBlockEnd: '0.5rem',\n    '& >:first-child': {\n      marginInline: '0 0.25rem'\n    },\n    '& >:last-child:not(:first-child)': {\n      marginInline: '0.25rem 0'\n    },\n    '& > *:not(:first-child):not(:last-child)': {\n      marginInline: '0.25rem'\n    }\n  },\n  subSectionTitle: {\n    fontSize: ThemingParameters.sapFontHeader5Size,\n    color: ThemingParameters.sapGroup_TitleTextColor,\n    flexGrow: 1\n  },\n  subSectionContent: {\n    backgroundColor: CustomThemingParameters.ObjectPageSubSectionBackgroundColor,\n    borderRadius: CustomThemingParameters.ObjectPageSubSectionBorderRadius,\n    paddingInline: '0.5rem',\n    paddingBlock: '1rem'\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  uppercase: {\n    textTransform: 'uppercase'\n  }\n};\n\nconst useStyles = createUseStyles(styles, { name: 'ObjectPageSubSection' });\n/**\n * Second-level information container of an `ObjectPage`.<br />\n * __Note:__ This component should only be used inside an `ObjectPageSection` component.\n */\nconst ObjectPageSubSection = forwardRef<HTMLDivElement, ObjectPageSubSectionPropTypes>((props, ref) => {\n  const {\n    children,\n    id,\n    titleText,\n    className,\n    style,\n    actions,\n    hideTitleText,\n    titleTextLevel = 'H4',\n    titleTextUppercase,\n    ...rest\n  } = props;\n  const htmlId = `ObjectPageSubSection-${id}`;\n  const classes = useStyles();\n  const subSectionClassName = clsx(classes.objectPageSubSection, className);\n\n  return (\n    <div\n      ref={ref}\n      role=\"region\"\n      style={style}\n      tabIndex={-1}\n      {...rest}\n      className={subSectionClassName}\n      id={htmlId}\n      data-component-name=\"ObjectPageSubSection\"\n    >\n      <FlexBox\n        direction={FlexBoxDirection.Row}\n        justifyContent={FlexBoxJustifyContent.SpaceBetween}\n        alignItems={FlexBoxAlignItems.Center}\n        className={classes.headerContainer}\n        data-component-name=\"ObjectPageSubSectionHeaderContainer\"\n      >\n        {!hideTitleText ? (\n          <div\n            role=\"heading\"\n            aria-level={parseInt(titleTextLevel.slice(1))}\n            className={clsx(classes.subSectionTitle, titleTextUppercase && classes.uppercase)}\n            data-component-name=\"ObjectPageSubSectionTitleText\"\n          >\n            {titleText}\n          </div>\n        ) : (\n          <span aria-hidden=\"true\" className={classes.spacer} />\n        )}\n        {actions && actions}\n      </FlexBox>\n      <div className={classes.subSectionContent} data-component-name=\"ObjectPageSubSectionContent\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nObjectPageSubSection.displayName = 'ObjectPageSubSection';\n\nexport { ObjectPageSubSection };\n"],"names":["ObjectPageMode","safeGetChildrenArray","children","childArray","Children","child","isValidElement","styles","useStyles","createUseStyles","CollapsedAvatar","props","image","imageShapeCircle","style","classes","isMounted","setIsMounted","useState","domRef","useRef","avatarContent","useMemo","jsx","cloneElement","AvatarSize","_a","_b","useEffect","containerClasses","clsx","ObjectPageCssVariables","DynamicPageCssVariables","ThemingParameters","ResponsiveContainerPadding","getSectionById","sections","id","objectPageSection","extractSectionIdFromHtmlId","addCustomCSSWithScoping","TAB_CONTAINER_HEADER_HEIGHT","ObjectPage","forwardRef","ref","headerTitle","footer","mode","className","slot","showHideHeaderButton","selectedSectionId","alwaysShowContentHeader","showTitleInHeaderContent","headerContent","headerContentPinnable","a11yConfig","placeholder","onSelectedSectionChange","onToggleHeaderContent","onPinnedStateChange","rest","firstSectionId","internalSelectedSectionId","setInternalSelectedSectionId","selectedSubSectionId","setSelectedSubSectionId","headerPinned","setHeaderPinned","isProgrammaticallyScrolled","componentRef","objectPageRef","useSyncRef","topHeaderRef","scrollEvent","componentRefHeaderContent","headerContentRef","anchorBarRef","selectionScrollTimeout","isAfterScroll","setIsAfterScroll","isToggledRef","headerCollapsedInternal","setHeaderCollapsedInternal","scrolledHeaderExpanded","setScrolledHeaderExpanded","scrollTimeout","spacerBottomHeight","setSpacerBottomHeight","titleInHeader","prevInternalSelectedSectionId","fireOnSelectedChangedEvent","targetEvent","index","section","enrichEventWithDetails","debouncedOnSectionChange","debounce","topHeaderHeight","headerContentHeight","anchorBarHeight","totalHeaderHeight","headerCollapsed","useObserveHeights","avatar","prevTopHeaderHeight","scrollToSection","useCallback","sectionId","childOffset","_c","safeTopHeaderHeight","_d","programmaticallySetSection","currentId","prevSelectedSectionId","currentIndex","timeStamp","setTimeStamp","requestAnimationFrameRef","internalTimestamp","handleOnSectionSelected","newSelectionSectionId","oldSelectedSection","currentSubSection","onToggleHeaderContentVisibility","prevHeaderPinned","subSection","objectPage","observer","sectionElement","heightDiff","subSections","lastSubSection","e","handleOnSubSectionSelected","subSectionId","objectPageClasses","GlobalStyleClasses","_0","_1","propsWithoutOmitted","marginBottom","rootMargin","el","currentSection","i","currentSectionId","titleHeaderNotClickable","onTitleClick","snappedHeaderInObjPage","renderTitleSection","inHeader","titleInHeaderClass","isInitial","renderHeaderContentSection","jsxs","DynamicPageHeader","onTabItemSelect","event","isSubTab","parentId","prevScrollTop","onObjectPageScroll","onHoverToggleButton","objectPageStyles","DynamicPageAnchorBar","TabContainer","subTabs","Tab","item","CustomThemingParameters","styles$2","ObjectPageSection","titleText","titleTextUppercase","hideTitleText","titleTextLevel","wrapTitleText","header","htmlId","titleClasses","ObjectPageSubSection","actions","subSectionClassName","FlexBox","FlexBoxDirection","FlexBoxJustifyContent","FlexBoxAlignItems"],"mappings":"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"}