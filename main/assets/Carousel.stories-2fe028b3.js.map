{"version":3,"mappings":"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","names":["Carousel","withWebComponent","__vitePreload","n","CarouselArrowsPlacement","BackgroundDesign","BorderDesign","CarouselPageIndicatorStyle","Description","Img1","jsx","Img2","Img3","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","DocsHeader","Canvas","Story","args","ArgsTableWithNote","Markdown","DomRefTable","CarouselDomRef","Footer","defaultStory","componentMeta","__namedExportsOrder"],"sources":["../../packages/main/src/webComponents/Carousel/index.tsx","../../packages/main/src/webComponents/Carousel/CarouselDescription.md?raw","../../packages/main/src/webComponents/Carousel/CodeGen.tsx","../../packages/main/src/webComponents/Carousel/Carousel.stories.mdx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/Carousel.js';\nimport type { CarouselNavigateEventDetail } from '@ui5/webcomponents/dist/Carousel.js';\nimport type { ReactNode } from 'react';\nimport {\n  CarouselArrowsPlacement,\n  BackgroundDesign,\n  BorderDesign,\n  CarouselPageIndicatorStyle\n} from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n\ninterface CarouselAttributes {\n  /**\n   * Defines the position of arrows.\n   *\n   * Available options are:\n   *\n   * *   `Content` - the arrows are placed on the sides of the current page.\n   * *   `Navigation` - the arrows are placed on the sides of the page indicator.\n   */\n  arrowsPlacement?: CarouselArrowsPlacement | keyof typeof CarouselArrowsPlacement;\n  /**\n   * Defines the carousel's background design.\n   */\n  backgroundDesign?: BackgroundDesign | keyof typeof BackgroundDesign;\n  /**\n   * Defines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa.\n   */\n  cyclic?: boolean;\n  /**\n   * Defines the visibility of the navigation arrows. If set to true the navigation arrows will be hidden.\n   *\n   * **Note:** The navigation arrows are never displayed on touch devices. In this case, the user can swipe to navigate through the items.\n   */\n  hideNavigationArrows?: boolean;\n  /**\n   * Defines the visibility of the page indicator. If set to true the page indicator will be hidden.\n   */\n  hidePageIndicator?: boolean;\n  /**\n   * Defines the number of items per page on large size (more than 1024px). One item per page shown by default.\n   */\n  itemsPerPageL?: number;\n  /**\n   * Defines the number of items per page on medium size (from 640px to 1024px). One item per page shown by default.\n   */\n  itemsPerPageM?: number;\n  /**\n   * Defines the number of items per page on small size (up to 640px). One item per page shown by default.\n   */\n  itemsPerPageS?: number;\n  /**\n   * Defines the page indicator background design.\n   */\n  pageIndicatorBackgroundDesign?: BackgroundDesign | keyof typeof BackgroundDesign;\n  /**\n   * Defines the page indicator border design.\n   */\n  pageIndicatorBorderDesign?: BorderDesign | keyof typeof BorderDesign;\n  /**\n   * Defines the style of the page indicator. Available options are:\n   *\n   * *   `Default` - The page indicator will be visualized as dots if there are fewer than 9 pages. If there are more pages, the page indicator will switch to displaying the current page and the total number of pages. (e.g. X of Y)\n   * *   `Numeric` - The page indicator will display the current page and the total number of pages. (e.g. X of Y)\n   */\n  pageIndicatorStyle?: CarouselPageIndicatorStyle | keyof typeof CarouselPageIndicatorStyle;\n}\n\nexport interface CarouselDomRef extends CarouselAttributes, Ui5DomRef {\n  /**\n   * Changes the currently displayed page.\n   * @param {number} itemIndex - The index of the target page\n   */\n  navigateTo: (itemIndex: number) => void;\n}\n\nexport interface CarouselPropTypes extends CarouselAttributes, CommonProps {\n  /**\n   * Defines the content of the component.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired whenever the page changes due to user interaction, when the user clicks on the navigation arrows or while resizing, based on the `items-per-page-l`, `items-per-page-m` and `items-per-page-s` properties.\n   */\n  onNavigate?: (event: Ui5CustomEvent<CarouselDomRef, CarouselNavigateEventDetail>) => void;\n}\n\n/**\n * The Carousel allows the user to browse through a set of items. The component is mostly used for showing a gallery of images, but can hold any other HTML element.\n * There are several ways to perform navigation:\n *\n * *   on desktop - the user can navigate using the navigation arrows or with keyboard shorcuts.\n * *   on mobile - the user can use swipe gestures.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Componentsâ€™ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Carousel)\n */\nconst Carousel = withWebComponent<CarouselPropTypes, CarouselDomRef>(\n  'ui5-carousel',\n  [\n    'arrowsPlacement',\n    'backgroundDesign',\n    'itemsPerPageL',\n    'itemsPerPageM',\n    'itemsPerPageS',\n    'pageIndicatorBackgroundDesign',\n    'pageIndicatorBorderDesign',\n    'pageIndicatorStyle'\n  ],\n  ['cyclic', 'hideNavigationArrows', 'hidePageIndicator'],\n  [],\n  ['navigate'],\n  () => import('@ui5/webcomponents/dist/Carousel.js')\n);\n\nCarousel.displayName = 'Carousel';\n\nCarousel.defaultProps = {\n  arrowsPlacement: CarouselArrowsPlacement.Content,\n  backgroundDesign: BackgroundDesign.Translucent,\n  itemsPerPageL: 1,\n  itemsPerPageM: 1,\n  itemsPerPageS: 1,\n  pageIndicatorBackgroundDesign: BackgroundDesign.Solid,\n  pageIndicatorBorderDesign: BorderDesign.Solid,\n  pageIndicatorStyle: CarouselPageIndicatorStyle.Default\n};\n\nexport { Carousel };\n","export default \"## Usage\\n\\n### When to use:\\n\\n- The items you want to display are very different from each other.\\n- You want to display the items one after the other.\\n\\n### When not to use:\\n\\n- The items you want to display need to be visible at the same time.\\n- The items you want to display are uniform and very similar.\\n\\n## Keyboard Handling\\n\\n### Basic Navigation\\n\\nWhen the `Carousel` is focused the user can navigate between the items with the following keyboard shortcuts:\\n\\n- \\\\[UP/DOWN\\\\] - Navigates to previous and next item\\n- \\\\[LEFT/RIGHT\\\\] - Navigates to previous and next item\\n\\n## Fast Navigation\\n\\nThis component provides a build in fast navigation group which can be used via `F6 / Shift + F6` or `Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up`. In order to use this functionality, you need to import the following module: `import \\\"@ui5/webcomponents-base/dist/features/F6Navigation.js\\\"`\\n\\n## CSS Shadow Parts\\n\\n<ui5-link target=\\\"_blank\\\" href=\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\\\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.  \\nThe `Carousel` exposes the following CSS Shadow Parts:\\n\\n- content - Used to style the content of the component\\n\"","import React from 'react';\n\nexport const Img1 = <img src=\"https://sap.github.io/ui5-webcomponents/assets/images/sample1.jpg\" alt=\"img-sample 1\" />;\nexport const Img2 = <img src=\"https://sap.github.io/ui5-webcomponents/assets/images/sample2.jpg\" alt=\"img-sample 2\" />;\nexport const Img3 = <img src=\"https://sap.github.io/ui5-webcomponents/assets/images/sample3.jpg\" alt=\"img-sample 3\" />;\n","import { Canvas, Markdown, Meta, Story } from '@storybook/blocks';\nimport { Carousel } from './index';\nimport { CarouselArrowsPlacement } from '../../enums/CarouselArrowsPlacement';\nimport { ArgsTableWithNote, DocsHeader, DomRefTable, Footer } from '@sb/components';\nimport Description from './CarouselDescription.md?raw';\nimport CarouselDomRef from './CarouselDomRef.json';\nimport { Img1, Img2, Img3 } from './CodeGen';\n\n<Meta\n  title=\"Layouts & Floorplans / Carousel\"\n  component={Carousel}\n  argTypes={{\n    children: { control: { disable: true } }\n  }}\n  args={{\n    arrowsPlacement: CarouselArrowsPlacement.Content\n  }}\n/>\n\n<DocsHeader since=\"0.9.0\" />\n\n<br />\n\n## Example\n\n<Canvas>\n  <Story name=\"Default\">\n    {(args) => {\n      return (\n        <Carousel {...args}>\n          {Img1}\n          {Img2}\n          {Img3}\n        </Carousel>\n      );\n    }}\n  </Story>\n</Canvas>\n\n## Properties\n\n<ArgsTableWithNote story=\"Default\" />\n\n<Markdown>{Description}</Markdown>\n\n<DomRefTable rows={CarouselDomRef} />\n\n<Footer />\n"],"file":"assets/Carousel.stories-2fe028b3.js"}