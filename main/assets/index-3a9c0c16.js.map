{"version":3,"file":"index-3a9c0c16.js","sources":["../../packages/main/src/components/DynamicPage/index.tsx"],"sourcesContent":["'use client';\n\nimport { debounce, enrichEventWithDetails, ThemingParameters, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport type { ReactElement, ReactNode } from 'react';\nimport React, { cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { GlobalStyleClasses, PageBackgroundDesign } from '../../enums/index.js';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport { useObserveHeights } from '../../internal/useObserveHeights.js';\nimport { DynamicPageAnchorBar } from '../DynamicPageAnchorBar/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport { DynamicPageCssVariables, styles } from './DynamicPage.jss.js';\n\nexport interface DynamicPagePropTypes extends Omit<CommonProps, 'title' | 'children'> {\n  /**\n   * Determines the background color of DynamicPage.\n   */\n  backgroundDesign?: PageBackgroundDesign | keyof typeof PageBackgroundDesign;\n  /**\n   * Defines whether the `headerContent` can be hidden by scrolling down.\n   */\n  alwaysShowContentHeader?: boolean;\n  /**\n   * Determines whether the expand/collapse `headerContent` button is shown.\n   */\n  showHideHeaderButton?: boolean;\n  /**\n   * Determines whether the pin button is shown.\n   */\n  headerContentPinnable?: boolean;\n  /**\n   * Defines the upper, always static, title section of the `DynamicPage`.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `DynamicPageTitle` in order to preserve the intended design.\n   */\n  headerTitle?: ReactElement;\n  /**\n   * Defines the dynamic header section of the `DynamicPage`.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `DynamicPageHeader` in order to preserve the intended design.\n   */\n  headerContent?: ReactElement;\n  /**\n   * React element which defines the footer content.\n   *\n   * __Note:__ To preserve the intended design, please use only non-content based `height` values (`px`, `rem`, `vh`, etc.) as height of the `DynamicPage`.\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `Bar` with `design={BarDesign.FloatingFooter}` in order to preserve the intended design.\n   */\n  footer?: ReactElement;\n  /**\n   * React element or node array which defines the content.\n   *\n   * __Note:__ Assigning `children` as function is recommended when implementing sticky sub-headers. You can find out more about this [here](https://sap.github.io/ui5-webcomponents-react/?path=/story/layouts-floorplans-dynamicpage--sticky-sub-headers).\n   */\n  children?: ReactNode | ReactNode[] | ((payload: { stickyHeaderHeight: number }) => ReactElement);\n  /**\n   * Defines internally used a11y properties.\n   */\n  a11yConfig?: {\n    dynamicPageAnchorBar?: {\n      role?: string;\n    };\n    dynamicPageFooter?: {\n      role?: string;\n      'aria-label'?: string;\n      'aria-labelledby'?: string;\n    };\n  };\n  /**\n   * Fired when the `headerContent` is expanded or collapsed.\n   */\n  onToggleHeaderContent?: (visible: boolean) => void;\n  /**\n   * Fired when the `headerContent` changes its `pinned` state.\n   */\n  onPinnedStateChange?: (pinned: boolean) => void;\n}\n\n/**\n * Defines the current state of the component.\n */\nenum HEADER_STATES {\n  AUTO = 'AUTO',\n  VISIBLE_PINNED = 'VISIBLE_PINNED',\n  HIDDEN_PINNED = 'HIDDEN_PINNED',\n  VISIBLE = 'VISIBLE',\n  HIDDEN = 'HIDDEN'\n}\n\nconst useStyles = createUseStyles(styles, { name: 'DynamicPage' });\n/**\n * The dynamic page is a generic layout control designed to support various floorplans and use cases.\n * The content of both the header and the page can differ from floorplan to floorplan.\n *\n * The header of the dynamic page is collapsible, which helps users to focus on the actual page content, but still ensures that important header information\n * and actions are readily available.\n */\nconst DynamicPage = forwardRef<HTMLDivElement, DynamicPagePropTypes>((props, ref) => {\n  const {\n    headerTitle,\n    headerContent,\n    style,\n    backgroundDesign,\n    showHideHeaderButton,\n    headerContentPinnable,\n    alwaysShowContentHeader,\n    children,\n    className,\n    footer,\n    a11yConfig,\n    onToggleHeaderContent,\n    onPinnedStateChange,\n    ...rest\n  } = props;\n  const { onScroll: _1, ...propsWithoutOmitted } = rest;\n\n  const anchorBarRef = useRef<HTMLDivElement>(null);\n  const [componentRef, dynamicPageRef] = useSyncRef<HTMLDivElement>(ref);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  const [componentRefTopHeader, topHeaderRef] = useSyncRef<HTMLDivElement>((headerTitle as any)?.ref);\n  const [componentRefHeaderContent, headerContentRef] = useSyncRef<HTMLDivElement>((headerContent as any)?.ref);\n  const scrollTimeout = useRef(0);\n\n  const [headerState, setHeaderState] = useState<HEADER_STATES>(\n    alwaysShowContentHeader ? HEADER_STATES.VISIBLE_PINNED : HEADER_STATES.AUTO\n  );\n  const isToggledRef = useRef(false);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n\n  const [headerCollapsedInternal, setHeaderCollapsedInternal] = useState<undefined | boolean>(undefined);\n  // observe heights of header parts\n  const { topHeaderHeight, headerCollapsed } = useObserveHeights(\n    dynamicPageRef,\n    topHeaderRef,\n    headerContentRef,\n    anchorBarRef,\n    [headerCollapsedInternal, setHeaderCollapsedInternal],\n    {\n      noHeader: false,\n      fixedHeader: headerState === HEADER_STATES.VISIBLE_PINNED || headerState === HEADER_STATES.HIDDEN_PINNED,\n      scrollTimeout\n    }\n  );\n\n  const classes = useStyles();\n  const dynamicPageClasses = clsx(\n    classes.dynamicPage,\n    GlobalStyleClasses.sapScrollBar,\n    classes[`background${backgroundDesign}`],\n    className,\n    [HEADER_STATES.HIDDEN, HEADER_STATES.HIDDEN_PINNED].includes(headerState) && classes.headerCollapsed\n  );\n\n  useEffect(() => {\n    const debouncedObserverFn = debounce(([element]: IntersectionObserverEntry[]) => {\n      setIsOverflowing(!element.isIntersecting);\n    }, 250);\n    const observer = new IntersectionObserver(debouncedObserverFn, {\n      root: dynamicPageRef.current,\n      threshold: 0.98,\n      rootMargin: '0px 0px -60px 0px' // negative bottom margin for footer height\n    });\n\n    if (contentRef.current) {\n      observer.observe(contentRef.current);\n    }\n\n    return () => {\n      observer.disconnect();\n      debouncedObserverFn.cancel();\n    };\n  }, []);\n\n  useEffect(() => {\n    const dynamicPage = dynamicPageRef.current;\n    const oneTimeScrollHandler = () => {\n      setHeaderState(HEADER_STATES.AUTO);\n      setHeaderCollapsedInternal(true);\n    };\n    if (headerState === HEADER_STATES.VISIBLE || headerState === HEADER_STATES.HIDDEN) {\n      dynamicPage?.addEventListener('scroll', oneTimeScrollHandler, { once: true });\n    }\n    return () => {\n      dynamicPage?.removeEventListener('scroll', oneTimeScrollHandler);\n    };\n  }, [dynamicPageRef, headerState]);\n\n  const onToggleHeaderContentVisibility = (e) => {\n    scrollTimeout.current = performance.now() + 500;\n    const shouldHideHeader = !e.detail.visible;\n    setHeaderState((oldState) => {\n      if (oldState === HEADER_STATES.VISIBLE_PINNED || oldState === HEADER_STATES.HIDDEN_PINNED) {\n        return shouldHideHeader ? HEADER_STATES.HIDDEN_PINNED : HEADER_STATES.VISIBLE_PINNED;\n      }\n      return shouldHideHeader ? HEADER_STATES.HIDDEN : HEADER_STATES.VISIBLE;\n    });\n  };\n\n  useEffect(() => {\n    if (headerState === HEADER_STATES.VISIBLE_PINNED || headerState === HEADER_STATES.VISIBLE) {\n      setHeaderCollapsedInternal(false);\n    } else if (headerState === HEADER_STATES.HIDDEN_PINNED || headerState === HEADER_STATES.HIDDEN) {\n      setHeaderCollapsedInternal(true);\n    }\n  }, [headerState]);\n\n  const onHoverToggleButton = (e) => {\n    if (topHeaderRef.current) {\n      topHeaderRef.current.style.backgroundColor =\n        e?.type === 'mouseover' ? ThemingParameters.sapObjectHeader_Hover_Background : null;\n    }\n  };\n\n  const onToggleHeaderContentInternal = (e) => {\n    e.stopPropagation();\n    if (!isToggledRef.current) {\n      isToggledRef.current = true;\n    }\n    onToggleHeaderContentVisibility(enrichEventWithDetails(e, { visible: headerCollapsed }));\n  };\n\n  const handleHeaderPinnedChange = (headerWillPin) => {\n    if (headerWillPin) {\n      setHeaderState(HEADER_STATES.VISIBLE_PINNED);\n    } else {\n      setHeaderState(HEADER_STATES.VISIBLE);\n    }\n  };\n\n  useEffect(() => {\n    if (alwaysShowContentHeader !== undefined) {\n      if (alwaysShowContentHeader) {\n        setHeaderState(HEADER_STATES.VISIBLE_PINNED);\n      } else {\n        setHeaderState(HEADER_STATES.VISIBLE);\n      }\n    }\n  }, [alwaysShowContentHeader]);\n\n  const onDynamicPageScroll = (e) => {\n    if (!isToggledRef.current) {\n      isToggledRef.current = true;\n    }\n    if (typeof props?.onScroll === 'function') {\n      props.onScroll(e);\n    }\n    if (headerState === HEADER_STATES.HIDDEN_PINNED && e.target.scrollTop === 0) {\n      setHeaderState(HEADER_STATES.VISIBLE_PINNED);\n    }\n  };\n\n  const dynamicPageStyles = { ...style };\n  if (headerCollapsed === true && headerContent) {\n    scrollTimeout.current = performance.now() + 200;\n    dynamicPageStyles[DynamicPageCssVariables.titleFontSize] = ThemingParameters.sapObjectHeader_Title_SnappedFontSize;\n  }\n\n  useEffect(() => {\n    if (typeof onToggleHeaderContent === 'function' && isToggledRef.current) {\n      onToggleHeaderContent(headerCollapsed !== true);\n    }\n  }, [headerCollapsed]);\n\n  const top =\n    headerState === HEADER_STATES.VISIBLE_PINNED || headerState === HEADER_STATES.VISIBLE\n      ? (headerContentRef?.current?.offsetHeight ?? 0) + topHeaderHeight\n      : topHeaderHeight;\n\n  return (\n    <div\n      ref={componentRef}\n      className={dynamicPageClasses}\n      style={dynamicPageStyles}\n      onScroll={onDynamicPageScroll}\n      {...propsWithoutOmitted}\n    >\n      {headerTitle &&\n        cloneElement(headerTitle, {\n          'data-not-clickable':\n            (alwaysShowContentHeader && !headerContentPinnable) ||\n            !headerContent ||\n            (!showHideHeaderButton && !headerContentPinnable),\n          ref: componentRefTopHeader,\n          className: clsx(classes.title, headerTitle?.props?.className),\n          onToggleHeaderContentVisibility: onToggleHeaderContentInternal,\n          'data-header-content-visible': headerContent && headerCollapsed !== true\n        })}\n      {headerContent &&\n        cloneElement(headerContent, {\n          ref: componentRefHeaderContent,\n          style: headerCollapsed === true ? { position: 'absolute', visibility: 'hidden' } : headerContent.props.style,\n          className: clsx(classes.header, headerContent?.props?.className),\n          headerPinned: headerState === HEADER_STATES.VISIBLE_PINNED || headerState === HEADER_STATES.VISIBLE,\n          topHeaderHeight\n        })}\n      <FlexBox\n        data-component-name=\"DynamicPageAnchorBarContainer\"\n        className={classes.anchorBar}\n        ref={anchorBarRef}\n        style={{ top }}\n      >\n        <DynamicPageAnchorBar\n          headerContentPinnable={headerContentPinnable}\n          showHideHeaderButton={showHideHeaderButton}\n          headerContentVisible={headerContent && headerCollapsed !== true}\n          headerPinned={headerState === HEADER_STATES.VISIBLE_PINNED || headerState === HEADER_STATES.HIDDEN_PINNED}\n          a11yConfig={a11yConfig}\n          onHoverToggleButton={onHoverToggleButton}\n          onToggleHeaderContentVisibility={onToggleHeaderContentInternal}\n          onPinnedStateChange={onPinnedStateChange}\n          setHeaderPinned={handleHeaderPinnedChange}\n        />\n      </FlexBox>\n      <div\n        ref={contentRef}\n        data-component-name=\"DynamicPageContent\"\n        className={classes.contentContainer}\n        style={{\n          paddingBlockEnd: footer ? '1rem' : 0\n        }}\n      >\n        {typeof children === 'function' ? children({ stickyHeaderHeight: top + 1 /*anchorBar height */ }) : children}\n      </div>\n      {footer && (\n        <div\n          className={classes.footer}\n          style={{ position: isOverflowing ? 'sticky' : 'absolute' }}\n          data-component-name=\"DynamicPageFooter\"\n          role={a11yConfig?.dynamicPageFooter?.role ?? 'contentinfo'}\n          aria-label={a11yConfig?.dynamicPageFooter?.['aria-label']}\n          aria-labelledby={a11yConfig?.dynamicPageFooter?.['aria-labelledby']}\n        >\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n});\n\nDynamicPage.displayName = 'DynamicPage';\n\nDynamicPage.defaultProps = {\n  backgroundDesign: PageBackgroundDesign.Solid,\n  showHideHeaderButton: true,\n  headerContentPinnable: true\n};\n\nexport { DynamicPage };\n"],"names":["useStyles","createUseStyles","styles","DynamicPage","forwardRef","props","ref","headerTitle","headerContent","style","backgroundDesign","showHideHeaderButton","headerContentPinnable","alwaysShowContentHeader","children","className","footer","a11yConfig","onToggleHeaderContent","onPinnedStateChange","rest","_1","propsWithoutOmitted","anchorBarRef","useRef","componentRef","dynamicPageRef","useSyncRef","contentRef","componentRefTopHeader","topHeaderRef","componentRefHeaderContent","headerContentRef","scrollTimeout","headerState","setHeaderState","useState","isToggledRef","isOverflowing","setIsOverflowing","headerCollapsedInternal","setHeaderCollapsedInternal","topHeaderHeight","headerCollapsed","useObserveHeights","classes","dynamicPageClasses","clsx","GlobalStyleClasses","useEffect","debouncedObserverFn","debounce","element","observer","dynamicPage","oneTimeScrollHandler","onToggleHeaderContentVisibility","shouldHideHeader","oldState","onHoverToggleButton","ThemingParameters","onToggleHeaderContentInternal","enrichEventWithDetails","handleHeaderPinnedChange","headerWillPin","onDynamicPageScroll","dynamicPageStyles","DynamicPageCssVariables","top","_a","jsxs","cloneElement","_b","_c","jsx","FlexBox","DynamicPageAnchorBar","_d","_e","_f","PageBackgroundDesign"],"mappings":"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"}