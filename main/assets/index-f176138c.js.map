{"version":3,"mappings":"0OA8JA,MAAAA,EAAAC,EAA0B,yBACxB,CACA,aACE,kBACA,SACA,gBACA,gBACA,iBACA,oBACA,iBACA,cACA,EACF,uFAC0F,oBACvE,0DACwC,IAAAC,EAAA,yhCAE7D,EAEAF,EAAA,gCAEAA,EAAA,cAAiC,gBAAAG,EAAA,OACS,cAAAC,EAAA,MACJ,cAAAC,EAAA,OACA,eAAAC,EAAA,MAEtC","names":["ResponsivePopover","withWebComponent","__vitePreload","PopoverHorizontalAlign","PopoverPlacementType","PopoverVerticalAlign","PopupAccessibleRole"],"sources":["../../packages/main/src/webComponents/ResponsivePopover/index.tsx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/ResponsivePopover.js';\nimport type { ResponsivePopoverBeforeCloseEventDetail } from '@ui5/webcomponents/dist/ResponsivePopover.js';\nimport type { ReactNode } from 'react';\nimport {\n  PopoverHorizontalAlign,\n  PopoverPlacementType,\n  PopoverVerticalAlign,\n  PopupAccessibleRole\n} from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\nimport type { UI5WCSlotsNode } from '../../types/index.js';\n\ninterface ResponsivePopoverAttributes {\n  /**\n   * Determines if there is no enough space, the component can be placed over the target.\n   */\n  allowTargetOverlap?: boolean;\n  /**\n   * Defines the header text.\n   *\n   * **Note:** If `header` slot is provided, the `headerText` is ignored.\n   */\n  headerText?: string;\n  /**\n   * Determines whether the component arrow is hidden.\n   */\n  hideArrow?: boolean;\n  /**\n   * Defines whether the block layer will be shown if modal property is set to true.\n   */\n  hideBackdrop?: boolean;\n  /**\n   * Determines the horizontal alignment of the component.\n   */\n  horizontalAlign?: PopoverHorizontalAlign | keyof typeof PopoverHorizontalAlign;\n  /**\n   * Defines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.\n   */\n  modal?: boolean;\n  /**\n   * Defines the ID of the element that the popover is shown at\n   */\n  opener?: string;\n  /**\n   * Determines on which side the component is placed at.\n   */\n  placementType?: PopoverPlacementType | keyof typeof PopoverPlacementType;\n  /**\n   * Determines the vertical alignment of the component.\n   */\n  verticalAlign?: PopoverVerticalAlign | keyof typeof PopoverVerticalAlign;\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the IDs of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Allows setting a custom role.\n   */\n  accessibleRole?: PopupAccessibleRole | keyof typeof PopupAccessibleRole;\n  /**\n   * Defines the ID of the HTML Element, which will get the initial focus.\n   */\n  initialFocus?: string;\n  /**\n   * Indicates if the element is open\n   */\n  open?: boolean;\n  /**\n   * Defines if the focus should be returned to the previously focused element, when the popup closes.\n   */\n  preventFocusRestore?: boolean;\n}\n\nexport interface ResponsivePopoverDomRef extends Omit<ResponsivePopoverAttributes, 'opener'>, Ui5DomRef {\n  /**\n   * Defines the ID or DOM Reference of the element that the popover is shown at\n   */\n  opener?: string | HTMLElement;\n  /**\n   * Closes the popover/dialog.\n   */\n  close: () => void;\n  /**\n   * Tells if the responsive popover is open.\n   * @returns {boolean}\n   */\n  isOpen: () => boolean;\n  /**\n   * Shows popover on desktop and dialog on mobile.\n   * @param {HTMLElement | EventTarget} opener - the element that the popover is shown at\n   * @param {boolean} [preventInitialFocus] - Prevents applying the focus inside the popup\n   * @returns {Promise<void>} Resolves when the responsive popover is open\n   */\n  showAt: (opener: HTMLElement | EventTarget, preventInitialFocus?: boolean) => Promise<void>;\n  /**\n   * Focuses the element denoted by `initialFocus`, if provided, or the first focusable element otherwise.\n   * @returns {Promise<void>} Promise that resolves when the focus is applied\n   */\n  applyFocus: () => Promise<void>;\n}\n\nexport interface ResponsivePopoverPropTypes extends ResponsivePopoverAttributes, CommonProps {\n  /**\n   * Defines the footer HTML Element.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"footer\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--docs).\n   */\n  footer?: UI5WCSlotsNode | UI5WCSlotsNode[];\n  /**\n   * Defines the header HTML Element.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"header\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--docs).\n   */\n  header?: UI5WCSlotsNode | UI5WCSlotsNode[];\n  /**\n   * Defines the content of the Popup.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired after the component is closed. **This event does not bubble.**\n   */\n  onAfterClose?: (event: Ui5CustomEvent<ResponsivePopoverDomRef>) => void;\n  /**\n   * Fired after the component is opened. **This event does not bubble.**\n   */\n  onAfterOpen?: (event: Ui5CustomEvent<ResponsivePopoverDomRef>) => void;\n  /**\n   * Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. **This event does not bubble.**\n   */\n  onBeforeClose?: (event: Ui5CustomEvent<ResponsivePopoverDomRef, ResponsivePopoverBeforeCloseEventDetail>) => void;\n  /**\n   * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. **This event does not bubble.**\n   */\n  onBeforeOpen?: (event: Ui5CustomEvent<ResponsivePopoverDomRef>) => void;\n}\n\n/**\n * The `ResponsivePopover` acts as a Popover on desktop and tablet, while on phone it acts as a Dialog. The component improves tremendously the user experience on mobile.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Componentsâ€™ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-ResponsivePopover)\n */\nconst ResponsivePopover = withWebComponent<ResponsivePopoverPropTypes, ResponsivePopoverDomRef>(\n  'ui5-responsive-popover',\n  [\n    'headerText',\n    'horizontalAlign',\n    'opener',\n    'placementType',\n    'verticalAlign',\n    'accessibleName',\n    'accessibleNameRef',\n    'accessibleRole',\n    'initialFocus'\n  ],\n  ['allowTargetOverlap', 'hideArrow', 'hideBackdrop', 'modal', 'open', 'preventFocusRestore'],\n  ['footer', 'header'],\n  ['after-close', 'after-open', 'before-close', 'before-open'],\n  () => import('@ui5/webcomponents/dist/ResponsivePopover.js')\n);\n\nResponsivePopover.displayName = 'ResponsivePopover';\n\nResponsivePopover.defaultProps = {\n  horizontalAlign: PopoverHorizontalAlign.Center,\n  placementType: PopoverPlacementType.Right,\n  verticalAlign: PopoverVerticalAlign.Center,\n  accessibleRole: PopupAccessibleRole.Dialog\n};\n\nexport { ResponsivePopover };\n"],"file":"assets/index-f176138c.js"}