import{j as m}from"./jsx-runtime-d079401a.js";import{a as d}from"./alert-f95f2d2e.js";import{i as f,s as h,e as y}from"./information-31cb56bb.js";import{T as t}from"./ThemingParameters-7e2e4e30.js";import{c as b}from"./clsx-1229b3e0.js";import{r as g}from"./index-f1f2c4b1.js";import{c as _}from"./react-jss.esm-2e5f50f2.js";import{V as o}from"./ValueState-ab6838cc.js";import{B as v}from"./index-fb70e89a.js";const B=Object.values(o).reduce((a,r)=>{let e;switch(r){case o.Error:e="Negative";break;case o.Success:e="Success";break;case o.Warning:e="Critical";break;default:e="Neutral"}const n=`&[data-type="${r}"]`,s=`&[data-type="${r}"]:hover`,i=`&[data-type="${r}"]:active`;return{...a,[n]:{color:t[`sapButton_${e}_TextColor`],background:t[`sapButton_${e}_Background`],borderColor:t[`sapButton_${e}_BorderColor`]},[s]:{color:t[`sapButton_${e}_Hover_TextColor`],background:t[`sapButton_${e}_Hover_Background`],borderColor:t[`sapButton_${e}_Hover_BorderColor`]},[i]:{color:t[`sapButton_${e}_Active_TextColor`],background:t[`sapButton_${e}_Active_Background`],borderColor:t[`sapButton_${e}_Active_BorderColor`]}}},{}),w=_({btn:{...B}},{name:"MessageViewButtonStyles"}),N=a=>{switch(a){case o.Error:return y;case o.Success:return h;case o.Warning:return d;default:return f}},l=g.forwardRef((a,r)=>{const{type:e=o.Error,counter:n,className:s,...i}=a,c=w(),u=b(c.btn,s),p=N(e);return m.jsx(v,{ref:r,className:u,icon:p,...i,"data-type":e,children:n>1&&n})});l.displayName="MessageViewButton";try{l.displayName="MessageViewButton",l.__docgenInfo={description:"The `MessageViewButton` can be used for opening a `Popover` containing the `MessageView` component. It should always reflect the message `type` with the highest severity.",displayName:"MessageViewButton",props:{type:{defaultValue:null,description:"Specifies the type of the button.",name:"type",required:!1,type:{name:"enum",value:[{value:'"Error"'},{value:'"Error"'},{value:'"None"'},{value:'"Success"'},{value:'"Warning"'},{value:'"Information"'},{value:'"None"'},{value:'"Success"'},{value:'"Warning"'},{value:'"Information"'}]}},counter:{defaultValue:null,description:`Defines the number of messages for a given message type.

__Note:__ Numbers smaller than 2 are not displayed.`,name:"counter",required:!1,type:{name:"number"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Fired when the component is activated either with a mouse/tap or by using the Enter or Space key.\n\n**Note:** The event will not be fired if the `disabled` property is set to `true`.",name:"onClick",required:!1,type:{name:"MouseEventHandler<ButtonDomRef>"}},tooltip:{defaultValue:null,description:`Defines the tooltip of the component.
**Note:** A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function.`,name:"tooltip",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Defines whether the component is disabled. A disabled component can't be pressed or focused, and it is not in the tab chain.",name:"disabled",required:!1,type:{name:"boolean"}},accessibleName:{defaultValue:null,description:"Defines the accessible ARIA name of the component.",name:"accessibleName",required:!1,type:{name:"string"}},accessibleNameRef:{defaultValue:null,description:"Receives id(or many ids) of the elements that label the component.",name:"accessibleNameRef",required:!1,type:{name:"string"}}}}}catch{}export{l as M};
//# sourceMappingURL=index-e946e40c.js.map
