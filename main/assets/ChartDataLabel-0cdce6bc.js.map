{"version":3,"file":"ChartDataLabel-0cdce6bc.js","sources":["../../packages/charts/src/hooks/useLabelFormatter.ts","../../packages/charts/src/internal/ChartDataLabel.tsx"],"sourcesContent":["import { useCallback } from 'react';\n\nexport const useLabelFormatter = (primaryDimension) => {\n  return useCallback(\n    (name) => {\n      if (primaryDimension && typeof primaryDimension.formatter === 'function') {\n        return primaryDimension.formatter(name);\n      }\n      return name;\n    },\n    [primaryDimension]\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base';\nimport React, { createElement } from 'react';\nimport { Label } from 'recharts';\nimport type { IChartMeasure } from '../interfaces/IChartMeasure.js';\nimport { getTextWidth } from '../internal/Utils.js';\n\ninterface CustomDataLabelProps {\n  config: IChartMeasure;\n  viewBox?: any;\n  chartType: 'bar' | 'column' | 'line' | 'radar' | 'pie' | 'area';\n  position?: string;\n  value?: any;\n  children?: any;\n}\n\nexport const ChartDataLabel = (props: CustomDataLabelProps) => {\n  const { config, chartType, viewBox } = props;\n  if (config.hideDataLabel) {\n    return null;\n  }\n\n  if (config.DataLabel) {\n    return createElement(config.DataLabel, props);\n  }\n\n  const formattedLabel = config.formatter(props.value ?? props.children);\n  if (chartType === 'bar' || chartType === 'column') {\n    if (Math.abs(viewBox.width) < getTextWidth(formattedLabel)) {\n      return null;\n    }\n    if (Math.abs(viewBox.height) < 12) {\n      return null;\n    }\n  }\n\n  let fill = ThemingParameters.sapContent_ContrastTextColor;\n  if (['area', 'line', 'radar'].includes(chartType)) {\n    fill = ThemingParameters.sapTextColor; // label is displayed outside of the colored element\n  }\n\n  return (\n    <Label\n      viewBox={viewBox}\n      {...(props as any)}\n      fill={fill}\n      stroke={'none'}\n      content={undefined}\n      value={formattedLabel}\n    />\n  );\n};\n"],"names":["useLabelFormatter","primaryDimension","useCallback","name","ChartDataLabel","props","config","chartType","viewBox","createElement","formattedLabel","getTextWidth","fill","ThemingParameters","jsx","Label"],"mappings":"2PAEa,MAAAA,EAAqBC,GACzBC,EAAA,YACJC,GACKF,GAAoB,OAAOA,EAAiB,WAAc,WACrDA,EAAiB,UAAUE,CAAI,EAEjCA,EAET,CAACF,CAAgB,CAAA,ECKdG,EAAAC,GAAA,CACL,KAAA,CAAA,OAAAC,EAAA,UAAAC,EAAA,QAAAC,CAAA,EAAAH,EACA,GAAAC,EAAA,cACE,OAAA,KAGF,GAAAA,EAAA,UACE,OAAAG,gBAAAH,EAAA,UAAAD,CAAA,EAGF,MAAAK,EAAAJ,EAAA,UAAAD,EAAA,OAAAA,EAAA,QAAA,EACA,IAAAE,IAAA,OAAAA,IAAA,YACE,KAAA,IAAAC,EAAA,KAAA,EAAAG,EAAAD,CAAA,GAGA,KAAA,IAAAF,EAAA,MAAA,EAAA,IACE,OAAA,KAIJ,IAAAI,EAAAC,EAAA,6BACA,MAAA,CAAA,OAAA,OAAA,OAAA,EAAA,SAAAN,CAAA,IACEK,EAAAC,EAAA,cAGFC,EAAA,IACEC,EAAC,CAAA,QAAAP,EACC,GAAAH,EACK,KAAAO,EACL,OAAA,OACQ,QAAA,OACC,MAAAF,CACF,CAAA,CAGb"}