import{j as t}from"./jsx-runtime-DtaoT6pD.js";import{I as n}from"./DomRefTable.module-fGUXUGC2.js";import{M as p,C as a}from"./chunk-HLWAVYOI-kKyZndDN.js";import"./index-OjgoNOWw.js";import{F as s}from"./Footer-cc2Xx7qs.js";import{M as l}from"./index-pTj2rxBC.js";import{c}from"./AnalyticalTable.stories-FWK7Uxqe.js";import{u as m}from"./index-RwE9nQVW.js";import"./react-jss.esm-tmBtHfec.js";import"./index-9hLZiafD.js";import"./clsx-Zbgk8kpT.js";import"./i18n-defaults-gX8Lho5I.js";import"./i18nBundle-7ihWi2Lo.js";import"./VersionInfo-quO5DfnC.js";import"./I18nContext-VUOpdMoH.js";import"./useIsomorphicLayoutEffect-s31TYDr7.js";import"./ThemingParameters-UghqSl-x.js";import"./index-YJVSj-ci.js";import"./UI5Element-kBA_KQxG.js";import"./CustomElementsScopeUtils-QKoQ990a.js";import"./index-QYh6idnL.js";import"./ModalsContext-T9gUbaXC.js";import"./CssSizeVariables-loCRUewX.js";import"./CustomVariables-jcpx1a4M.js";import"./GlobalStyleClasses-kWTEndz_.js";import"./addCustomCSSWithScoping-Ha-6ONKz.js";import"./utils-3rf7SAGj.js";import"./index-YgLwWn2d.js";import"./iframe-rpHXqYgj.js";import"../sb-preview/runtime.js";import"./withWebComponent-22JjwLkL.js";import"./slot-HSrR9XJ-.js";import"./Icon-r6t1Zphl.js";import"./Icons-jRef6OLh.js";import"./Integer-kog98579.js";import"./class-map-2qwEQoLI.js";import"./i18n-defaults-QBShB6vc.js";import"./index-tUfDuThk.js";import"./Avatar-kcq5ywk4.js";import"./ResizeHandler-3FzJmCyz.js";import"./employee-APVUdoZS.js";import"./alert-kkNs8dOr.js";import"./index-iTHc3gfi.js";import"./AriaLabelHelper-RbKlVwzD.js";import"./index-ghGef8lp.js";import"./Link-xIUn2Lee.js";import"./MarkedEvents-aYv14vsS.js";import"./WrappingType-avPrqc94.js";import"./react-18-1WT2dSvK.js";import"./_baseForOwn-UZJwRxDU.js";import"./mapValues-HzTlT2lF.js";import"./_baseUniq-JVyScZ-n.js";import"./index-PPLHz8o0.js";import"./index-UBYxvHMA.js";import"./index-ndaVN1fR.js";import"./index-TVyV5kqJ.js";import"./Label-yPOoTXIn.js";import"./index-x6E3R_6b.js";import"./Button-jlOsC8Op.js";import"./index-hIDLyg9P.js";import"./Popover-qTobexuh.js";import"./PopupUtils-FgdW7Gkh.js";import"./getActiveElement-IIKAy3xo.js";import"./PopupsCommon.css-fa8QSlgN.js";import"./FocusableElements-jbTazhpM.js";import"./isElementHidden-d3-Fo4V6.js";import"./decline-XpWJwTfv.js";import"./i18n-defaults-CPLPRuO1.js";import"./MediaRange-sEMt71Ve.js";import"./style-map-duavIDje.js";import"./BrowserScrollbar.css-aT2mYiFz.js";import"./information-U_TSW4LN.js";import"./delete-8u2Fecxp.js";import"./ListItem-_0EIb7ra.js";import"./List-XV25F2MG.js";import"./ItemNavigation-1Qtl9Bqn.js";import"./TabbableElements-L1VqloMt.js";import"./debounce-8VpZswfd.js";import"./BusyIndicator-ic-NtdR-.js";import"./CheckBox-vOrD_Qxh.js";import"./ValueState-zUcANXoY.js";import"./accept-RviPAaVm.js";import"./RadioButton-ssFCKs8g.js";import"./HasPopup-9BAMrqbD.js";import"./slim-arrow-right-0oBZC6Yv.js";import"./settings-YGq2Totv.js";import"./index-Jm2lAFsC.js";import"./filter-MTyP-7mc.js";import"./group-2-lAyaz-TQ.js";import"./index-bKzZbeLI.js";import"./stopPropagation-dV8jBYUw.js";import"./index-hJt395VO.js";import"./CustomListItem-QOqv9KBA.js";import"./index-gh-_rLlm.js";import"./index-Jgs93U-D.js";import"./StandardListItem-cf7NJ5rV.js";import"./ValueState-I_-hGNIb.js";import"./index-EbKIcnop.js";import"./Input-qnG8UDCs.js";import"./Suggestions.css-uuIiA8km.js";import"./ResponsivePopoverCommon.css-h8Z4T2yV.js";import"./ValueStateMessage.css-fNiak5rA.js";import"./navigation-down-arrow-Y7RZrZNk.js";import"./navigation-right-arrow-4HU0Da2E.js";import"./useCurrentTheme-zYUmZvQL.js";import"./index-Ydt675Et.js";import"./index-gCj5aAEO.js";import"./index-UajzC6F2.js";import"./Title-dLDxQQ5A.js";import"./useIsomorphicId-G0VPUEKO.js";import"./useIsRTL-ji9lVEBB.js";import"./debounce-F9irgL9Y.js";import"./index-S7bCgH9f.js";import"./index-FD_4o4NJ.js";import"./Select-FDawIrzH.js";import"./InvisibleMessage-Ih9G-uba.js";import"./slim-arrow-down-I_Bw-gbQ.js";import"./ResponsivePopover-wHlXl3nI.js";import"./Dialog-Y9sM4F0U.js";import"./index-Yadfggeb.js";import"./index-5ymG0yYE.js";import"./ToggleButton-wDGnl2Rb.js";import"./index-gQbjA32K.js";import"./GroupHeaderListItem-Ybq9bAuu.js";import"./Token-n-3_k5Ms.js";import"./ScrollEnablement-IFtxymRs.js";import"./animate-Pj1TncyK.js";import"./ComboBoxItem-gZpfoj0O.js";function De(i={}){const{wrapper:o}=Object.assign({},m(),i.components);return o?t.jsx(o,Object.assign({},i,{children:t.jsx(r,{})})):r();function r(){const e=Object.assign({h1:"h1",p:"p",code:"code",strong:"strong",h2:"h2",pre:"pre",h4:"h4"},m(),i.components);return t.jsxs(t.Fragment,{children:[t.jsx(p,{title:"Data Display / AnalyticalTable / Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(e.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(n,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,t.jsxs(e.p,{children:["The ",t.jsx(e.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,t.jsx(e.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,t.jsxs(e.p,{children:[t.jsx(e.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,t.jsx(l,{hideCloseButton:!0,children:t.jsxs(t.Fragment,{children:[" The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",t.jsx(e.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,t.jsx(e.h2,{id:"example",children:"Example"}),`
`,t.jsx(a,{sourceState:"none",of:c}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-jsx",children:`<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.MultiSelect}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={[AnalyticalTableHooks.useIndeterminateRowSelection()]}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,t.jsx(e.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,t.jsx(e.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,t.jsxs(e.p,{children:["The callback is fired, every time the internal ",t.jsx(e.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,t.jsx(e.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,t.jsx(s,{})]})}}export{De as default};
