{"version":3,"file":"UI5Element-66_7Xn_3.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/Device.js","../../node_modules/@ui5/webcomponents-base/dist/theming/ThemeRegistered.js","../../node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js","../../node_modules/@ui5/webcomponents-base/dist/util/createStyleInHead.js","../../node_modules/@ui5/webcomponents-base/dist/util/createLinkInHead.js","../../node_modules/@ui5/webcomponents-base/dist/ManagedStyles.js","../../node_modules/@ui5/webcomponents-base/dist/theming/getThemeDesignerTheme.js","../../node_modules/@ui5/webcomponents-base/dist/theming/ThemeLoaded.js","../../node_modules/@ui5/webcomponents-base/dist/config/ThemeRoot.js","../../node_modules/@ui5/webcomponents-base/dist/theming/applyTheme.js","../../node_modules/@ui5/webcomponents-base/dist/config/Theme.js","../../node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js","../../node_modules/@ui5/webcomponents-base/dist/util/getDesigntimePropertyAsArray.js","../../node_modules/@ui5/webcomponents-base/dist/config/RTL.js","../../node_modules/@ui5/webcomponents-base/dist/util/whenDOMReady.js","../../node_modules/@ui5/webcomponents-base/dist/generated/css/FontFace.css.js","../../node_modules/@ui5/webcomponents-base/dist/generated/css/OverrideFontFace.css.js","../../node_modules/@ui5/webcomponents-base/dist/FontFace.js","../../node_modules/@ui5/webcomponents-base/dist/generated/css/SystemCSSVars.css.js","../../node_modules/@ui5/webcomponents-base/dist/SystemCSSVars.js","../../node_modules/@ui5/webcomponents-base/dist/Boot.js","../../node_modules/@ui5/webcomponents-base/dist/util/StringHelper.js","../../node_modules/@ui5/webcomponents-base/dist/util/SlotsHelper.js","../../node_modules/@ui5/webcomponents-base/dist/UI5ElementMetadata.js","../../node_modules/@ui5/webcomponents-base/dist/StaticArea.js","../../node_modules/@ui5/webcomponents-base/dist/theming/getStylesString.js","../../node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveStyle.js","../../node_modules/@ui5/webcomponents-base/dist/theming/getConstructableStyle.js","../../node_modules/@ui5/webcomponents-base/dist/updateShadowRoot.js","../../node_modules/@ui5/webcomponents-base/dist/util/getEffectiveContentDensity.js","../../node_modules/@ui5/webcomponents-base/dist/locale/getEffectiveDir.js","../../node_modules/@ui5/webcomponents-base/dist/StaticAreaItem.js","../../node_modules/@ui5/webcomponents-base/dist/IgnoreCustomElements.js","../../node_modules/@ui5/webcomponents-base/dist/DOMObserver.js","../../node_modules/@ui5/webcomponents-base/dist/config/NoConflict.js","../../node_modules/@ui5/webcomponents-base/dist/util/isValidPropertyName.js","../../node_modules/@ui5/webcomponents-base/dist/util/arraysAreEqual.js","../../node_modules/@ui5/webcomponents-base/dist/renderer/executeTemplate.js","../../node_modules/@ui5/webcomponents-base/dist/UI5Element.js"],"sourcesContent":["const isSSR = typeof document === \"undefined\";\nconst internals = {\n    get userAgent() {\n        if (isSSR) {\n            return \"\";\n        }\n        return navigator.userAgent;\n    },\n    get touch() {\n        if (isSSR) {\n            return false;\n        }\n        return \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n    },\n    get ie() {\n        if (isSSR) {\n            return false;\n        }\n        return /(msie|trident)/i.test(internals.userAgent);\n    },\n    get chrome() {\n        if (isSSR) {\n            return false;\n        }\n        return !internals.ie && /(Chrome|CriOS)/.test(internals.userAgent);\n    },\n    get firefox() {\n        if (isSSR) {\n            return false;\n        }\n        return /Firefox/.test(internals.userAgent);\n    },\n    get safari() {\n        if (isSSR) {\n            return false;\n        }\n        return !internals.ie && !internals.chrome && /(Version|PhantomJS)\\/(\\d+\\.\\d+).*Safari/.test(internals.userAgent);\n    },\n    get webkit() {\n        if (isSSR) {\n            return false;\n        }\n        return !internals.ie && /webkit/.test(internals.userAgent);\n    },\n    get windows() {\n        if (isSSR) {\n            return false;\n        }\n        return navigator.platform.indexOf(\"Win\") !== -1;\n    },\n    get macOS() {\n        if (isSSR) {\n            return false;\n        }\n        return !!navigator.userAgent.match(/Macintosh|Mac OS X/i);\n    },\n    get iOS() {\n        if (isSSR) {\n            return false;\n        }\n        return !!(navigator.platform.match(/iPhone|iPad|iPod/)) || !!(internals.userAgent.match(/Mac/) && \"ontouchend\" in document);\n    },\n    get android() {\n        if (isSSR) {\n            return false;\n        }\n        return !internals.windows && /Android/.test(internals.userAgent);\n    },\n    get androidPhone() {\n        if (isSSR) {\n            return false;\n        }\n        return internals.android && /(?=android)(?=.*mobile)/i.test(internals.userAgent);\n    },\n    get ipad() {\n        if (isSSR) {\n            return false;\n        }\n        // With iOS 13 the string 'iPad' was removed from the user agent string through a browser setting, which is applied on all sites by default:\n        // \"Request Desktop Website -> All websites\" (for more infos see: https://forums.developer.apple.com/thread/119186).\n        // Therefore the OS is detected as MACINTOSH instead of iOS and the device is a tablet if the Device.support.touch is true.\n        return /ipad/i.test(internals.userAgent) || (/Macintosh/i.test(internals.userAgent) && \"ontouchend\" in document);\n    },\n};\nlet windowsVersion;\nlet webkitVersion;\nlet tablet;\nconst isWindows8OrAbove = () => {\n    if (isSSR) {\n        return false;\n    }\n    if (!internals.windows) {\n        return false;\n    }\n    if (windowsVersion === undefined) {\n        const matches = internals.userAgent.match(/Windows NT (\\d+).(\\d)/);\n        windowsVersion = matches ? parseFloat(matches[1]) : 0;\n    }\n    return windowsVersion >= 8;\n};\nconst isWebkit537OrAbove = () => {\n    if (isSSR) {\n        return false;\n    }\n    if (!internals.webkit) {\n        return false;\n    }\n    if (webkitVersion === undefined) {\n        const matches = internals.userAgent.match(/(webkit)[ /]([\\w.]+)/);\n        webkitVersion = matches ? parseFloat(matches[1]) : 0;\n    }\n    return webkitVersion >= 537.10;\n};\nconst detectTablet = () => {\n    if (isSSR) {\n        return false;\n    }\n    if (tablet !== undefined) {\n        return;\n    }\n    if (internals.ipad) {\n        tablet = true;\n        return;\n    }\n    if (internals.touch) {\n        if (isWindows8OrAbove()) {\n            tablet = true;\n            return;\n        }\n        if (internals.chrome && internals.android) {\n            tablet = !/Mobile Safari\\/[.0-9]+/.test(internals.userAgent);\n            return;\n        }\n        let densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices\n        if (internals.android && isWebkit537OrAbove()) {\n            densityFactor = 1;\n        }\n        tablet = (Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600);\n        return;\n    }\n    tablet = (internals.ie && internals.userAgent.indexOf(\"Touch\") !== -1) || (internals.android && !internals.androidPhone);\n};\nconst supportsTouch = () => internals.touch;\nconst isIE = () => internals.ie;\nconst isSafari = () => internals.safari;\nconst isChrome = () => internals.chrome;\nconst isFirefox = () => internals.firefox;\nconst isTablet = () => {\n    detectTablet();\n    return (internals.touch || isWindows8OrAbove()) && tablet;\n};\nconst isPhone = () => {\n    detectTablet();\n    return internals.touch && !tablet;\n};\nconst isDesktop = () => {\n    if (isSSR) {\n        return false;\n    }\n    return (!isTablet() && !isPhone()) || isWindows8OrAbove();\n};\nconst isCombi = () => {\n    return isTablet() && isDesktop();\n};\nconst isIOS = () => {\n    return internals.iOS;\n};\nconst isMac = () => {\n    return internals.macOS;\n};\nconst isAndroid = () => {\n    return internals.android || internals.androidPhone;\n};\nexport { supportsTouch, isIE, isSafari, isChrome, isFirefox, isPhone, isTablet, isDesktop, isCombi, isIOS, isAndroid, isMac, };\n//# sourceMappingURL=Device.js.map","import EventProvider from \"../EventProvider.js\";\nconst eventProvider = new EventProvider();\nconst THEME_REGISTERED = \"themeRegistered\";\nconst attachThemeRegistered = (listener) => {\n    eventProvider.attachEvent(THEME_REGISTERED, listener);\n};\nconst fireThemeRegistered = (theme) => {\n    return eventProvider.fireEvent(THEME_REGISTERED, theme);\n};\nexport { attachThemeRegistered, fireThemeRegistered, };\n//# sourceMappingURL=ThemeRegistered.js.map","import { DEFAULT_THEME } from \"../generated/AssetParameters.js\";\nimport { fireThemeRegistered } from \"../theming/ThemeRegistered.js\";\nconst themeStyles = new Map();\nconst loaders = new Map();\nconst registeredPackages = new Set();\nconst registeredThemes = new Set();\nconst registerThemePropertiesLoader = (packageName, themeName, loader) => {\n    loaders.set(`${packageName}/${themeName}`, loader);\n    registeredPackages.add(packageName);\n    registeredThemes.add(themeName);\n    fireThemeRegistered(themeName);\n};\nconst getThemeProperties = async (packageName, themeName) => {\n    const style = themeStyles.get(`${packageName}_${themeName}`);\n    if (style !== undefined) { // it's valid for style to be an empty string\n        return style;\n    }\n    if (!registeredThemes.has(themeName)) {\n        const regThemesStr = [...registeredThemes.values()].join(\", \");\n        console.warn(`You have requested a non-registered theme ${themeName} - falling back to ${DEFAULT_THEME}. Registered themes are: ${regThemesStr}`); /* eslint-disable-line */\n        return _getThemeProperties(packageName, DEFAULT_THEME);\n    }\n    return _getThemeProperties(packageName, themeName);\n};\nconst _getThemeProperties = async (packageName, themeName) => {\n    const loader = loaders.get(`${packageName}/${themeName}`);\n    if (!loader) {\n        // no themes for package\n        console.error(`Theme [${themeName}] not registered for package [${packageName}]`); /* eslint-disable-line */\n        return;\n    }\n    let data;\n    try {\n        data = await loader(themeName);\n    }\n    catch (error) {\n        const e = error;\n        console.error(packageName, e.message); /* eslint-disable-line */\n        return;\n    }\n    const themeProps = data._ || data; // Refactor: remove _ everywhere\n    themeStyles.set(`${packageName}_${themeName}`, themeProps);\n    return themeProps;\n};\nconst getRegisteredPackages = () => {\n    return registeredPackages;\n};\nconst isThemeRegistered = (theme) => {\n    return registeredThemes.has(theme);\n};\nexport { registerThemePropertiesLoader, getThemeProperties, getRegisteredPackages, isThemeRegistered, };\n//# sourceMappingURL=Themes.js.map","/**\n * Creates a <style> tag in the <head> tag\n * @param cssText - the CSS\n * @param attributes - optional attributes to add to the tag\n * @returns {HTMLElement}\n */\nconst createStyleInHead = (cssText, attributes) => {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    if (attributes) {\n        Object.entries(attributes).forEach(pair => style.setAttribute(...pair));\n    }\n    style.textContent = cssText;\n    document.head.appendChild(style);\n    return style;\n};\nexport default createStyleInHead;\n//# sourceMappingURL=createStyleInHead.js.map","/**\n * Creates a <link> tag in the <head> tag\n * @param href - the CSS\n * @param attributes - optional attributes to add to the tag\n */\nconst createLinkInHead = (href, attributes) => {\n    const link = document.createElement(\"link\");\n    link.type = \"text/css\";\n    link.rel = \"stylesheet\";\n    if (attributes) {\n        Object.entries(attributes).forEach(pair => link.setAttribute(...pair));\n    }\n    link.href = href;\n    document.head.appendChild(link);\n    return new Promise(resolve => {\n        link.addEventListener(\"load\", resolve);\n        link.addEventListener(\"error\", resolve); // intended\n    });\n};\nexport default createLinkInHead;\n//# sourceMappingURL=createLinkInHead.js.map","import createStyleInHead from \"./util/createStyleInHead.js\";\nimport createLinkInHead from \"./util/createLinkInHead.js\";\nimport { shouldUseLinks, getUrl } from \"./CSP.js\";\nimport { isSafari } from \"./Device.js\";\nimport { getCurrentRuntimeIndex, compareRuntimes } from \"./Runtimes.js\";\nconst getStyleId = (name, value) => {\n    return value ? `${name}|${value}` : name;\n};\nconst shouldUpdate = (runtimeIndex) => {\n    if (runtimeIndex === undefined) {\n        return true;\n    }\n    return compareRuntimes(getCurrentRuntimeIndex(), parseInt(runtimeIndex)) === 1; // 1 means the current is newer, 0 means the same, -1 means the resource's runtime is newer\n};\nconst createStyle = (data, name, value = \"\", theme) => {\n    const content = typeof data === \"string\" ? data : data.content;\n    const currentRuntimeIndex = getCurrentRuntimeIndex();\n    if (shouldUseLinks()) {\n        const attributes = {};\n        attributes[name] = value;\n        if (theme) {\n            attributes[\"data-ui5-runtime-index\"] = currentRuntimeIndex;\n            attributes[\"data-ui5-theme\"] = theme;\n        }\n        const href = getUrl(data.packageName, data.fileName);\n        createLinkInHead(href, attributes);\n    }\n    else if (document.adoptedStyleSheets && !isSafari()) {\n        const stylesheet = new CSSStyleSheet();\n        stylesheet.replaceSync(content);\n        stylesheet._ui5StyleId = getStyleId(name, value); // set an id so that we can find the style later\n        if (theme) {\n            stylesheet._ui5RuntimeIndex = currentRuntimeIndex;\n            stylesheet._ui5Theme = theme;\n        }\n        document.adoptedStyleSheets = [...document.adoptedStyleSheets, stylesheet];\n    }\n    else {\n        const attributes = {};\n        attributes[name] = value;\n        if (theme) {\n            attributes[\"data-ui5-runtime-index\"] = currentRuntimeIndex;\n            attributes[\"data-ui5-theme\"] = theme;\n        }\n        createStyleInHead(content, attributes);\n    }\n};\nconst updateStyle = (data, name, value = \"\", theme) => {\n    const content = typeof data === \"string\" ? data : data.content;\n    const currentRuntimeIndex = getCurrentRuntimeIndex();\n    if (shouldUseLinks()) {\n        const link = document.querySelector(`head>link[${name}=\"${value}\"]`);\n        const href = getUrl(data.packageName, data.fileName);\n        if (!theme) {\n            link.href = href;\n        }\n        else {\n            const linkRuntimeIndex = link.getAttribute(\"data-ui5-runtime-index\") || undefined;\n            const linkTheme = link.getAttribute(\"data-ui5-theme\");\n            if (linkTheme !== theme || shouldUpdate(linkRuntimeIndex)) {\n                link.href = href;\n                link.setAttribute(\"data-ui5-runtime-index\", String(currentRuntimeIndex));\n                link.setAttribute(\"data-ui5-theme\", theme);\n            }\n        }\n    }\n    else if (document.adoptedStyleSheets && !isSafari()) {\n        const stylesheet = document.adoptedStyleSheets.find(sh => sh._ui5StyleId === getStyleId(name, value));\n        if (!stylesheet) {\n            return;\n        }\n        if (!theme) {\n            stylesheet.replaceSync(content || \"\");\n        }\n        else {\n            const stylesheetRuntimeIndex = stylesheet._ui5RuntimeIndex;\n            const stylesheetTheme = stylesheet._ui5Theme;\n            if (stylesheetTheme !== theme || shouldUpdate(stylesheetRuntimeIndex)) {\n                stylesheet.replaceSync(content || \"\");\n                stylesheet._ui5RuntimeIndex = String(currentRuntimeIndex);\n                stylesheet._ui5Theme = theme;\n            }\n        }\n    }\n    else {\n        const style = document.querySelector(`head>style[${name}=\"${value}\"]`);\n        if (!style) {\n            return;\n        }\n        if (!theme) {\n            style.textContent = content || \"\";\n        }\n        else {\n            const styleRuntimeIndex = style.getAttribute(\"data-ui5-runtime-index\") || undefined;\n            const styleTheme = style.getAttribute(\"data-ui5-theme\");\n            if (styleTheme !== theme || shouldUpdate(styleRuntimeIndex)) {\n                style.textContent = content || \"\";\n                style.setAttribute(\"data-ui5-runtime-index\", String(currentRuntimeIndex));\n                style.setAttribute(\"data-ui5-theme\", theme);\n            }\n        }\n    }\n};\nconst hasStyle = (name, value = \"\") => {\n    if (shouldUseLinks()) {\n        return !!document.querySelector(`head>link[${name}=\"${value}\"]`);\n    }\n    if (document.adoptedStyleSheets && !isSafari()) {\n        return !!document.adoptedStyleSheets.find(sh => sh._ui5StyleId === getStyleId(name, value));\n    }\n    return !!document.querySelector(`head>style[${name}=\"${value}\"]`);\n};\nconst removeStyle = (name, value = \"\") => {\n    if (shouldUseLinks()) {\n        const linkElement = document.querySelector(`head>link[${name}=\"${value}\"]`);\n        linkElement?.parentElement?.removeChild(linkElement);\n    }\n    else if (document.adoptedStyleSheets && !isSafari()) {\n        document.adoptedStyleSheets = document.adoptedStyleSheets.filter(sh => sh._ui5StyleId !== getStyleId(name, value));\n    }\n    else {\n        const styleElement = document.querySelector(`head > style[${name}=\"${value}\"]`);\n        styleElement?.parentElement?.removeChild(styleElement);\n    }\n};\nconst createOrUpdateStyle = (data, name, value = \"\", theme) => {\n    if (hasStyle(name, value)) {\n        updateStyle(data, name, value, theme);\n    }\n    else {\n        createStyle(data, name, value, theme);\n    }\n};\nexport { createStyle, hasStyle, updateStyle, removeStyle, createOrUpdateStyle, };\n//# sourceMappingURL=ManagedStyles.js.map","const warnings = new Set();\nconst getThemeMetadata = () => {\n    // Check if the class was already applied, most commonly to the link/style tag with the CSS Variables\n    let el = document.querySelector(\".sapThemeMetaData-Base-baseLib\") || document.querySelector(\".sapThemeMetaData-UI5-sap-ui-core\");\n    if (el) {\n        return getComputedStyle(el).backgroundImage;\n    }\n    el = document.createElement(\"span\");\n    el.style.display = \"none\";\n    // Try with sapThemeMetaData-Base-baseLib first\n    el.classList.add(\"sapThemeMetaData-Base-baseLib\");\n    document.body.appendChild(el);\n    let metadata = getComputedStyle(el).backgroundImage;\n    // Try with sapThemeMetaData-UI5-sap-ui-core only if the previous selector was not found\n    if (metadata === \"none\") {\n        el.classList.add(\"sapThemeMetaData-UI5-sap-ui-core\");\n        metadata = getComputedStyle(el).backgroundImage;\n    }\n    document.body.removeChild(el);\n    return metadata;\n};\nconst parseThemeMetadata = (metadataString) => {\n    const params = /\\([\"']?data:text\\/plain;utf-8,(.*?)['\"]?\\)$/i.exec(metadataString);\n    if (params && params.length >= 2) {\n        let paramsString = params[1];\n        paramsString = paramsString.replace(/\\\\\"/g, `\"`);\n        if (paramsString.charAt(0) !== \"{\" && paramsString.charAt(paramsString.length - 1) !== \"}\") {\n            try {\n                paramsString = decodeURIComponent(paramsString);\n            }\n            catch (ex) {\n                if (!warnings.has(\"decode\")) {\n                    console.warn(\"Malformed theme metadata string, unable to decodeURIComponent\"); // eslint-disable-line\n                    warnings.add(\"decode\");\n                }\n                return;\n            }\n        }\n        try {\n            return JSON.parse(paramsString);\n        }\n        catch (ex) {\n            if (!warnings.has(\"parse\")) {\n                console.warn(\"Malformed theme metadata string, unable to parse JSON\"); // eslint-disable-line\n                warnings.add(\"parse\");\n            }\n        }\n    }\n};\nconst processThemeMetadata = (metadata) => {\n    let themeName;\n    let baseThemeName;\n    try {\n        themeName = metadata.Path.match(/\\.([^.]+)\\.css_variables$/)[1];\n        baseThemeName = metadata.Extends[0];\n    }\n    catch (ex) {\n        if (!warnings.has(\"object\")) {\n            console.warn(\"Malformed theme metadata Object\", metadata); // eslint-disable-line\n            warnings.add(\"object\");\n        }\n        return;\n    }\n    return {\n        themeName,\n        baseThemeName,\n    };\n};\nconst getThemeDesignerTheme = () => {\n    const metadataString = getThemeMetadata();\n    if (!metadataString || metadataString === \"none\") {\n        return;\n    }\n    const metadata = parseThemeMetadata(metadataString);\n    if (metadata) {\n        return processThemeMetadata(metadata);\n    }\n};\nexport default getThemeDesignerTheme;\n//# sourceMappingURL=getThemeDesignerTheme.js.map","import EventProvider from \"../EventProvider.js\";\nconst eventProvider = new EventProvider();\nconst THEME_LOADED = \"themeLoaded\";\nconst attachThemeLoaded = (listener) => {\n    eventProvider.attachEvent(THEME_LOADED, listener);\n};\nconst detachThemeLoaded = (listener) => {\n    eventProvider.detachEvent(THEME_LOADED, listener);\n};\nconst fireThemeLoaded = (theme) => {\n    return eventProvider.fireEvent(THEME_LOADED, theme);\n};\nexport { attachThemeLoaded, detachThemeLoaded, fireThemeLoaded, };\n//# sourceMappingURL=ThemeLoaded.js.map","import createLinkInHead from \"../util/createLinkInHead.js\";\nimport validateThemeRoot from \"../validateThemeRoot.js\";\nimport { getThemeRoot as getConfiguredThemeRoot } from \"../InitialConfiguration.js\";\nimport { getTheme } from \"./Theme.js\";\nlet currThemeRoot;\n/**\n * Returns the current theme root.\n *\n * @public\n * @since 1.14.0\n * @returns { string } the current theme root\n */\nconst getThemeRoot = () => {\n    if (currThemeRoot === undefined) {\n        currThemeRoot = getConfiguredThemeRoot();\n    }\n    return currThemeRoot;\n};\n/**\n * Sets theme root for the current theme.\n * When set, the framework will validate the theme root and fetch the theme styles (CSS variables) from this location.\n *\n * <b>Note:</b> The feature is specific to custom themes, created with the `UI Theme Designer`.\n * The provided theme root is used only as a base to construct the actual location of the theme styles: `{themeRoot}/.../css_variables.css`.\n *\n * <br/>\n *\n * <b>Note:</b> Certain security restrictions will apply before fetching the theme assets.\n * Absolute URLs to a different origin than the current page will result in using the current page as an origin.\n * To allow specific origins, use &lt;meta name=\"sap-allowedThemeOrigins\" content=\"https://my-example-host.com/\"&gt; tag inside the &lt;head&gt; of the page.\n *\n * @public\n * @since 1.14.0\n * @param { string } themeRoot the new theme root\n * @returns { Promise<void> }\n */\nconst setThemeRoot = (themeRoot) => {\n    if (currThemeRoot === themeRoot) {\n        return;\n    }\n    currThemeRoot = themeRoot;\n    if (!validateThemeRoot(themeRoot)) {\n        console.warn(`The ${themeRoot} is not valid. Check the allowed origins as suggested in the \"setThemeRoot\" description.`); // eslint-disable-line\n        return;\n    }\n    return attachCustomThemeStylesToHead(getTheme());\n};\nconst formatThemeLink = (theme) => {\n    return `${getThemeRoot()}Base/baseLib/${theme}/css_variables.css`; // theme root is always set at this point.\n};\nconst attachCustomThemeStylesToHead = async (theme) => {\n    const link = document.querySelector(`[sap-ui-webcomponents-theme=\"${theme}\"]`);\n    if (link) {\n        document.head.removeChild(link);\n    }\n    await createLinkInHead(formatThemeLink(theme), { \"sap-ui-webcomponents-theme\": theme });\n};\nexport { getThemeRoot, setThemeRoot, attachCustomThemeStylesToHead, };\n//# sourceMappingURL=ThemeRoot.js.map","import { getThemeProperties, getRegisteredPackages, isThemeRegistered } from \"../asset-registries/Themes.js\";\nimport { removeStyle, createOrUpdateStyle } from \"../ManagedStyles.js\";\nimport getThemeDesignerTheme from \"./getThemeDesignerTheme.js\";\nimport { fireThemeLoaded } from \"./ThemeLoaded.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nimport { attachCustomThemeStylesToHead, getThemeRoot } from \"../config/ThemeRoot.js\";\nimport { DEFAULT_THEME } from \"../generated/AssetParameters.js\";\nimport { getCurrentRuntimeIndex } from \"../Runtimes.js\";\nconst BASE_THEME_PACKAGE = \"@ui5/webcomponents-theming\";\nconst isThemeBaseRegistered = () => {\n    const registeredPackages = getRegisteredPackages();\n    return registeredPackages.has(BASE_THEME_PACKAGE);\n};\nconst loadThemeBase = async (theme) => {\n    if (!isThemeBaseRegistered()) {\n        return;\n    }\n    const cssData = await getThemeProperties(BASE_THEME_PACKAGE, theme);\n    if (cssData) {\n        createOrUpdateStyle(cssData, \"data-ui5-theme-properties\", BASE_THEME_PACKAGE, theme);\n    }\n};\nconst deleteThemeBase = () => {\n    removeStyle(\"data-ui5-theme-properties\", BASE_THEME_PACKAGE);\n};\nconst loadComponentPackages = async (theme) => {\n    const registeredPackages = getRegisteredPackages();\n    const packagesStylesPromises = [...registeredPackages].map(async (packageName) => {\n        if (packageName === BASE_THEME_PACKAGE) {\n            return;\n        }\n        const cssData = await getThemeProperties(packageName, theme);\n        if (cssData) {\n            createOrUpdateStyle(cssData, `data-ui5-component-properties-${getCurrentRuntimeIndex()}`, packageName);\n        }\n    });\n    return Promise.all(packagesStylesPromises);\n};\nconst detectExternalTheme = async (theme) => {\n    // If theme designer theme is detected, use this\n    const extTheme = getThemeDesignerTheme();\n    if (extTheme) {\n        return extTheme;\n    }\n    // If OpenUI5Support is enabled, try to find out if it loaded variables\n    const openUI5Support = getFeature(\"OpenUI5Support\");\n    if (openUI5Support && openUI5Support.isOpenUI5Detected()) {\n        const varsLoaded = openUI5Support.cssVariablesLoaded();\n        if (varsLoaded) {\n            return {\n                themeName: openUI5Support.getConfigurationSettingsObject()?.theme,\n                baseThemeName: \"\", // baseThemeName is only relevant for custom themes\n            };\n        }\n    }\n    else if (getThemeRoot()) {\n        await attachCustomThemeStylesToHead(theme);\n        return getThemeDesignerTheme();\n    }\n};\nconst applyTheme = async (theme) => {\n    const extTheme = await detectExternalTheme(theme);\n    // Only load theme_base properties if there is no externally loaded theme, or there is, but it is not being loaded\n    if (!extTheme || theme !== extTheme.themeName) {\n        await loadThemeBase(theme);\n    }\n    else {\n        deleteThemeBase();\n    }\n    // Always load component packages properties. For non-registered themes, try with the base theme, if any\n    const packagesTheme = isThemeRegistered(theme) ? theme : extTheme && extTheme.baseThemeName;\n    await loadComponentPackages(packagesTheme || DEFAULT_THEME);\n    fireThemeLoaded(theme);\n};\nexport default applyTheme;\n//# sourceMappingURL=applyTheme.js.map","import { getTheme as getConfiguredTheme } from \"../InitialConfiguration.js\";\nimport { reRenderAllUI5Elements } from \"../Render.js\";\nimport applyTheme from \"../theming/applyTheme.js\";\nimport getThemeDesignerTheme from \"../theming/getThemeDesignerTheme.js\";\nimport { DEFAULT_THEME, SUPPORTED_THEMES } from \"../generated/AssetParameters.js\";\nlet curTheme;\n/**\n * Returns the current theme.\n * @public\n * @returns {string} the current theme name\n */\nconst getTheme = () => {\n    if (curTheme === undefined) {\n        curTheme = getConfiguredTheme();\n    }\n    return curTheme;\n};\n/**\n * Applies a new theme after fetching its assets from the network.\n * @public\n * @param {string} theme the name of the new theme\n * @returns {Promise<void>} a promise that is resolved when the new theme assets have been fetched and applied to the DOM\n */\nconst setTheme = async (theme) => {\n    if (curTheme === theme) {\n        return;\n    }\n    curTheme = theme;\n    // Update CSS Custom Properties\n    await applyTheme(curTheme);\n    await reRenderAllUI5Elements({ themeAware: true });\n};\n/**\n * Returns the default theme.\n *\n * Note: Default theme might be different than the configurated one.\n *\n * @public\n * @returns {string}\n */\nconst getDefaultTheme = () => {\n    return DEFAULT_THEME;\n};\n/**\n * Returns if the given theme name is the one currently applied.\n * @private\n * @param {string} theme\n * @returns {boolean}\n */\nconst isTheme = (theme) => {\n    const currentTheme = getTheme();\n    return currentTheme === theme || currentTheme === `${theme}_exp`;\n};\n/**\n * Returns if the currently set theme is part of legacy theme families (\"sap_belize\" or \"sap_fiori_3\").\n * <b>Note</b>: in addition, the method checks the base theme of a custom theme, built via the ThemeDesigner.\n *\n * @private\n * @returns { boolean }\n */\nconst isLegacyThemeFamily = () => {\n    const currentTheme = getTheme();\n    if (!isKnownTheme(currentTheme)) {\n        return !getThemeDesignerTheme()?.baseThemeName?.startsWith(\"sap_horizon\");\n    }\n    return !currentTheme.startsWith(\"sap_horizon\");\n};\nconst isKnownTheme = (theme) => SUPPORTED_THEMES.includes(theme);\nexport { getTheme, setTheme, isTheme, isLegacyThemeFamily, getDefaultTheme, };\n//# sourceMappingURL=Theme.js.map","import { reRenderAllUI5Elements } from \"../Render.js\";\nimport getSharedResource from \"../getSharedResource.js\";\nimport EventProvider from \"../EventProvider.js\";\nconst getEventProvider = () => getSharedResource(\"CustomStyle.eventProvider\", new EventProvider());\nconst CUSTOM_CSS_CHANGE = \"CustomCSSChange\";\nconst attachCustomCSSChange = (listener) => {\n    getEventProvider().attachEvent(CUSTOM_CSS_CHANGE, listener);\n};\nconst detachCustomCSSChange = (listener) => {\n    getEventProvider().detachEvent(CUSTOM_CSS_CHANGE, listener);\n};\nconst fireCustomCSSChange = (tag) => {\n    return getEventProvider().fireEvent(CUSTOM_CSS_CHANGE, tag);\n};\nconst getCustomCSSFor = () => getSharedResource(\"CustomStyle.customCSSFor\", {});\n// Listen to the eventProvider, in case other copies of this CustomStyle module fire this\n// event, and this copy would therefore need to reRender the ui5 webcomponents; but\n// don't reRender if it was this copy that fired the event to begin with.\nlet skipRerender;\nattachCustomCSSChange((tag) => {\n    if (!skipRerender) {\n        reRenderAllUI5Elements({ tag });\n    }\n});\nconst addCustomCSS = (tag, css) => {\n    const customCSSFor = getCustomCSSFor();\n    if (!customCSSFor[tag]) {\n        customCSSFor[tag] = [];\n    }\n    customCSSFor[tag].push(css);\n    skipRerender = true;\n    try {\n        // The event is fired and the attached event listeners are all called synchronously\n        // The skipRerender flag will be used to avoid calling reRenderAllUI5Elements twice when it is this copy\n        // of CustomStyle.js which is firing the `CustomCSSChange` event.\n        fireCustomCSSChange(tag);\n    }\n    finally {\n        skipRerender = false;\n    }\n    return reRenderAllUI5Elements({ tag });\n};\nconst getCustomCSS = (tag) => {\n    const customCSSFor = getCustomCSSFor();\n    return customCSSFor[tag] ? customCSSFor[tag].join(\"\") : \"\";\n};\nexport { addCustomCSS, getCustomCSS, attachCustomCSSChange, detachCustomCSSChange, };\n//# sourceMappingURL=CustomStyle.js.map","export default (value) => {\n    const m = /\\$([-a-z0-9A-Z._]+)(?::([^$]*))?\\$/.exec(value);\n    return m && m[2] ? m[2].split(/,/) : null;\n};\n//# sourceMappingURL=getDesigntimePropertyAsArray.js.map","import { getRTL as getConfiguredRTL } from \"../InitialConfiguration.js\";\nimport { getLanguage } from \"./Language.js\";\nimport getDesigntimePropertyAsArray from \"../util/getDesigntimePropertyAsArray.js\";\nimport detectNavigatorLanguage from \"../util/detectNavigatorLanguage.js\";\nconst M_ISO639_OLD_TO_NEW = {\n    \"iw\": \"he\",\n    \"ji\": \"yi\",\n    \"in\": \"id\",\n    \"sh\": \"sr\",\n};\nconst A_RTL_LOCALES = getDesigntimePropertyAsArray(\"$cldr-rtl-locales:ar,fa,he$\") || [];\n/**\n * Checks whether the language is using RTL\n * @param {string} language\n * @returns {boolean} whether the language is using RTL\n */\nconst impliesRTL = (language) => {\n    language = (language && M_ISO639_OLD_TO_NEW[language]) || language;\n    return A_RTL_LOCALES.indexOf(language) >= 0;\n};\n/**\n * Gets the effective RTL setting by first checking the configuration\n * and if not set using the currently set language or the navigator language if the language is not explicitly set.\n * @returns {boolean} whether RTL should be used\n */\nconst getRTL = () => {\n    if (typeof document === \"undefined\") {\n        return false;\n    }\n    const configurationRTL = getConfiguredRTL();\n    if (configurationRTL !== undefined) {\n        return !!configurationRTL;\n    }\n    return impliesRTL(getLanguage() || detectNavigatorLanguage());\n};\nexport { getRTL }; // eslint-disable-line\n//# sourceMappingURL=RTL.js.map","const whenDOMReady = () => {\n    return new Promise(resolve => {\n        if (document.body) {\n            resolve();\n        }\n        else {\n            document.addEventListener(\"DOMContentLoaded\", () => {\n                resolve();\n            });\n        }\n    });\n};\nexport default whenDOMReady;\n//# sourceMappingURL=whenDOMReady.js.map","const styleData = {\n    packageName: \"@ui5/webcomponents-base\",\n    fileName: \"FontFace.css\",\n    content: `@font-face{font-family:\"72\";font-style:normal;font-weight:400;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Regular.woff2?ui5-webcomponents) format(\"woff2\"),local(\"72\")}@font-face{font-family:\"72full\";font-style:normal;font-weight:400;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Regular-full.woff2?ui5-webcomponents) format(\"woff2\"),local('72-full')}@font-face{font-family:\"72\";font-style:normal;font-weight:700;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Bold.woff2?ui5-webcomponents) format(\"woff2\"),local('72-Bold')}@font-face{font-family:\"72full\";font-style:normal;font-weight:700;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Bold-full.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:'72-Bold';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Bold.woff2?ui5-webcomponents) format(\"woff2\"),local('72-Bold')}@font-face{font-family:'72-Boldfull';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Bold-full.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:'72-Light';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Light.woff2?ui5-webcomponents) format(\"woff2\"),local('72-Light')}@font-face{font-family:'72-Lightfull';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Light-full.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:'72Mono';src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72Mono-Regular.woff2?ui5-webcomponents) format('woff2'),local('72Mono')}@font-face{font-family:'72Monofull';src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72Mono-Regular-full.woff2?ui5-webcomponents) format('woff2')}@font-face{font-family:'72Mono-Bold';src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72Mono-Bold.woff2?ui5-webcomponents) format('woff2'),local('72Mono-Bold')}@font-face{font-family:'72Mono-Boldfull';src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72Mono-Bold-full.woff2?ui5-webcomponents) format('woff2')}@font-face{font-family:\"72Black\";font-style:bold;font-weight:900;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Black.woff2?ui5-webcomponents) format(\"woff2\"),local('72Black')}@font-face{font-family:\"72-SemiboldDuplex\";src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-SemiboldDuplex.woff2?ui5-webcomponents) format(\"woff2\"),local('72-SemiboldDuplex')}`,\n};\nexport default styleData;\n//# sourceMappingURL=FontFace.css.js.map","const styleData = {\n    packageName: \"@ui5/webcomponents-base\",\n    fileName: \"OverrideFontFace.css\",\n    content: `@font-face{font-family:'72override';unicode-range:U+0102-0103,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EB7,U+1EB8-1EC7,U+1EC8-1ECB,U+1ECC-1EE3,U+1EE4-1EF1,U+1EF4-1EF7;src:local('Arial'),local('Helvetica'),local('sans-serif')}`,\n};\nexport default styleData;\n//# sourceMappingURL=OverrideFontFace.css.js.map","import { hasStyle, createStyle } from \"./ManagedStyles.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nimport fontFaceCSS from \"./generated/css/FontFace.css.js\";\nimport overrideFontFaceCSS from \"./generated/css/OverrideFontFace.css.js\";\nconst insertFontFace = () => {\n    const openUI5Support = getFeature(\"OpenUI5Support\");\n    // Only set the main font if there is no OpenUI5 support, or there is, but OpenUI5 is not loaded\n    if (!openUI5Support || !openUI5Support.isOpenUI5Detected()) {\n        insertMainFontFace();\n    }\n    // Always set the override font - OpenUI5 in CSS Vars mode does not set it, unlike the main font\n    insertOverrideFontFace();\n};\nconst insertMainFontFace = () => {\n    if (!hasStyle(\"data-ui5-font-face\")) {\n        createStyle(fontFaceCSS, \"data-ui5-font-face\");\n    }\n};\nconst insertOverrideFontFace = () => {\n    if (!hasStyle(\"data-ui5-font-face-override\")) {\n        createStyle(overrideFontFaceCSS, \"data-ui5-font-face-override\");\n    }\n};\nexport default insertFontFace;\n//# sourceMappingURL=FontFace.js.map","const styleData = {\n    packageName: \"@ui5/webcomponents-base\",\n    fileName: \"SystemCSSVars.css\",\n    content: `:root{--_ui5_content_density:cozy}.sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5_content_density:compact}[dir=rtl]{--_ui5_dir:rtl}[dir=ltr]{--_ui5_dir:ltr}`,\n};\nexport default styleData;\n//# sourceMappingURL=SystemCSSVars.css.js.map","import { hasStyle, createStyle } from \"./ManagedStyles.js\";\nimport systemCSSVars from \"./generated/css/SystemCSSVars.css.js\";\nconst insertSystemCSSVars = () => {\n    if (!hasStyle(\"data-ui5-system-css-vars\")) {\n        createStyle(systemCSSVars, \"data-ui5-system-css-vars\");\n    }\n};\nexport default insertSystemCSSVars;\n//# sourceMappingURL=SystemCSSVars.js.map","import whenDOMReady from \"./util/whenDOMReady.js\";\nimport EventProvider from \"./EventProvider.js\";\nimport insertFontFace from \"./FontFace.js\";\nimport insertSystemCSSVars from \"./SystemCSSVars.js\";\nimport { getTheme } from \"./config/Theme.js\";\nimport applyTheme from \"./theming/applyTheme.js\";\nimport { registerCurrentRuntime } from \"./Runtimes.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nimport { attachThemeRegistered } from \"./theming/ThemeRegistered.js\";\nlet booted = false;\nlet bootPromise;\nconst eventProvider = new EventProvider();\n/**\n * Attaches a callback that will be executed after boot finishes.\n * <b>Note:</b> If the framework already booted, the callback will be immediately executed.\n * @public\n * @param { Function } listener\n */\nconst attachBoot = (listener) => {\n    if (!booted) {\n        eventProvider.attachEvent(\"boot\", listener);\n        return;\n    }\n    listener();\n};\nconst boot = async () => {\n    if (bootPromise !== undefined) {\n        return bootPromise;\n    }\n    const bootExecutor = async (resolve) => {\n        if (typeof document === \"undefined\") {\n            resolve();\n            return;\n        }\n        attachThemeRegistered(onThemeRegistered);\n        registerCurrentRuntime();\n        const openUI5Support = getFeature(\"OpenUI5Support\");\n        const isOpenUI5Loaded = openUI5Support ? openUI5Support.isOpenUI5Detected() : false;\n        const f6Navigation = getFeature(\"F6Navigation\");\n        if (openUI5Support) {\n            await openUI5Support.init();\n        }\n        if (f6Navigation && !isOpenUI5Loaded) {\n            f6Navigation.init();\n        }\n        await whenDOMReady();\n        await applyTheme(getTheme());\n        openUI5Support && openUI5Support.attachListeners();\n        insertFontFace();\n        insertSystemCSSVars();\n        resolve();\n        booted = true;\n        await eventProvider.fireEventAsync(\"boot\");\n    };\n    bootPromise = new Promise(bootExecutor);\n    return bootPromise;\n};\n/**\n * Callback, executed after theme properties registration\n * to apply the newly registered theme.\n * @private\n * @param { string } theme\n */\nconst onThemeRegistered = (theme) => {\n    const currentTheme = getTheme();\n    if (booted && theme === currentTheme) {\n        applyTheme(currentTheme);\n    }\n};\nexport { boot, attachBoot, };\n//# sourceMappingURL=Boot.js.map","const kebabToCamelMap = new Map();\nconst camelToKebabMap = new Map();\nconst kebabToCamelCase = (string) => {\n    if (!kebabToCamelMap.has(string)) {\n        const result = toCamelCase(string.split(\"-\"));\n        kebabToCamelMap.set(string, result);\n    }\n    return kebabToCamelMap.get(string);\n};\nconst camelToKebabCase = (string) => {\n    if (!camelToKebabMap.has(string)) {\n        const result = string.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n        camelToKebabMap.set(string, result);\n    }\n    return camelToKebabMap.get(string);\n};\nconst toCamelCase = (parts) => {\n    return parts.map((string, index) => {\n        return index === 0 ? string.toLowerCase() : string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n    }).join(\"\");\n};\nexport { kebabToCamelCase, camelToKebabCase };\n//# sourceMappingURL=StringHelper.js.map","/**\n * Determines the slot to which a node should be assigned\n * @param node Text node or HTML element\n * @returns {string}\n */\nconst getSlotName = (node) => {\n    // Text nodes can only go to the default slot\n    if (!(node instanceof HTMLElement)) {\n        return \"default\";\n    }\n    // Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)\n    const slot = node.getAttribute(\"slot\");\n    if (slot) {\n        const match = slot.match(/^(.+?)-\\d+$/);\n        return match ? match[1] : slot;\n    }\n    // Use default slot as a fallback\n    return \"default\";\n};\nconst getSlottedNodes = (node) => {\n    if (node instanceof HTMLSlotElement) {\n        return node.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement);\n    }\n    return [node];\n};\nconst getSlottedNodesList = (nodeList) => {\n    return nodeList.reduce((acc, curr) => acc.concat(getSlottedNodes(curr)), []);\n};\nexport { getSlotName, getSlottedNodes, getSlottedNodesList, };\n//# sourceMappingURL=SlotsHelper.js.map","import { camelToKebabCase } from \"./util/StringHelper.js\";\nimport { getSlottedNodes } from \"./util/SlotsHelper.js\";\nimport { getEffectiveScopingSuffixForTag } from \"./CustomElementsScopeUtils.js\";\n/**\n *\n * @class\n * @public\n */\nclass UI5ElementMetadata {\n    constructor(metadata) {\n        this.metadata = metadata;\n    }\n    getInitialState() {\n        if (Object.prototype.hasOwnProperty.call(this, \"_initialState\")) {\n            return this._initialState;\n        }\n        const initialState = {};\n        const slotsAreManaged = this.slotsAreManaged();\n        // Initialize properties\n        const props = this.getProperties();\n        for (const propName in props) { // eslint-disable-line\n            const propType = props[propName].type;\n            const propDefaultValue = props[propName].defaultValue;\n            if (propType === Boolean) {\n                initialState[propName] = false;\n                if (propDefaultValue !== undefined) {\n                    console.warn(\"The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default\"); // eslint-disable-line\n                }\n            }\n            else if (props[propName].multiple) {\n                initialState[propName] = [];\n            }\n            else if (propType === Object) {\n                initialState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : {};\n            }\n            else if (propType === String) {\n                initialState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : \"\";\n            }\n            else {\n                initialState[propName] = propDefaultValue;\n            }\n        }\n        // Initialize slots\n        if (slotsAreManaged) {\n            const slots = this.getSlots();\n            for (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n                const propertyName = slotData.propertyName || slotName;\n                initialState[propertyName] = [];\n            }\n        }\n        this._initialState = initialState;\n        return initialState;\n    }\n    /**\n     * Validates the property's value and returns it if correct\n     * or returns the default value if not.\n     * <b>Note:</b> Only intended for use by UI5Element.js\n     * @public\n     */\n    static validatePropertyValue(value, propData) {\n        const isMultiple = propData.multiple;\n        if (isMultiple && value) {\n            return value.map((propValue) => validateSingleProperty(propValue, propData));\n        }\n        return validateSingleProperty(value, propData);\n    }\n    /**\n     * Validates the slot's value and returns it if correct\n     * or throws an exception if not.\n     * <b>Note:</b> Only intended for use by UI5Element.js\n     * @pubic\n     */\n    static validateSlotValue(value, slotData) {\n        return validateSingleSlot(value, slotData);\n    }\n    /**\n     * Returns the tag of the UI5 Element without the scope\n     * @public\n     */\n    getPureTag() {\n        return this.metadata.tag || \"\";\n    }\n    /**\n     * Returns the tag of the UI5 Element\n     * @public\n     */\n    getTag() {\n        const pureTag = this.metadata.tag;\n        if (!pureTag) {\n            return \"\";\n        }\n        const suffix = getEffectiveScopingSuffixForTag(pureTag);\n        if (!suffix) {\n            return pureTag;\n        }\n        return `${pureTag}-${suffix}`;\n    }\n    /**\n     * Determines whether a property should have an attribute counterpart\n     * @public\n     * @param propName\n     * @returns {boolean}\n     */\n    hasAttribute(propName) {\n        const propData = this.getProperties()[propName];\n        return propData.type !== Object && !propData.noAttribute && !propData.multiple;\n    }\n    /**\n     * Returns an array with the properties of the UI5 Element (in camelCase)\n     * @public\n     * @returns {string[]}\n     */\n    getPropertiesList() {\n        return Object.keys(this.getProperties());\n    }\n    /**\n     * Returns an array with the attributes of the UI5 Element (in kebab-case)\n     * @public\n     * @returns {string[]}\n     */\n    getAttributesList() {\n        return this.getPropertiesList().filter(this.hasAttribute.bind(this)).map(camelToKebabCase);\n    }\n    /**\n     * Determines whether this UI5 Element has a default slot of type Node, therefore can slot text\n     * @returns {boolean}\n     */\n    canSlotText() {\n        const defaultSlot = this.getSlots().default;\n        return defaultSlot && defaultSlot.type === Node;\n    }\n    /**\n     * Determines whether this UI5 Element supports any slots\n     * @public\n     */\n    hasSlots() {\n        return !!Object.entries(this.getSlots()).length;\n    }\n    /**\n     * Determines whether this UI5 Element supports any slots with \"individualSlots: true\"\n     * @public\n     */\n    hasIndividualSlots() {\n        return this.slotsAreManaged() && Object.values(this.getSlots()).some(slotData => slotData.individualSlots);\n    }\n    /**\n     * Determines whether this UI5 Element needs to invalidate if children are added/removed/changed\n     * @public\n     */\n    slotsAreManaged() {\n        return !!this.metadata.managedSlots;\n    }\n    /**\n     * Determines whether this control supports F6 fast navigation\n     * @public\n     */\n    supportsF6FastNavigation() {\n        return !!this.metadata.fastNavigation;\n    }\n    /**\n     * Returns an object with key-value pairs of properties and their metadata definitions\n     * @public\n     */\n    getProperties() {\n        if (!this.metadata.properties) {\n            this.metadata.properties = {};\n        }\n        return this.metadata.properties;\n    }\n    /**\n     * Returns an object with key-value pairs of events and their metadata definitions\n     * @public\n     */\n    getEvents() {\n        if (!this.metadata.events) {\n            this.metadata.events = {};\n        }\n        return this.metadata.events;\n    }\n    /**\n     * Returns an object with key-value pairs of slots and their metadata definitions\n     * @public\n     */\n    getSlots() {\n        if (!this.metadata.slots) {\n            this.metadata.slots = {};\n        }\n        return this.metadata.slots;\n    }\n    /**\n     * Determines whether this UI5 Element has any translatable texts (needs to be invalidated upon language change)\n     * @returns {boolean}\n     */\n    isLanguageAware() {\n        return !!this.metadata.languageAware;\n    }\n    /**\n     * Determines whether this UI5 Element has any theme dependant carachteristics.\n     * @returns {boolean}\n     */\n    isThemeAware() {\n        return !!this.metadata.themeAware;\n    }\n    /**\n     * Matches a changed entity (property/slot) with the given name against the \"invalidateOnChildChange\" configuration\n     * and determines whether this should cause and invalidation\n     *\n     * @param slotName the name of the slot in which a child was changed\n     * @param type the type of change in the child: \"property\" or \"slot\"\n     * @param name the name of the property/slot that changed\n     * @returns {boolean}\n     */\n    shouldInvalidateOnChildChange(slotName, type, name) {\n        const config = this.getSlots()[slotName].invalidateOnChildChange;\n        // invalidateOnChildChange was not set in the slot metadata - by default child changes do not affect the component\n        if (config === undefined) {\n            return false;\n        }\n        // The simple format was used: invalidateOnChildChange: true/false;\n        if (typeof config === \"boolean\") {\n            return config;\n        }\n        // The complex format was used: invalidateOnChildChange: { properties, slots }\n        if (typeof config === \"object\") {\n            // A property was changed\n            if (type === \"property\") {\n                // The config object does not have a properties field\n                if (config.properties === undefined) {\n                    return false;\n                }\n                // The config object has the short format: properties: true/false\n                if (typeof config.properties === \"boolean\") {\n                    return config.properties;\n                }\n                // The config object has the complex format: properties: [...]\n                if (Array.isArray(config.properties)) {\n                    return config.properties.includes(name);\n                }\n                throw new Error(\"Wrong format for invalidateOnChildChange.properties: boolean or array is expected\");\n            }\n            // A slot was changed\n            if (type === \"slot\") {\n                // The config object does not have a slots field\n                if (config.slots === undefined) {\n                    return false;\n                }\n                // The config object has the short format: slots: true/false\n                if (typeof config.slots === \"boolean\") {\n                    return config.slots;\n                }\n                // The config object has the complex format: slots: [...]\n                if (Array.isArray(config.slots)) {\n                    return config.slots.includes(name);\n                }\n                throw new Error(\"Wrong format for invalidateOnChildChange.slots: boolean or array is expected\");\n            }\n        }\n        throw new Error(\"Wrong format for invalidateOnChildChange: boolean or object is expected\");\n    }\n}\nconst validateSingleProperty = (value, propData) => {\n    const propertyType = propData.type;\n    let propertyValidator = propData.validator;\n    if (propertyType && propertyType.isDataTypeClass) {\n        propertyValidator = propertyType;\n    }\n    if (propertyValidator) {\n        return propertyValidator.isValid(value) ? value : propData.defaultValue;\n    }\n    if (!propertyType || propertyType === String) {\n        return (typeof value === \"string\" || typeof value === \"undefined\" || value === null) ? value : value.toString();\n    }\n    if (propertyType === Boolean) {\n        return typeof value === \"boolean\" ? value : false;\n    }\n    if (propertyType === Object) {\n        return typeof value === \"object\" ? value : propData.defaultValue;\n    }\n    // Check if \"value\" is part of the enum (propertyType) values and return the defaultValue if not found.\n    return value in propertyType ? value : propData.defaultValue;\n};\nconst validateSingleSlot = (value, slotData) => {\n    value && getSlottedNodes(value).forEach(el => {\n        if (!(el instanceof slotData.type)) {\n            throw new Error(`The element is not of type ${slotData.type.toString()}`);\n        }\n    });\n    return value;\n};\nexport default UI5ElementMetadata;\n//# sourceMappingURL=UI5ElementMetadata.js.map","class StaticArea extends HTMLElement {\n}\nif (!customElements.get(\"ui5-static-area\")) {\n    customElements.define(\"ui5-static-area\", StaticArea);\n}\nexport default StaticArea;\n//# sourceMappingURL=StaticArea.js.map","const MAX_DEPTH_INHERITED_CLASSES = 10; // TypeScript complains about Infinity and big numbers\nconst getStylesString = (styles) => {\n    if (Array.isArray(styles)) {\n        return styles.filter(style => !!style).flat(MAX_DEPTH_INHERITED_CLASSES).map((style) => {\n            return typeof style === \"string\" ? style : style.content;\n        }).join(\" \");\n    }\n    return typeof styles === \"string\" ? styles : styles.content;\n};\nexport default getStylesString;\n//# sourceMappingURL=getStylesString.js.map","import { getCustomCSS, attachCustomCSSChange } from \"./CustomStyle.js\";\nimport getStylesString from \"./getStylesString.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nconst effectiveStyleMap = new Map();\nattachCustomCSSChange((tag) => {\n    effectiveStyleMap.delete(`${tag}_normal`); // there is custom CSS only for the component itself, not for its static area part\n});\nconst getEffectiveStyle = (ElementClass, forStaticArea = false) => {\n    const tag = ElementClass.getMetadata().getTag();\n    const key = `${tag}_${forStaticArea ? \"static\" : \"normal\"}`;\n    const openUI5Enablement = getFeature(\"OpenUI5Enablement\");\n    if (!effectiveStyleMap.has(key)) {\n        let effectiveStyle;\n        let busyIndicatorStyles = \"\";\n        if (openUI5Enablement) {\n            busyIndicatorStyles = getStylesString(openUI5Enablement.getBusyIndicatorStyles());\n        }\n        if (forStaticArea) {\n            effectiveStyle = getStylesString(ElementClass.staticAreaStyles);\n        }\n        else {\n            const customStyle = getCustomCSS(tag) || \"\";\n            const builtInStyles = getStylesString(ElementClass.styles);\n            effectiveStyle = `${builtInStyles} ${customStyle}`;\n        }\n        effectiveStyle = `${effectiveStyle} ${busyIndicatorStyles}`;\n        effectiveStyleMap.set(key, effectiveStyle);\n    }\n    return effectiveStyleMap.get(key); // The key is guaranteed to exist\n};\nexport default getEffectiveStyle;\n//# sourceMappingURL=getEffectiveStyle.js.map","import getEffectiveStyle from \"./getEffectiveStyle.js\";\nimport { attachCustomCSSChange } from \"./CustomStyle.js\";\nconst constructableStyleMap = new Map();\nattachCustomCSSChange((tag) => {\n    constructableStyleMap.delete(`${tag}_normal`); // there is custom CSS only for the component itself, not for its static area part\n});\n/**\n * Returns (and caches) a constructable style sheet for a web component class\n * Note: Chrome\n * @param ElementClass\n * @returns {*}\n */\nconst getConstructableStyle = (ElementClass, forStaticArea = false) => {\n    const tag = ElementClass.getMetadata().getTag();\n    const key = `${tag}_${forStaticArea ? \"static\" : \"normal\"}`;\n    if (!constructableStyleMap.has(key)) {\n        const styleContent = getEffectiveStyle(ElementClass, forStaticArea);\n        const style = new CSSStyleSheet();\n        style.replaceSync(styleContent);\n        constructableStyleMap.set(key, [style]);\n    }\n    return constructableStyleMap.get(key);\n};\nexport default getConstructableStyle;\n//# sourceMappingURL=getConstructableStyle.js.map","import getConstructableStyle from \"./theming/getConstructableStyle.js\";\nimport getEffectiveStyle from \"./theming/getEffectiveStyle.js\";\nimport getEffectiveLinksHrefs from \"./theming/getEffectiveLinksHrefs.js\";\nimport { shouldUseLinks } from \"./CSP.js\";\nimport { isSafari } from \"./Device.js\";\n/**\n * Updates the shadow root of a UI5Element or its static area item\n * @param element\n * @param forStaticArea\n */\nconst updateShadowRoot = (element, forStaticArea = false) => {\n    let styleStrOrHrefsArr;\n    const ctor = element.constructor;\n    const shadowRoot = forStaticArea ? element.staticAreaItem.shadowRoot : element.shadowRoot;\n    let renderResult;\n    if (forStaticArea) {\n        renderResult = element.renderStatic(); // this is checked before calling updateShadowRoot\n    }\n    else {\n        renderResult = element.render(); // this is checked before calling updateShadowRoot\n    }\n    if (!shadowRoot) {\n        console.warn(`There is no shadow root to update`); // eslint-disable-line\n        return;\n    }\n    if (shouldUseLinks()) {\n        styleStrOrHrefsArr = getEffectiveLinksHrefs(ctor, forStaticArea);\n    }\n    else if (document.adoptedStyleSheets && !isSafari()) { // Chrome\n        shadowRoot.adoptedStyleSheets = getConstructableStyle(ctor, forStaticArea);\n    }\n    else { // FF, Safari\n        styleStrOrHrefsArr = getEffectiveStyle(ctor, forStaticArea);\n    }\n    if (ctor.renderer) {\n        ctor.renderer(renderResult, shadowRoot, styleStrOrHrefsArr, forStaticArea, { host: element });\n        return;\n    }\n    ctor.render(renderResult, shadowRoot, styleStrOrHrefsArr, forStaticArea, { host: element });\n};\nexport default updateShadowRoot;\n//# sourceMappingURL=updateShadowRoot.js.map","const GLOBAL_CONTENT_DENSITY_CSS_VAR = \"--_ui5_content_density\";\nconst getEffectiveContentDensity = (el) => getComputedStyle(el).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR);\nexport default getEffectiveContentDensity;\n//# sourceMappingURL=getEffectiveContentDensity.js.map","import { getRTL } from \"../config/RTL.js\";\nconst GLOBAL_DIR_CSS_VAR = \"--_ui5_dir\";\nconst getEffectiveDir = (element) => {\n    const doc = window.document;\n    const dirValues = [\"ltr\", \"rtl\"]; // exclude \"auto\" and \"\" from all calculations\n    const locallyAppliedDir = getComputedStyle(element).getPropertyValue(GLOBAL_DIR_CSS_VAR);\n    // In that order, inspect the CSS Var (for modern browsers), the element itself, html and body (for IE fallback)\n    if (dirValues.includes(locallyAppliedDir)) {\n        return locallyAppliedDir;\n    }\n    if (dirValues.includes(element.dir)) {\n        return element.dir;\n    }\n    if (dirValues.includes(doc.documentElement.dir)) {\n        return doc.documentElement.dir;\n    }\n    if (dirValues.includes(doc.body.dir)) {\n        return doc.body.dir;\n    }\n    // Finally, check the configuration for explicitly set RTL or language-implied RTL\n    return getRTL() ? \"rtl\" : undefined;\n};\nexport default getEffectiveDir;\n//# sourceMappingURL=getEffectiveDir.js.map","import \"./StaticArea.js\";\nimport updateShadowRoot from \"./updateShadowRoot.js\";\nimport { renderFinished } from \"./Render.js\";\nimport getEffectiveContentDensity from \"./util/getEffectiveContentDensity.js\";\nimport { getEffectiveScopingSuffixForTag } from \"./CustomElementsScopeUtils.js\";\nimport getEffectiveDir from \"./locale/getEffectiveDir.js\";\nconst pureTagName = \"ui5-static-area-item\";\nconst popupIntegrationAttr = \"data-sap-ui-integration-popup-content\";\n/**\n *\n * @class\n * @author SAP SE\n * @private\n */\nclass StaticAreaItem extends HTMLElement {\n    constructor() {\n        super();\n        this._rendered = false;\n        this.attachShadow({ mode: \"open\" });\n    }\n    /**\n     * @param {UI5Element} ownerElement the UI5Element instance that owns this static area item\n     */\n    setOwnerElement(ownerElement) {\n        this.ownerElement = ownerElement;\n        this.classList.add(this.ownerElement._id); // used for getting the popover in the tests\n        if (this.ownerElement.hasAttribute(\"data-ui5-static-stable\")) {\n            this.setAttribute(\"data-ui5-stable\", this.ownerElement.getAttribute(\"data-ui5-static-stable\")); // stable selector\n        }\n    }\n    /**\n     * Updates the shadow root of the static area item with the latest state, if rendered\n     */\n    update() {\n        if (this._rendered) {\n            this.updateAdditionalProperties();\n            updateShadowRoot(this.ownerElement, true);\n        }\n    }\n    updateAdditionalProperties() {\n        this._updateAdditionalAttrs();\n        this._updateContentDensity();\n        this._updateDirection();\n    }\n    /**\n     * Sets the correct content density based on the owner element's state\n     * @private\n     */\n    _updateContentDensity() {\n        if (getEffectiveContentDensity(this.ownerElement) === \"compact\") {\n            this.classList.add(\"sapUiSizeCompact\");\n            this.classList.add(\"ui5-content-density-compact\");\n        }\n        else {\n            this.classList.remove(\"sapUiSizeCompact\");\n            this.classList.remove(\"ui5-content-density-compact\");\n        }\n    }\n    _updateDirection() {\n        if (this.ownerElement) {\n            const dir = getEffectiveDir(this.ownerElement);\n            if (dir) {\n                this.setAttribute(\"dir\", dir);\n            }\n            else {\n                this.removeAttribute(\"dir\");\n            }\n        }\n    }\n    _updateAdditionalAttrs() {\n        this.setAttribute(pureTagName, \"\");\n        this.setAttribute(popupIntegrationAttr, \"\");\n    }\n    /**\n     * @protected\n     * Returns reference to the DOM element where the current fragment is added.\n     */\n    async getDomRef() {\n        this.updateAdditionalProperties();\n        if (!this._rendered) {\n            this._rendered = true;\n            updateShadowRoot(this.ownerElement, true);\n        }\n        await renderFinished(); // Wait for the content of the ui5-static-area-item to be rendered\n        return this.shadowRoot;\n    }\n    static getTag() {\n        const suffix = getEffectiveScopingSuffixForTag(pureTagName);\n        if (!suffix) {\n            return pureTagName;\n        }\n        return `${pureTagName}-${suffix}`;\n    }\n    static createInstance() {\n        if (!customElements.get(StaticAreaItem.getTag())) {\n            customElements.define(StaticAreaItem.getTag(), StaticAreaItem);\n        }\n        return document.createElement(this.getTag());\n    }\n}\nexport default StaticAreaItem;\n//# sourceMappingURL=StaticAreaItem.js.map","/**\n * The tag prefixes to be ignored.\n */\nconst tagPrefixes = [];\n/**\n * Ignores all custom HTML elements with a given tag prefix to improve the rendering performance of the UI5 Web Components.\n * <br>\n *\n * <b>When used:</b> the UI5 Web Components framework treats all custom HTML elements,\n * starting with the given prefix as if they are standard HTML elements, such as: `div`, `span`, etc, without additional processing.\n * <br>\n *\n * <b>When not used:</b> the framework waits for the slotted children to be defined and registered first,\n * because the state or visual appearance of the parent may rely on the slotted elements/children.\n *\n * <b>Note:</b> We recommend using `ignoreCustomElements` when slotting custom HTML elements (with only semantic purpose)\n * inside UI5 Web Components, to improve the time to render.\n *\n * @public\n * @since 1.14.0\n * @param { string } tagPrefix\n */\nconst ignoreCustomElements = (tagPrefix) => {\n    if (typeof tagPrefix !== \"string\" || !tagPrefix.length) {\n        throw new Error(\"Only string characters for a tag prefix.\");\n    }\n    tagPrefixes.push(tagPrefix);\n};\n/**\n * Determines whether custom elements with the given tag should be ignored.\n *\n * @private\n * @param { string } tag\n */\nconst shouldIgnoreCustomElement = (tag) => {\n    return tagPrefixes.some(pref => tag.startsWith(pref));\n};\nexport { ignoreCustomElements, shouldIgnoreCustomElement, };\n//# sourceMappingURL=IgnoreCustomElements.js.map","const observers = new WeakMap();\n/**\n * @param node\n * @param callback\n * @param options\n */\nconst observeDOMNode = (node, callback, options) => {\n    const observer = new MutationObserver(callback);\n    observers.set(node, observer);\n    observer.observe(node, options);\n};\n/**\n * @param node\n */\nconst unobserveDOMNode = (node) => {\n    const observer = observers.get(node);\n    if (observer) {\n        observer.disconnect();\n        observers.delete(node);\n    }\n};\nexport { observeDOMNode, unobserveDOMNode, };\n//# sourceMappingURL=DOMObserver.js.map","import { getNoConflict as getConfiguredNoConflict } from \"../InitialConfiguration.js\";\n// Fire these events even with noConflict: true\nconst excludeList = [\n    \"value-changed\",\n    \"click\",\n];\nlet noConflict;\nconst shouldFireOriginalEvent = (eventName) => {\n    return excludeList.includes(eventName);\n};\nconst shouldNotFireOriginalEvent = (eventName) => {\n    const nc = getNoConflict();\n    // return !(nc.events && nc.events.includes && nc.events.includes(eventName));\n    return !(typeof nc !== \"boolean\" && nc.events && nc.events.includes && nc.events.includes(eventName));\n};\n/**\n * Returns if the \"noConflict\" configuration is set.\n * @public\n * @returns { NoConflictData }\n */\nconst getNoConflict = () => {\n    if (noConflict === undefined) {\n        noConflict = getConfiguredNoConflict();\n    }\n    return noConflict;\n};\n/**\n * Sets the \"noConflict\" mode.\n * - When \"false\" (default value), all custom events are fired with and without the \"ui5-\" prefix.\n * - When \"true\", all custom events are fired with the \"ui5-\" prefix only.\n * - When an object is supplied, just the specified events will be fired with the \"ui5-\" prefix.\n * @public\n * @param { NoConflictData } noConflictData\n */\nconst setNoConflict = (noConflictData) => {\n    noConflict = noConflictData;\n};\nconst skipOriginalEvent = (eventName) => {\n    const nc = getNoConflict();\n    // Always fire these events\n    if (shouldFireOriginalEvent(eventName)) {\n        return false;\n    }\n    // Read from the configuration\n    if (nc === true) {\n        return true;\n    }\n    return !shouldNotFireOriginalEvent(eventName);\n};\nexport { getNoConflict, setNoConflict, skipOriginalEvent, };\n//# sourceMappingURL=NoConflict.js.map","// Note: disabled is present in IE so we explicitly allow it here.\n// Others, such as title/hidden, we explicitly override, so valid too\nconst allowList = [\n    \"disabled\",\n    \"title\",\n    \"hidden\",\n    \"role\",\n    \"draggable\",\n];\n/**\n * Checks whether a property name is valid (does not collide with existing DOM API properties)\n *\n * @param name\n * @returns {boolean}\n */\nconst isValidPropertyName = (name) => {\n    if (allowList.includes(name) || name.startsWith(\"aria\")) {\n        return true;\n    }\n    const classes = [\n        HTMLElement,\n        Element,\n        Node,\n    ];\n    return !classes.some(klass => klass.prototype.hasOwnProperty(name)); // eslint-disable-line\n};\nexport default isValidPropertyName;\n//# sourceMappingURL=isValidPropertyName.js.map","const arraysAreEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n};\nexport default arraysAreEqual;\n//# sourceMappingURL=arraysAreEqual.js.map","import { getCustomElementsScopingSuffix, shouldScopeCustomElement } from \"../CustomElementsScopeUtils.js\";\n/**\n * Runs a component's template with the component's current state, while also scoping HTML\n *\n * @param template - the template to execute\n * @param component - the component\n * @public\n */\nconst executeTemplate = (template, component) => {\n    const tagsToScope = getTagsToScope(component);\n    const scope = getCustomElementsScopingSuffix();\n    return template.call(component, component, tagsToScope, scope);\n};\n/**\n * Returns all tags, used inside component's template subject to scoping.\n * @param component - the component\n * @returns {Array[]}\n * @private\n */\nconst getTagsToScope = (component) => {\n    const ctor = component.constructor;\n    const componentTag = ctor.getMetadata().getPureTag();\n    const tagsToScope = ctor.getUniqueDependencies().map((dep) => dep.getMetadata().getPureTag()).filter(shouldScopeCustomElement);\n    if (shouldScopeCustomElement(componentTag)) {\n        tagsToScope.push(componentTag);\n    }\n    return tagsToScope;\n};\nexport default executeTemplate;\n//# sourceMappingURL=executeTemplate.js.map","import merge from \"./thirdparty/merge.js\";\nimport { boot } from \"./Boot.js\";\nimport UI5ElementMetadata from \"./UI5ElementMetadata.js\";\nimport EventProvider from \"./EventProvider.js\";\nimport getSingletonElementInstance from \"./util/getSingletonElementInstance.js\";\nimport StaticAreaItem from \"./StaticAreaItem.js\";\nimport updateShadowRoot from \"./updateShadowRoot.js\";\nimport { shouldIgnoreCustomElement } from \"./IgnoreCustomElements.js\";\nimport { renderDeferred, renderImmediately, cancelRender } from \"./Render.js\";\nimport { registerTag, isTagRegistered, recordTagRegistrationFailure } from \"./CustomElementsRegistry.js\";\nimport { observeDOMNode, unobserveDOMNode } from \"./DOMObserver.js\";\nimport { skipOriginalEvent } from \"./config/NoConflict.js\";\nimport getEffectiveDir from \"./locale/getEffectiveDir.js\";\nimport { kebabToCamelCase, camelToKebabCase } from \"./util/StringHelper.js\";\nimport isValidPropertyName from \"./util/isValidPropertyName.js\";\nimport { getSlotName, getSlottedNodesList } from \"./util/SlotsHelper.js\";\nimport arraysAreEqual from \"./util/arraysAreEqual.js\";\nimport { markAsRtlAware } from \"./locale/RTLAwareRegistry.js\";\nimport preloadLinks from \"./theming/preloadLinks.js\";\nimport executeTemplate from \"./renderer/executeTemplate.js\";\nlet autoId = 0;\nconst elementTimeouts = new Map();\nconst uniqueDependenciesCache = new Map();\n/**\n * Triggers re-rendering of a UI5Element instance due to state change.\n * @param {ChangeInfo} changeInfo An object with information about the change that caused invalidation.\n * @private\n */\nfunction _invalidate(changeInfo) {\n    // Invalidation should be suppressed: 1) before the component is rendered for the first time 2) and during the execution of onBeforeRendering\n    // This is necessary not only as an optimization, but also to avoid infinite loops on invalidation between children and parents (when invalidateOnChildChange is used)\n    if (this._suppressInvalidation) {\n        return;\n    }\n    // Call the onInvalidation hook\n    this.onInvalidation(changeInfo);\n    this._changedState.push(changeInfo);\n    renderDeferred(this);\n    this._eventProvider.fireEvent(\"invalidate\", { ...changeInfo, target: this });\n}\n/**\n * Base class for all UI5 Web Components\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.base.UI5Element\n * @extends HTMLElement\n * @public\n */\nclass UI5Element extends HTMLElement {\n    constructor() {\n        super();\n        const ctor = this.constructor;\n        this._changedState = []; // Filled on each invalidation, cleared on re-render (used for debugging)\n        this._suppressInvalidation = true; // A flag telling whether all invalidations should be ignored. Initialized with \"true\" because a UI5Element can not be invalidated until it is rendered for the first time\n        this._inDOM = false; // A flag telling whether the UI5Element is currently in the DOM tree of the document or not\n        this._fullyConnected = false; // A flag telling whether the UI5Element's onEnterDOM hook was called (since it's possible to have the element removed from DOM before that)\n        this._childChangeListeners = new Map(); // used to store lazy listeners per slot for the child change event of every child inside that slot\n        this._slotChangeListeners = new Map(); // used to store lazy listeners per slot for the slotchange event of all slot children inside that slot\n        this._eventProvider = new EventProvider(); // used by parent components for listening to changes to child components\n        let deferredResolve;\n        this._domRefReadyPromise = new Promise(resolve => {\n            deferredResolve = resolve;\n        });\n        this._domRefReadyPromise._deferredResolve = deferredResolve;\n        this._doNotSyncAttributes = new Set(); // attributes that are excluded from attributeChangedCallback synchronization\n        this._state = { ...ctor.getMetadata().getInitialState() };\n        this._upgradeAllProperties();\n        if (ctor._needsShadowDOM()) {\n            this.attachShadow({ mode: \"open\" });\n        }\n    }\n    /**\n     * Returns a unique ID for this UI5 Element\n     *\n     * @deprecated - This property is not guaranteed in future releases\n     * @protected\n     */\n    get _id() {\n        if (!this.__id) {\n            this.__id = `ui5wc_${++autoId}`;\n        }\n        return this.__id;\n    }\n    render() {\n        const template = this.constructor.template;\n        return executeTemplate(template, this);\n    }\n    renderStatic() {\n        const template = this.constructor.staticAreaTemplate;\n        return executeTemplate(template, this);\n    }\n    /**\n     * Do not call this method from derivatives of UI5Element, use \"onEnterDOM\" only\n     * @private\n     */\n    async connectedCallback() {\n        const ctor = this.constructor;\n        this.setAttribute(ctor.getMetadata().getPureTag(), \"\");\n        if (ctor.getMetadata().supportsF6FastNavigation()) {\n            this.setAttribute(\"data-sap-ui-fastnavgroup\", \"true\");\n        }\n        const slotsAreManaged = ctor.getMetadata().slotsAreManaged();\n        this._inDOM = true;\n        if (slotsAreManaged) {\n            // always register the observer before yielding control to the main thread (await)\n            this._startObservingDOMChildren();\n            await this._processChildren();\n        }\n        if (!this._inDOM) { // Component removed from DOM while _processChildren was running\n            return;\n        }\n        renderImmediately(this);\n        this._domRefReadyPromise._deferredResolve();\n        this._fullyConnected = true;\n        this.onEnterDOM();\n    }\n    /**\n     * Do not call this method from derivatives of UI5Element, use \"onExitDOM\" only\n     * @private\n     */\n    disconnectedCallback() {\n        const ctor = this.constructor;\n        const slotsAreManaged = ctor.getMetadata().slotsAreManaged();\n        this._inDOM = false;\n        if (slotsAreManaged) {\n            this._stopObservingDOMChildren();\n        }\n        if (this._fullyConnected) {\n            this.onExitDOM();\n            this._fullyConnected = false;\n        }\n        if (this.staticAreaItem && this.staticAreaItem.parentElement) {\n            this.staticAreaItem.parentElement.removeChild(this.staticAreaItem);\n        }\n        cancelRender(this);\n    }\n    /**\n     * Called every time before the component renders.\n     * @public\n     */\n    onBeforeRendering() { }\n    /**\n     * Called every time after the component renders.\n     * @public\n     */\n    onAfterRendering() { }\n    /**\n     * Called on connectedCallback - added to the DOM.\n     * @public\n     */\n    onEnterDOM() { }\n    /**\n     * Called on disconnectedCallback - removed from the DOM.\n     * @public\n     */\n    onExitDOM() { }\n    /**\n     * @private\n     */\n    _startObservingDOMChildren() {\n        const ctor = this.constructor;\n        const shouldObserveChildren = ctor.getMetadata().hasSlots();\n        if (!shouldObserveChildren) {\n            return;\n        }\n        const canSlotText = ctor.getMetadata().canSlotText();\n        const mutationObserverOptions = {\n            childList: true,\n            subtree: canSlotText,\n            characterData: canSlotText,\n        };\n        observeDOMNode(this, this._processChildren.bind(this), mutationObserverOptions);\n    }\n    /**\n     * @private\n     */\n    _stopObservingDOMChildren() {\n        unobserveDOMNode(this);\n    }\n    /**\n     * Note: this method is also manually called by \"compatibility/patchNodeValue.js\"\n     * @private\n     */\n    async _processChildren() {\n        const hasSlots = this.constructor.getMetadata().hasSlots();\n        if (hasSlots) {\n            await this._updateSlots();\n        }\n    }\n    /**\n     * @private\n     */\n    async _updateSlots() {\n        const ctor = this.constructor;\n        const slotsMap = ctor.getMetadata().getSlots();\n        const canSlotText = ctor.getMetadata().canSlotText();\n        const domChildren = Array.from(canSlotText ? this.childNodes : this.children);\n        const slotsCachedContentMap = new Map(); // Store here the content of each slot before the mutation occurred\n        const propertyNameToSlotMap = new Map(); // Used for reverse lookup to determine to which slot the property name corresponds\n        // Init the _state object based on the supported slots and store the previous values\n        for (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line\n            const propertyName = slotData.propertyName || slotName;\n            propertyNameToSlotMap.set(propertyName, slotName);\n            slotsCachedContentMap.set(propertyName, [...this._state[propertyName]]);\n            this._clearSlot(slotName, slotData);\n        }\n        const autoIncrementMap = new Map();\n        const slottedChildrenMap = new Map();\n        const allChildrenUpgraded = domChildren.map(async (child, idx) => {\n            // Determine the type of the child (mainly by the slot attribute)\n            const slotName = getSlotName(child);\n            const slotData = slotsMap[slotName];\n            // Check if the slotName is supported\n            if (slotData === undefined) {\n                if (slotName !== \"default\") {\n                    const validValues = Object.keys(slotsMap).join(\", \");\n                    console.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`); // eslint-disable-line\n                }\n                return;\n            }\n            // For children that need individual slots, calculate them\n            if (slotData.individualSlots) {\n                const nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;\n                autoIncrementMap.set(slotName, nextIndex);\n                child._individualSlot = `${slotName}-${nextIndex}`;\n            }\n            // Await for not-yet-defined custom elements\n            if (child instanceof HTMLElement) {\n                const localName = child.localName;\n                const shouldWaitForCustomElement = localName.includes(\"-\") && !shouldIgnoreCustomElement(localName);\n                if (shouldWaitForCustomElement) {\n                    const isDefined = window.customElements.get(localName);\n                    if (!isDefined) {\n                        const whenDefinedPromise = window.customElements.whenDefined(localName); // Class registered, but instances not upgraded yet\n                        let timeoutPromise = elementTimeouts.get(localName);\n                        if (!timeoutPromise) {\n                            timeoutPromise = new Promise(resolve => setTimeout(resolve, 1000));\n                            elementTimeouts.set(localName, timeoutPromise);\n                        }\n                        await Promise.race([whenDefinedPromise, timeoutPromise]);\n                    }\n                    window.customElements.upgrade(child);\n                }\n            }\n            child = ctor.getMetadata().constructor.validateSlotValue(child, slotData);\n            // Listen for any invalidation on the child if invalidateOnChildChange is true or an object (ignore when false or not set)\n            if (instanceOfUI5Element(child) && slotData.invalidateOnChildChange) {\n                const childChangeListener = this._getChildChangeListener(slotName);\n                if (childChangeListener) {\n                    child.attachInvalidate.call(child, childChangeListener);\n                }\n            }\n            // Listen for the slotchange event if the child is a slot itself\n            if (child instanceof HTMLSlotElement) {\n                this._attachSlotChange(child, slotName);\n            }\n            const propertyName = slotData.propertyName || slotName;\n            if (slottedChildrenMap.has(propertyName)) {\n                slottedChildrenMap.get(propertyName).push({ child, idx });\n            }\n            else {\n                slottedChildrenMap.set(propertyName, [{ child, idx }]);\n            }\n        });\n        await Promise.all(allChildrenUpgraded);\n        // Distribute the child in the _state object, keeping the Light DOM order,\n        // not the order elements are defined.\n        slottedChildrenMap.forEach((children, propertyName) => {\n            this._state[propertyName] = children.sort((a, b) => a.idx - b.idx).map(_ => _.child);\n        });\n        // Compare the content of each slot with the cached values and invalidate for the ones that changed\n        let invalidated = false;\n        for (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line\n            const propertyName = slotData.propertyName || slotName;\n            if (!arraysAreEqual(slotsCachedContentMap.get(propertyName), this._state[propertyName])) {\n                _invalidate.call(this, {\n                    type: \"slot\",\n                    name: propertyNameToSlotMap.get(propertyName),\n                    reason: \"children\",\n                });\n                invalidated = true;\n            }\n        }\n        // If none of the slots had an invalidation due to changes to immediate children,\n        // the change is considered to be text content of the default slot\n        if (!invalidated) {\n            _invalidate.call(this, {\n                type: \"slot\",\n                name: \"default\",\n                reason: \"textcontent\",\n            });\n        }\n    }\n    /**\n     * Removes all children from the slot and detaches listeners, if any\n     * @private\n     */\n    _clearSlot(slotName, slotData) {\n        const propertyName = slotData.propertyName || slotName;\n        const children = this._state[propertyName];\n        children.forEach(child => {\n            if (instanceOfUI5Element(child)) {\n                const childChangeListener = this._getChildChangeListener(slotName);\n                if (childChangeListener) {\n                    child.detachInvalidate.call(child, childChangeListener);\n                }\n            }\n            if (child instanceof HTMLSlotElement) {\n                this._detachSlotChange(child, slotName);\n            }\n        });\n        this._state[propertyName] = [];\n    }\n    /**\n     * Attach a callback that will be executed whenever the component is invalidated\n     *\n     * @param {InvalidationInfo} callback\n     * @public\n     */\n    attachInvalidate(callback) {\n        this._eventProvider.attachEvent(\"invalidate\", callback);\n    }\n    /**\n     * Detach the callback that is executed whenever the component is invalidated\n     *\n     * @param {InvalidationInfo} callback\n     * @public\n     */\n    detachInvalidate(callback) {\n        this._eventProvider.detachEvent(\"invalidate\", callback);\n    }\n    /**\n     * Callback that is executed whenever a monitored child changes its state\n     *\n     * @param {sting} slotName the slot in which a child was invalidated\n     * @param { ChangeInfo } childChangeInfo the changeInfo object for the child in the given slot\n     * @private\n     */\n    _onChildChange(slotName, childChangeInfo) {\n        if (!this.constructor.getMetadata().shouldInvalidateOnChildChange(slotName, childChangeInfo.type, childChangeInfo.name)) {\n            return;\n        }\n        // The component should be invalidated as this type of change on the child is listened for\n        // However, no matter what changed on the child (property/slot), the invalidation is registered as \"type=slot\" for the component itself\n        _invalidate.call(this, {\n            type: \"slot\",\n            name: slotName,\n            reason: \"childchange\",\n            child: childChangeInfo.target,\n        });\n    }\n    /**\n     * Do not override this method in derivatives of UI5Element\n     * @private\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        let newPropertyValue;\n        if (this._doNotSyncAttributes.has(name)) { // This attribute is mutated internally, not by the user\n            return;\n        }\n        const properties = this.constructor.getMetadata().getProperties();\n        const realName = name.replace(/^ui5-/, \"\");\n        const nameInCamelCase = kebabToCamelCase(realName);\n        if (properties.hasOwnProperty(nameInCamelCase)) { // eslint-disable-line\n            const propData = properties[nameInCamelCase];\n            const propertyType = propData.type;\n            let propertyValidator = propData.validator;\n            if (propertyType && propertyType.isDataTypeClass) {\n                propertyValidator = propertyType;\n            }\n            if (propertyValidator) {\n                newPropertyValue = propertyValidator.attributeToProperty(newValue);\n            }\n            else if (propertyType === Boolean) {\n                newPropertyValue = newValue !== null;\n            }\n            else {\n                newPropertyValue = newValue;\n            }\n            this[nameInCamelCase] = newPropertyValue;\n        }\n    }\n    /**\n     * @private\n     */\n    _updateAttribute(name, newValue) {\n        const ctor = this.constructor;\n        if (!ctor.getMetadata().hasAttribute(name)) {\n            return;\n        }\n        const properties = ctor.getMetadata().getProperties();\n        const propData = properties[name];\n        const propertyType = propData.type;\n        let propertyValidator = propData.validator;\n        const attrName = camelToKebabCase(name);\n        const attrValue = this.getAttribute(attrName);\n        if (propertyType && propertyType.isDataTypeClass) {\n            propertyValidator = propertyType;\n        }\n        if (propertyValidator) {\n            const newAttrValue = propertyValidator.propertyToAttribute(newValue);\n            if (newAttrValue === null) { // null means there must be no attribute for the current value of the property\n                this._doNotSyncAttributes.add(attrName); // skip the attributeChangedCallback call for this attribute\n                this.removeAttribute(attrName); // remove the attribute safely (will not trigger synchronization to the property value due to the above line)\n                this._doNotSyncAttributes.delete(attrName); // enable synchronization again for this attribute\n            }\n            else {\n                this.setAttribute(attrName, newAttrValue);\n            }\n        }\n        else if (propertyType === Boolean) {\n            if (newValue === true && attrValue === null) {\n                this.setAttribute(attrName, \"\");\n            }\n            else if (newValue === false && attrValue !== null) {\n                this.removeAttribute(attrName);\n            }\n        }\n        else if (typeof newValue !== \"object\") {\n            if (attrValue !== newValue) {\n                this.setAttribute(attrName, newValue);\n            }\n        } // else { return; } // old object handling\n    }\n    /**\n     * @private\n     */\n    _upgradeProperty(propertyName) {\n        if (this.hasOwnProperty(propertyName)) { // eslint-disable-line\n            const value = this[propertyName];\n            delete this[propertyName];\n            this[propertyName] = value;\n        }\n    }\n    /**\n     * @private\n     */\n    _upgradeAllProperties() {\n        const allProps = this.constructor.getMetadata().getPropertiesList();\n        allProps.forEach(this._upgradeProperty.bind(this));\n    }\n    /**\n     * Returns a singleton event listener for the \"change\" event of a child in a given slot\n     *\n     * @param slotName the name of the slot, where the child is\n     * @returns {ChildChangeListener}\n     * @private\n     */\n    _getChildChangeListener(slotName) {\n        if (!this._childChangeListeners.has(slotName)) {\n            this._childChangeListeners.set(slotName, this._onChildChange.bind(this, slotName));\n        }\n        return this._childChangeListeners.get(slotName);\n    }\n    /**\n     * Returns a singleton slotchange event listener that invalidates the component due to changes in the given slot\n     *\n     * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is\n     * @returns {SlotChangeListener}\n     * @private\n     */\n    _getSlotChangeListener(slotName) {\n        if (!this._slotChangeListeners.has(slotName)) {\n            this._slotChangeListeners.set(slotName, this._onSlotChange.bind(this, slotName));\n        }\n        return this._slotChangeListeners.get(slotName);\n    }\n    /**\n     * @private\n     */\n    _attachSlotChange(child, slotName) {\n        const slotChangeListener = this._getSlotChangeListener(slotName);\n        if (slotChangeListener) {\n            child.addEventListener(\"slotchange\", slotChangeListener);\n        }\n    }\n    /**\n     * @private\n     */\n    _detachSlotChange(child, slotName) {\n        child.removeEventListener(\"slotchange\", this._getSlotChangeListener(slotName));\n    }\n    /**\n     * Whenever a slot element is slotted inside a UI5 Web Component, its slotchange event invalidates the component\n     *\n     * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is\n     * @private\n     */\n    _onSlotChange(slotName) {\n        _invalidate.call(this, {\n            type: \"slot\",\n            name: slotName,\n            reason: \"slotchange\",\n        });\n    }\n    /**\n     * A callback that is executed each time an already rendered component is invalidated (scheduled for re-rendering)\n     *\n     * @param  changeInfo An object with information about the change that caused invalidation.\n     * The object can have the following properties:\n     *  - type: (property|slot) tells what caused the invalidation\n     *   1) property: a property value was changed either directly or as a result of changing the corresponding attribute\n     *   2) slot: a slotted node(nodes) changed in one of several ways (see \"reason\")\n     *\n     *  - name: the name of the property or slot that caused the invalidation\n     *\n     *  - reason: (children|textcontent|childchange|slotchange) relevant only for type=\"slot\" only and tells exactly what changed in the slot\n     *   1) children: immediate children (HTML elements or text nodes) were added, removed or reordered in the slot\n     *   2) textcontent: text nodes in the slot changed value (or nested text nodes were added or changed value). Can only trigger for slots of \"type: Node\"\n     *   3) slotchange: a slot element, slotted inside that slot had its \"slotchange\" event listener called. This practically means that transitively slotted children changed.\n     *      Can only trigger if the child of a slot is a slot element itself.\n     *   4) childchange: indicates that a UI5Element child in that slot was invalidated and in turn invalidated the component.\n     *      Can only trigger for slots with \"invalidateOnChildChange\" metadata descriptor\n     *\n     *  - newValue: the new value of the property (for type=\"property\" only)\n     *\n     *  - oldValue: the old value of the property (for type=\"property\" only)\n     *\n     *  - child the child that was changed (for type=\"slot\" and reason=\"childchange\" only)\n     *\n     * @public\n     */\n    onInvalidation(changeInfo) { } // eslint-disable-line\n    /**\n     * Do not call this method directly, only intended to be called by js\n     * @protected\n     */\n    _render() {\n        const ctor = this.constructor;\n        const hasIndividualSlots = ctor.getMetadata().hasIndividualSlots();\n        // suppress invalidation to prevent state changes scheduling another rendering\n        this._suppressInvalidation = true;\n        this.onBeforeRendering();\n        // Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered\n        if (this._onComponentStateFinalized) {\n            this._onComponentStateFinalized();\n        }\n        // resume normal invalidation handling\n        this._suppressInvalidation = false;\n        // Update the shadow root with the render result\n        /*\n        if (this._changedState.length) {\n            let element = this.localName;\n            if (this.id) {\n                element = `${element}#${this.id}`;\n            }\n            console.log(\"Re-rendering:\", element, this._changedState.map(x => { // eslint-disable-line\n                let res = `${x.type}`;\n                if (x.reason) {\n                    res = `${res}(${x.reason})`;\n                }\n                res = `${res}: ${x.name}`;\n                if (x.type === \"property\") {\n                    res = `${res} ${JSON.stringify(x.oldValue)} => ${JSON.stringify(x.newValue)}`;\n                }\n\n                return res;\n            }));\n        }\n        */\n        this._changedState = [];\n        // Update shadow root and static area item\n        if (ctor._needsShadowDOM()) {\n            updateShadowRoot(this);\n        }\n        if (this.staticAreaItem) {\n            this.staticAreaItem.update();\n        }\n        // Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM\n        if (hasIndividualSlots) {\n            this._assignIndividualSlotsToChildren();\n        }\n        // Call the onAfterRendering hook\n        this.onAfterRendering();\n    }\n    /**\n     * @private\n     */\n    _assignIndividualSlotsToChildren() {\n        const domChildren = Array.from(this.children);\n        domChildren.forEach((child) => {\n            if (child._individualSlot) {\n                child.setAttribute(\"slot\", child._individualSlot);\n            }\n        });\n    }\n    /**\n     * @private\n     */\n    _waitForDomRef() {\n        return this._domRefReadyPromise;\n    }\n    /**\n     * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template\n     * *Note:* For logical (abstract) elements (items, options, etc...), returns the part of the parent's DOM that represents this option\n     * Use this method instead of \"this.shadowRoot\" to read the Shadow DOM, if ever necessary\n     *\n     * @public\n     */\n    getDomRef() {\n        // If a component set _getRealDomRef to its children, use the return value of this function\n        if (typeof this._getRealDomRef === \"function\") {\n            return this._getRealDomRef();\n        }\n        if (!this.shadowRoot || this.shadowRoot.children.length === 0) {\n            return;\n        }\n        const children = [...this.shadowRoot.children].filter(child => ![\"link\", \"style\"].includes(child.localName));\n        if (children.length !== 1) {\n            console.warn(`The shadow DOM for ${this.constructor.getMetadata().getTag()} does not have a top level element, the getDomRef() method might not work as expected`); // eslint-disable-line\n        }\n        return children[0];\n    }\n    /**\n     * Returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n     * This is the element that will receive the focus by default.\n     * @public\n     */\n    getFocusDomRef() {\n        const domRef = this.getDomRef();\n        if (domRef) {\n            const focusRef = domRef.querySelector(\"[data-sap-focus-ref]\");\n            return focusRef || domRef;\n        }\n    }\n    /**\n     * Waits for dom ref and then returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n     * This is the element that will receive the focus by default.\n     * @public\n     */\n    async getFocusDomRefAsync() {\n        await this._waitForDomRef();\n        return this.getFocusDomRef();\n    }\n    /**\n     * Set the focus to the element, returned by \"getFocusDomRef()\" (marked by \"data-sap-focus-ref\")\n     * @param {FocusOptions} focusOptions additional options for the focus\n     * @public\n     */\n    async focus(focusOptions) {\n        await this._waitForDomRef();\n        const focusDomRef = this.getFocusDomRef();\n        if (focusDomRef && typeof focusDomRef.focus === \"function\") {\n            focusDomRef.focus(focusOptions);\n        }\n    }\n    /**\n     *\n     * @public\n     * @param name - name of the event\n     * @param data - additional data for the event\n     * @param cancelable - true, if the user can call preventDefault on the event object\n     * @param bubbles - true, if the event bubbles\n     * @returns {boolean} false, if the event was cancelled (preventDefault called), true otherwise\n     */\n    fireEvent(name, data, cancelable = false, bubbles = true) {\n        const eventResult = this._fireEvent(name, data, cancelable, bubbles);\n        const camelCaseEventName = kebabToCamelCase(name);\n        if (camelCaseEventName !== name) {\n            return eventResult && this._fireEvent(camelCaseEventName, data, cancelable, bubbles);\n        }\n        return eventResult;\n    }\n    _fireEvent(name, data, cancelable = false, bubbles = true) {\n        const noConflictEvent = new CustomEvent(`ui5-${name}`, {\n            detail: data,\n            composed: false,\n            bubbles,\n            cancelable,\n        });\n        // This will be false if the no-conflict event is prevented\n        const noConflictEventResult = this.dispatchEvent(noConflictEvent);\n        if (skipOriginalEvent(name)) {\n            return noConflictEventResult;\n        }\n        const normalEvent = new CustomEvent(name, {\n            detail: data,\n            composed: false,\n            bubbles,\n            cancelable,\n        });\n        // This will be false if the normal event is prevented\n        const normalEventResult = this.dispatchEvent(normalEvent);\n        // Return false if any of the two events was prevented (its result was false).\n        return normalEventResult && noConflictEventResult;\n    }\n    /**\n     * Returns the actual children, associated with a slot.\n     * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.\n     * @public\n     */\n    getSlottedNodes(slotName) {\n        return getSlottedNodesList(this[slotName]);\n    }\n    /**\n     * Determines whether the component should be rendered in RTL mode or not.\n     * Returns: \"rtl\", \"ltr\" or undefined\n     *\n     * @public\n     * @returns {String|undefined}\n     */\n    get effectiveDir() {\n        markAsRtlAware(this.constructor); // if a UI5 Element calls this method, it's considered to be rtl-aware\n        return getEffectiveDir(this);\n    }\n    /**\n     * Used to duck-type UI5 elements without using instanceof\n     * @returns {boolean}\n     * @public\n     */\n    get isUI5Element() {\n        return true;\n    }\n    get classes() {\n        return {};\n    }\n    /**\n     * Do not override this method in derivatives of UI5Element, use metadata properties instead\n     * @private\n     */\n    static get observedAttributes() {\n        return this.getMetadata().getAttributesList();\n    }\n    /**\n     * @private\n     */\n    static _needsShadowDOM() {\n        return !!this.template || Object.prototype.hasOwnProperty.call(this.prototype, \"render\");\n    }\n    /**\n     * @private\n     */\n    static _needsStaticArea() {\n        return !!this.staticAreaTemplate || Object.prototype.hasOwnProperty.call(this.prototype, \"renderStatic\");\n    }\n    /**\n     * @public\n     */\n    getStaticAreaItemDomRef() {\n        if (!this.constructor._needsStaticArea()) {\n            throw new Error(\"This component does not use the static area\");\n        }\n        if (!this.staticAreaItem) {\n            this.staticAreaItem = StaticAreaItem.createInstance();\n            this.staticAreaItem.setOwnerElement(this);\n        }\n        if (!this.staticAreaItem.parentElement) {\n            getSingletonElementInstance(\"ui5-static-area\").appendChild(this.staticAreaItem);\n        }\n        return this.staticAreaItem.getDomRef();\n    }\n    /**\n     * @private\n     */\n    static _generateAccessors() {\n        const proto = this.prototype;\n        const slotsAreManaged = this.getMetadata().slotsAreManaged();\n        // Properties\n        const properties = this.getMetadata().getProperties();\n        for (const [prop, propData] of Object.entries(properties)) { // eslint-disable-line\n            if (!isValidPropertyName(prop)) {\n                console.warn(`\"${prop}\" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */\n            }\n            if (propData.type === Boolean && propData.defaultValue) {\n                throw new Error(`Cannot set a default value for property \"${prop}\". All booleans are false by default.`);\n            }\n            if (propData.type === Array) {\n                throw new Error(`Wrong type for property \"${prop}\". Properties cannot be of type Array - use \"multiple: true\" and set \"type\" to the single value type, such as \"String\", \"Object\", etc...`);\n            }\n            if (propData.type === Object && propData.defaultValue) {\n                throw new Error(`Cannot set a default value for property \"${prop}\". All properties of type \"Object\" are empty objects by default.`);\n            }\n            if (propData.multiple && propData.defaultValue) {\n                throw new Error(`Cannot set a default value for property \"${prop}\". All multiple properties are empty arrays by default.`);\n            }\n            Object.defineProperty(proto, prop, {\n                get() {\n                    if (this._state[prop] !== undefined) {\n                        return this._state[prop];\n                    }\n                    const propDefaultValue = propData.defaultValue;\n                    if (propData.type === Boolean) {\n                        return false;\n                    }\n                    else if (propData.type === String) { // eslint-disable-line\n                        return propDefaultValue;\n                    }\n                    else if (propData.multiple) { // eslint-disable-line\n                        return [];\n                    }\n                    else {\n                        return propDefaultValue;\n                    }\n                },\n                set(value) {\n                    let isDifferent;\n                    const ctor = this.constructor;\n                    const metadataCtor = ctor.getMetadata().constructor;\n                    value = metadataCtor.validatePropertyValue(value, propData);\n                    const propertyType = propData.type;\n                    let propertyValidator = propData.validator;\n                    const oldState = this._state[prop];\n                    if (propertyType && propertyType.isDataTypeClass) {\n                        propertyValidator = propertyType;\n                    }\n                    if (propertyValidator) {\n                        isDifferent = !propertyValidator.valuesAreEqual(oldState, value);\n                    }\n                    else if (Array.isArray(oldState) && Array.isArray(value) && propData.multiple && propData.compareValues) { // compareValues is added for IE, test if needed now\n                        isDifferent = !arraysAreEqual(oldState, value);\n                    }\n                    else {\n                        isDifferent = oldState !== value;\n                    }\n                    if (isDifferent) {\n                        this._state[prop] = value;\n                        _invalidate.call(this, {\n                            type: \"property\",\n                            name: prop,\n                            newValue: value,\n                            oldValue: oldState,\n                        });\n                        this._updateAttribute(prop, value);\n                    }\n                },\n            });\n        }\n        // Slots\n        if (slotsAreManaged) {\n            const slots = this.getMetadata().getSlots();\n            for (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n                if (!isValidPropertyName(slotName)) {\n                    console.warn(`\"${slotName}\" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */\n                }\n                const propertyName = slotData.propertyName || slotName;\n                Object.defineProperty(proto, propertyName, {\n                    get() {\n                        if (this._state[propertyName] !== undefined) {\n                            return this._state[propertyName];\n                        }\n                        return [];\n                    },\n                    set() {\n                        throw new Error(\"Cannot set slot content directly, use the DOM APIs (appendChild, removeChild, etc...)\");\n                    },\n                });\n            }\n        }\n    }\n    /**\n     * Returns the CSS for this UI5 Web Component Class\n     * @protected\n     */\n    static get styles() {\n        return \"\";\n    }\n    /**\n     * Returns the Static Area CSS for this UI5 Web Component Class\n     * @protected\n     */\n    static get staticAreaStyles() {\n        return \"\";\n    }\n    /**\n     * Returns an array with the dependencies for this UI5 Web Component, which could be:\n     *  - composed components (used in its shadow root or static area item)\n     *  - slotted components that the component may need to communicate with\n     *\n     * @protected\n     */\n    static get dependencies() {\n        return [];\n    }\n    /**\n     * Returns a list of the unique dependencies for this UI5 Web Component\n     *\n     * @public\n     */\n    static getUniqueDependencies() {\n        if (!uniqueDependenciesCache.has(this)) {\n            const filtered = this.dependencies.filter((dep, index, deps) => deps.indexOf(dep) === index);\n            uniqueDependenciesCache.set(this, filtered);\n        }\n        return uniqueDependenciesCache.get(this) || [];\n    }\n    /**\n     * Returns a promise that resolves whenever all dependencies for this UI5 Web Component have resolved\n     *\n     * @returns {Promise}\n     */\n    static whenDependenciesDefined() {\n        return Promise.all(this.getUniqueDependencies().map(dep => dep.define()));\n    }\n    /**\n     * Hook that will be called upon custom element definition\n     *\n     * @protected\n     * @returns {Promise<void>}\n     */\n    static async onDefine() {\n        return Promise.resolve();\n    }\n    /**\n     * Registers a UI5 Web Component in the browser window object\n     * @public\n     * @returns {Promise<UI5Element>}\n     */\n    static async define() {\n        await boot();\n        await Promise.all([\n            this.whenDependenciesDefined(),\n            this.onDefine(),\n        ]);\n        const tag = this.getMetadata().getTag();\n        const definedLocally = isTagRegistered(tag);\n        const definedGlobally = window.customElements.get(tag);\n        if (definedGlobally && !definedLocally) {\n            recordTagRegistrationFailure(tag);\n        }\n        else if (!definedGlobally) {\n            this._generateAccessors();\n            registerTag(tag);\n            window.customElements.define(tag, this);\n            preloadLinks(this);\n        }\n        return this;\n    }\n    /**\n     * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')\n     * Note: not to be confused with the \"get metadata()\" method, which returns an object for this class's metadata only\n     * @public\n     * @returns {UI5ElementMetadata}\n     */\n    static getMetadata() {\n        if (this.hasOwnProperty(\"_metadata\")) { // eslint-disable-line\n            return this._metadata;\n        }\n        const metadataObjects = [this.metadata];\n        let klass = this; // eslint-disable-line\n        while (klass !== UI5Element) {\n            klass = Object.getPrototypeOf(klass);\n            metadataObjects.unshift(klass.metadata);\n        }\n        const mergedMetadata = merge({}, ...metadataObjects);\n        this._metadata = new UI5ElementMetadata(mergedMetadata);\n        return this._metadata;\n    }\n}\n/**\n * Returns the metadata object for this UI5 Web Component Class\n * @protected\n */\nUI5Element.metadata = {};\n/**\n * Always use duck-typing to cover all runtimes on the page.\n * @returns {boolean}\n */\nconst instanceOfUI5Element = (object) => {\n    return \"isUI5Element\" in object;\n};\nexport default UI5Element;\nexport { instanceOfUI5Element };\n//# sourceMappingURL=UI5Element.js.map"],"names":["isSSR","internals","windowsVersion","webkitVersion","tablet","isWindows8OrAbove","matches","isWebkit537OrAbove","detectTablet","densityFactor","supportsTouch","isSafari","isChrome","isFirefox","isTablet","isPhone","isDesktop","isCombi","isIOS","isMac","isAndroid","eventProvider","EventProvider","THEME_REGISTERED","attachThemeRegistered","listener","fireThemeRegistered","theme","themeStyles","loaders","registeredPackages","registeredThemes","registerThemePropertiesLoader","packageName","themeName","loader","getThemeProperties","style","regThemesStr","DEFAULT_THEME","_getThemeProperties","data","error","themeProps","getRegisteredPackages","isThemeRegistered","createStyleInHead","cssText","attributes","pair","createLinkInHead","href","link","resolve","getStyleId","name","value","shouldUpdate","runtimeIndex","compareRuntimes","getCurrentRuntimeIndex","createStyle","content","currentRuntimeIndex","stylesheet","updateStyle","sh","stylesheetRuntimeIndex","styleRuntimeIndex","hasStyle","removeStyle","styleElement","_a","createOrUpdateStyle","warnings","getThemeMetadata","el","metadata","parseThemeMetadata","metadataString","params","paramsString","processThemeMetadata","baseThemeName","getThemeDesignerTheme","THEME_LOADED","attachThemeLoaded","detachThemeLoaded","fireThemeLoaded","currThemeRoot","getThemeRoot","getConfiguredThemeRoot","formatThemeLink","attachCustomThemeStylesToHead","BASE_THEME_PACKAGE","isThemeBaseRegistered","loadThemeBase","cssData","deleteThemeBase","loadComponentPackages","packagesStylesPromises","detectExternalTheme","extTheme","openUI5Support","getFeature","applyTheme","packagesTheme","curTheme","getTheme","getConfiguredTheme","setTheme","reRenderAllUI5Elements","isLegacyThemeFamily","currentTheme","isKnownTheme","_b","SUPPORTED_THEMES","getEventProvider","getSharedResource","CUSTOM_CSS_CHANGE","attachCustomCSSChange","fireCustomCSSChange","tag","getCustomCSSFor","skipRerender","addCustomCSS","css","customCSSFor","getCustomCSS","getDesigntimePropertyAsArray","m","M_ISO639_OLD_TO_NEW","A_RTL_LOCALES","impliesRTL","language","getRTL","configurationRTL","getConfiguredRTL","getLanguage","detectNavigatorLanguage","whenDOMReady","styleData","insertFontFace","insertMainFontFace","insertOverrideFontFace","fontFaceCSS","overrideFontFaceCSS","insertSystemCSSVars","systemCSSVars","booted","bootPromise","attachBoot","boot","bootExecutor","onThemeRegistered","registerCurrentRuntime","isOpenUI5Loaded","f6Navigation","kebabToCamelMap","camelToKebabMap","kebabToCamelCase","string","result","toCamelCase","camelToKebabCase","parts","index","getSlotName","node","slot","match","getSlottedNodes","item","getSlottedNodesList","nodeList","acc","curr","UI5ElementMetadata","initialState","slotsAreManaged","props","propName","propType","propDefaultValue","slots","slotName","slotData","propertyName","propData","propValue","validateSingleProperty","validateSingleSlot","pureTag","suffix","getEffectiveScopingSuffixForTag","defaultSlot","type","config","propertyType","propertyValidator","StaticArea","MAX_DEPTH_INHERITED_CLASSES","getStylesString","styles","effectiveStyleMap","getEffectiveStyle","ElementClass","forStaticArea","key","openUI5Enablement","effectiveStyle","busyIndicatorStyles","customStyle","constructableStyleMap","getConstructableStyle","styleContent","updateShadowRoot","element","styleStrOrHrefsArr","ctor","shadowRoot","renderResult","GLOBAL_CONTENT_DENSITY_CSS_VAR","getEffectiveContentDensity","GLOBAL_DIR_CSS_VAR","getEffectiveDir","doc","dirValues","locallyAppliedDir","pureTagName","popupIntegrationAttr","StaticAreaItem","ownerElement","dir","renderFinished","tagPrefixes","shouldIgnoreCustomElement","pref","observers","observeDOMNode","callback","options","observer","unobserveDOMNode","excludeList","noConflict","shouldFireOriginalEvent","eventName","shouldNotFireOriginalEvent","nc","getNoConflict","getConfiguredNoConflict","skipOriginalEvent","allowList","isValidPropertyName","klass","arraysAreEqual","arr1","arr2","i","executeTemplate","template","component","tagsToScope","getTagsToScope","scope","getCustomElementsScopingSuffix","componentTag","dep","shouldScopeCustomElement","autoId","elementTimeouts","uniqueDependenciesCache","_invalidate","changeInfo","renderDeferred","UI5Element","deferredResolve","renderImmediately","cancelRender","canSlotText","mutationObserverOptions","slotsMap","domChildren","slotsCachedContentMap","propertyNameToSlotMap","autoIncrementMap","slottedChildrenMap","allChildrenUpgraded","child","idx","validValues","nextIndex","localName","whenDefinedPromise","timeoutPromise","instanceOfUI5Element","childChangeListener","children","a","b","_","invalidated","childChangeInfo","oldValue","newValue","newPropertyValue","properties","realName","nameInCamelCase","attrName","attrValue","newAttrValue","slotChangeListener","hasIndividualSlots","domRef","focusOptions","focusDomRef","cancelable","bubbles","eventResult","camelCaseEventName","noConflictEvent","noConflictEventResult","normalEvent","markAsRtlAware","getSingletonElementInstance","proto","prop","isDifferent","oldState","filtered","deps","definedLocally","isTagRegistered","definedGlobally","recordTagRegistrationFailure","registerTag","metadataObjects","mergedMetadata","merge","object"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]}