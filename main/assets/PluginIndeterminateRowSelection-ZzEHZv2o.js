import{j as t}from"./jsx-runtime-DtaoT6pD.js";import{I as n}from"./DomRefTable.module-V_iz5pw3.js";import{M as p,C as a}from"./chunk-HLWAVYOI-Fsp-hxMS.js";import"./index-OjgoNOWw.js";import{F as s}from"./Footer-eFiH6U5V.js";import{M as l}from"./index-9Rd_IMLD.js";import{c}from"./AnalyticalTable.stories-e2zuVaOd.js";import{u as m}from"./index-RwE9nQVW.js";import"./react-jss.esm-AmlvxLhk.js";import"./index-qkhvCaCQ.js";import"./clsx-2Jv0kmJG.js";import"./i18n-defaults-iuWYBGeC.js";import"./i18nBundle-Q0g0h3jg.js";import"./VersionInfo-pP_ltRZs.js";import"./I18nContext-VUOpdMoH.js";import"./useIsomorphicLayoutEffect-s31TYDr7.js";import"./ThemingParameters-UghqSl-x.js";import"./addCustomCSSWithScoping-57oB5XHU.js";import"./UI5Element-66_7Xn_3.js";import"./CustomElementsScopeUtils-EW5YHFd4.js";import"./utils-QJOW-WwB.js";import"./index-74gTEkhE.js";import"./iframe-Lw9Evt3s.js";import"../sb-preview/runtime.js";import"./withWebComponent-2sjwM42G.js";import"./slot-HSrR9XJ-.js";import"./Icon-Pjew2RCR.js";import"./Icons-nm0Q71Sx.js";import"./Integer-kog98579.js";import"./class-map--IQ_mtyb.js";import"./i18n-defaults-RBzcmDt8.js";import"./index-jnaUnQ4S.js";import"./Avatar-AvAtElJx.js";import"./ResizeHandler-hw9R1O21.js";import"./employee-AJKdaGgo.js";import"./alert-Ymv9FYbl.js";import"./index-FGcl4OpY.js";import"./AriaLabelHelper-RbKlVwzD.js";import"./index-ElgmpuNv.js";import"./Link-4yu6Lagp.js";import"./MarkedEvents-aYv14vsS.js";import"./WrappingType-avPrqc94.js";import"./index--F0XPsCm.js";import"./index-QYh6idnL.js";import"./mapValues-TkJEqHhn.js";import"./_baseForOwn-SiKZKQog.js";import"./_baseUniq-frCQiV_D.js";import"./index-PPLHz8o0.js";import"./index-ZYxd7chN.js";import"./index-lbOevkjn.js";import"./Label-h0RP0plm.js";import"./index-yQJZHkj2.js";import"./Button-mmkHl5a0.js";import"./index-mV7dNsSC.js";import"./Popover-9STvCKGK.js";import"./PopupUtils-yApLm5YW.js";import"./getActiveElement-IIKAy3xo.js";import"./PopupsCommon.css-dDtjLgUi.js";import"./FocusableElements-yzAVBk6R.js";import"./isElementHidden-d3-Fo4V6.js";import"./decline-qJ6wR11R.js";import"./i18n-defaults-n2A5pq_J.js";import"./MediaRange-sEMt71Ve.js";import"./style-map-Pb14hoiG.js";import"./BrowserScrollbar.css-F0Fjr-0B.js";import"./information-ME8CmmmC.js";import"./delete-k1UP1DS9.js";import"./ListItem-NVO5T8ja.js";import"./ListItemBase-fdTzy_Aa.js";import"./ItemNavigation-mp_C8WK4.js";import"./TabbableElements-aYIPY3zp.js";import"./debounce-8VpZswfd.js";import"./BusyIndicator-gSXNPx0K.js";import"./RadioButton-A2EwJNLh.js";import"./ValueState-zUcANXoY.js";import"./CheckBox-aQkbgIUH.js";import"./accept-mkX15jfz.js";import"./HasPopup-9BAMrqbD.js";import"./slim-arrow-right-EDPK7lfa.js";import"./settings-WPeaVBuX.js";import"./index-Jm2lAFsC.js";import"./CssSizeVariables-IMpNFjIe.js";import"./CustomVariables-jcpx1a4M.js";import"./filter-rsmbUkp9.js";import"./group-2-JSs7UIjn.js";import"./index-tyGgJ5Dg.js";import"./stopPropagation-dV8jBYUw.js";import"./index-QyEkFx_Q.js";import"./CustomListItem-JDKFEeLw.js";import"./index-5jS4QZzu.js";import"./index-VZee3K3R.js";import"./StandardListItem-h7F8OyVI.js";import"./ValueState-I_-hGNIb.js";import"./index-_70RASvO.js";import"./Input-LmbxyKFB.js";import"./Suggestions.css-ZpYqYHGz.js";import"./ResponsivePopoverCommon.css-8D_HttHM.js";import"./ValueStateMessage.css-HnaKgAF6.js";import"./navigation-down-arrow-XWmKZsAp.js";import"./navigation-right-arrow-uRCYDp6k.js";import"./useCurrentTheme-2IpFHnJa.js";import"./index-Xtag8QaG.js";import"./index-BK-b1R2K.js";import"./GlobalStyleClasses-kWTEndz_.js";import"./index-ZkTOE8M9.js";import"./Title-kFJuFDOq.js";import"./useIsomorphicId-G0VPUEKO.js";import"./useIsRTL-RIxv1AjJ.js";import"./debounce-F9irgL9Y.js";import"./index-I2nnEM0Q.js";import"./Select-B6PdELjh.js";import"./InvisibleMessage-crOnSuEV.js";import"./slim-arrow-down-0-b6XiA5.js";import"./ResponsivePopover-nrtXbJy9.js";import"./Dialog-7t0KZPjl.js";import"./index-scVXnyCx.js";import"./index-Q4MtTBAt.js";import"./ToggleButton-TmN74TN7.js";import"./index-beqWAbvu.js";import"./GroupHeaderListItem-XuKeSdE1.js";import"./Tokenizer-WQwqtLWP.js";import"./ScrollEnablement-Vy7k50I-.js";import"./animate-Pj1TncyK.js";import"./Token-QC75VjC2.js";import"./ComboBoxItem-Amyc8qhQ.js";import"./index-qmjNivc0.js";function Oe(i={}){const{wrapper:o}=Object.assign({},m(),i.components);return o?t.jsx(o,Object.assign({},i,{children:t.jsx(r,{})})):r();function r(){const e=Object.assign({h1:"h1",p:"p",code:"code",strong:"strong",h2:"h2",pre:"pre",h4:"h4"},m(),i.components);return t.jsxs(t.Fragment,{children:[t.jsx(p,{title:"Data Display / AnalyticalTable / Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(e.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(n,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,t.jsxs(e.p,{children:["The ",t.jsx(e.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,t.jsx(e.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,t.jsxs(e.p,{children:[t.jsx(e.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,t.jsx(l,{hideCloseButton:!0,children:t.jsxs(t.Fragment,{children:[" The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",t.jsx(e.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,t.jsx(e.h2,{id:"example",children:"Example"}),`
`,t.jsx(a,{sourceState:"none",of:c}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-jsx",children:`<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.MultiSelect}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={[AnalyticalTableHooks.useIndeterminateRowSelection()]}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,t.jsx(e.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,t.jsx(e.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,t.jsxs(e.p,{children:["The callback is fired, every time the internal ",t.jsx(e.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,t.jsx(e.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,t.jsx(s,{})]})}}export{Oe as default};
//# sourceMappingURL=PluginIndeterminateRowSelection-ZzEHZv2o.js.map
