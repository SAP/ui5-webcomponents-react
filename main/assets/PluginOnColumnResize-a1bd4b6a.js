import{j as o}from"./jsx-runtime-d079401a.js";import{I as p}from"./DomRefTable.module-e4f1df42.js";import{M as n,C as s}from"./chunk-HLWAVYOI-3cfe9455.js";import"./index-f1f2c4b1.js";import{F as l}from"./Footer-bc30cdc4.js";import{a}from"./AnalyticalTable.stories-75293908.js";import{u as m}from"./index-59d6410c.js";import"./react-jss.esm-2e5f50f2.js";import"./index-15680150.js";import"./iframe-9479b6dc.js";import"../sb-preview/runtime.js";import"./UI5Element-d089e658.js";import"./CustomElementsScopeUtils-90546106.js";import"./withWebComponent-f146e44d.js";import"./utils-85c0effb.js";import"./useIsomorphicLayoutEffect-c49de97d.js";import"./slot-76e48863.js";import"./Icon-dc979b51.js";import"./Icons-d115de21.js";import"./decline-a017ea5c.js";import"./i18n-defaults-bdef1cce.js";import"./information-ff75d6c3.js";import"./alert-fa33aca2.js";import"./class-map-5b190712.js";import"./Button-f20bbbdf.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-a1ecaff4.js";import"./index-743fc8f1.js";import"./clsx-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-b7e0672b.js";import"./index-38b43fe5.js";import"./Integer-f7f172c9.js";import"./index-0e91e77a.js";import"./Avatar-d6a8bd34.js";import"./ResizeHandler-36d5a74c.js";import"./employee-0930782f.js";import"./index-8dc2d6a1.js";import"./index-18d4ae37.js";import"./Link-0dce4afc.js";import"./WrappingType-b81e595a.js";import"./index-f82c8853.js";import"./index-c74c9f7f.js";import"./mapValues-6da481dc.js";import"./_baseForOwn-62af832b.js";import"./_baseUniq-27dbdc21.js";import"./index-356e4a49.js";import"./index-12e0da73.js";import"./index-8146d2a5.js";import"./Label-025b0296.js";import"./index-882cd3c7.js";import"./index-b694814b.js";import"./Popover-84fe14ea.js";import"./PopupUtils-caf3caee.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-070f9d59.js";import"./FocusableElements-320054f2.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-2f7624b7.js";import"./BrowserScrollbar.css-e63eefff.js";import"./delete-b0b334f9.js";import"./ListItem-237bd455.js";import"./ListItemBase-8f94593b.js";import"./ItemNavigation-5bb0bc27.js";import"./TabbableElements-8e49b367.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-30d2b934.js";import"./RadioButton-894dc7d7.js";import"./ValueState-2c5e5904.js";import"./CheckBox-e4c9f0e7.js";import"./accept-b3993803.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-f2ee719f.js";import"./settings-d8850585.js";import"./index-99d317a4.js";import"./i18n-defaults-3e7d7856.js";import"./I18nContext-dd74d568.js";import"./CssSizeVariables-596b7aba.js";import"./CustomVariables-f4d4caba.js";import"./filter-528c38fa.js";import"./group-2-d8918a6c.js";import"./index-edd1d15b.js";import"./stopPropagation-da74d54e.js";import"./index-4d615216.js";import"./CustomListItem-0b030da0.js";import"./index-b67b49aa.js";import"./index-66f82772.js";import"./StandardListItem-e433cbf1.js";import"./ValueState-ab6838cc.js";import"./index-a3456bf6.js";import"./Input-d61dd383.js";import"./Suggestions.css-7aca78e8.js";import"./ResponsivePopoverCommon.css-ef6cd2ad.js";import"./ValueStateMessage.css-7d9802b8.js";import"./navigation-down-arrow-3d9fae32.js";import"./navigation-right-arrow-70b88a9d.js";import"./useCurrentTheme-3b063700.js";import"./index-5c33297b.js";import"./index-83af3254.js";import"./GlobalStyleClasses-7209358d.js";import"./index-c66790f1.js";import"./Title-53f5d1e4.js";import"./useIsomorphicId-ed1d334d.js";import"./useIsRTL-db86ce09.js";import"./debounce-5c77766a.js";import"./index-0d78c70d.js";import"./Select-165e307f.js";import"./InvisibleMessage-b699e12e.js";import"./slim-arrow-down-d3e7694d.js";import"./ResponsivePopover-46599dee.js";import"./Dialog-d6d3e16c.js";import"./index-0a26fd6a.js";import"./index-23cf6e4f.js";import"./ToggleButton-999ad82c.js";import"./index-1869fea7.js";import"./GroupHeaderListItem-bda61d02.js";import"./Tokenizer-8d7fb1af.js";import"./ScrollEnablement-a5db9b7d.js";import"./animate-1a16ba20.js";import"./Token-d5b8cdd4.js";import"./ComboBoxItem-885416eb.js";import"./index-8b853c1e.js";function vi(t={}){const{wrapper:r}=Object.assign({},m(),t.components);return r?o.jsx(r,Object.assign({},t,{children:o.jsx(e,{})})):e();function e(){const i=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre"},m(),t.components);return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin: useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(s,{sourceState:"none",of:a}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(l,{})]})}}export{vi as default};
//# sourceMappingURL=PluginOnColumnResize-a1bd4b6a.js.map
