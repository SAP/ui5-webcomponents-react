import{M as c,C as d,e as u}from"./chunk-HLWAVYOI-0dc73210.js";import{T as o}from"./index-677f9e1d.js";import{B as m}from"./Button-bda40b74.js";import"./employee-bd01b92f.js";import{A as g}from"./DomRefTable.module-b3b247c9.js";import{D as f}from"./DocsHeader-150408e7.js";import{F as h}from"./Footer-2b47f69c.js";import{j as t}from"./jsx-runtime-d079401a.js";import"./index-f1f2c4b1.js";import{D as x}from"./DomRefTable-2c56657a.js";import{u as p}from"./index-59d6410c.js";import"./iframe-f939c4cc.js";import"../sb-preview/runtime.js";import"./index-f82c8853.js";import"./index-c74c9f7f.js";import"./mapValues-6da481dc.js";import"./_baseForOwn-62af832b.js";import"./_baseUniq-27dbdc21.js";import"./index-356e4a49.js";import"./ToggleButton-10e80b89.js";import"./withWebComponent-70ea33bf.js";import"./utils-eb830979.js";import"./CustomElementsScopeUtils-a6667bf6.js";import"./useIsomorphicLayoutEffect-c49de97d.js";import"./Icons-aa504494.js";import"./UI5Element-9ae3ac4a.js";import"./Icon-085ae741.js";import"./slot-76e48863.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-edeeca68.js";import"./react-jss.esm-2e5f50f2.js";import"./index-c5cedb32.js";import"./decline-06bf09c2.js";import"./i18n-defaults-bdef1cce.js";import"./information-31cb56bb.js";import"./alert-f95f2d2e.js";import"./class-map-a35dc276.js";import"./index-743fc8f1.js";import"./clsx-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-dff384db.js";import"./index-8e0752f1.js";import"./Integer-f7f172c9.js";import"./index-ac207be3.js";import"./Avatar-54e46144.js";import"./ResizeHandler-a1ba39c5.js";import"./index-a37d7d4c.js";import"./index-6ecfeb03.js";import"./Link-27f41eeb.js";import"./WrappingType-b81e595a.js";import"./index-e1019ca8.js";import"./TableOfContent-31f9f577.js";import"./index-6075c93c.js";import"./Label-2351773c.js";import"./index-ba8a21be.js";import"./index-7ab116c4.js";import"./Popover-f88acbeb.js";import"./PopupUtils-ebc1cf8a.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-afd5e311.js";import"./FocusableElements-ea9d71fb.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-0570471d.js";import"./BrowserScrollbar.css-35e4e851.js";const b=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function j(e={}){const{wrapper:i}=Object.assign({},p(),e.components);return i?t.jsx(i,{...e,children:t.jsx(n,{})}):n();function n(){const s=Object.assign({h2:"h2"},p(),e.components);return t.jsxs(t.Fragment,{children:[t.jsx(c,{title:"Inputs / ToggleButton",component:o,argTypes:{children:{control:"text"}},args:{design:m.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t.jsx(f,{}),`
`,t.jsx("br",{}),`
`,t.jsx(s.h2,{id:"example",children:"Example"}),`
`,t.jsx(d,{children:t.jsx(u,{name:"Default",children:a=>t.jsx(o,{...a})})}),`
`,t.jsx(s.h2,{id:"properties",children:"Properties"}),`
`,t.jsx(g,{story:"Default"}),`
`,t.jsx(x,{rows:b}),`
`,t.jsx(h,{})]})}}const l=e=>t.jsx(o,{...e});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:o,args:{design:m.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:j};const Et=["defaultStory"];export{Et as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-3da988b2.js.map
