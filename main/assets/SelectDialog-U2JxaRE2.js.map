{"version":3,"file":"SelectDialog-U2JxaRE2.js","sources":["../../packages/main/src/components/SelectDialog/SelectDialog.mdx"],"sourcesContent":["import { ControlsWithNote, DocsHeader, DomRefTable, Footer } from '@sb/components';\nimport { Canvas, Meta } from '@storybook/blocks';\nimport DialogDomRef from '../../webComponents/Dialog/DialogDomRef.json';\nimport * as ComponentStories from './SelectDialog.stories';\nimport { MessageStrip, Text } from '../..';\n\n<Meta of={ComponentStories} />\n\n<DocsHeader />\n\n<br />\n\n## Example\n\n<Canvas of={ComponentStories.Default} />\n\n## Properties\n\n<ControlsWithNote of={ComponentStories.Default} />\n\n<DomRefTable rows={DialogDomRef} />\n\n## Opening SelectDialogs\n\n<br />\n\n#### since 0.22.0\n\nWe recommend opening and closing the `SelectDialog` component in a declarative way using the `open` prop.\nYou can still use the imperative way which is outlined below.\n\n```jsx\nconst MyComponentWithSelectDialog = () => {\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setDialogIsOpen(true);\n        }}\n      >\n        Open SelectDialog\n      </Button>\n      <SelectDialog open={dialogIsOpen} headerText=\"Select Product\">\n        <StandardListItem image=\"pathToImg\" description=\"description\">\n          Product\n        </StandardListItem>\n      </SelectDialog>\n    </>\n  );\n};\n```\n\n#### before 0.22.0\n\n`SelectDialog`s can be opened by attaching a `ref` to the component and then calling the corresponding **`show`** method.\n\n```jsx\nconst SelectDialogComponent = () => {\n  const dialogRef = useRef(null);\n  const onButtonClick = () => {\n    dialogRef.current.show();\n  };\n  return (\n    <>\n      <Button onClick={onButtonClick}>Open SelectDialog</Button>\n      <SelectDialog ref={dialogRef} headerText=\"Select Product\">\n        <StandardListItem image=\"pathToImg\" description=\"description\">\n          Product\n        </StandardListItem>\n      </SelectDialog>\n    </>\n  );\n};\n```\n\n## More Examples\n\n### SelectDialog in MultiSelect mode with search\n\n<MessageStrip\n  hideCloseButton\n  children={\n    <Text>\n      This example remembers its selection by setting <code>rememberSelections</code> to <code>true</code>.\n    </Text>\n  }\n/>\n\n<Canvas of={ComponentStories.MultiSelect} sourceState=\"none\" />\n\n<details>\n\n<summary>Show Code</summary>\n\n```tsx\nconst MultiSelectDialog = () => {\n  const dialogRef = useRef(null);\n  // predefined selection\n  const selectedProducts = { 'HT-102': true, 'HT-203': true, 'HT-1038': true };\n  // number of selected items\n  const [selectedItems, setSelectedItems] = useState<Record<string, boolean>>(selectedProducts);\n  const [searchVal, setSearchVal] = useState();\n  const [products, setProducts] = useState(Object.keys(selectedProducts));\n\n  const onButtonClick = () => {\n    dialogRef.current.show();\n  };\n\n  // search\n  const handleSearch = (e) => {\n    setSearchVal(e.detail.value);\n  };\n  const handleSearchReset = () => {\n    setSearchVal(undefined);\n  };\n  const handleItemClick = (e) => {\n    const itemDescription = e.detail.item.dataset.description;\n    setSelectedItems((prev) => {\n      if (prev[itemDescription]) {\n        const { [itemDescription]: _omit, ...rest } = prev;\n        return rest;\n      } else {\n        return { ...prev, [itemDescription]: true };\n      }\n    });\n  };\n  // clear selection\n  const handleClear = () => {\n    setSelectedItems({});\n  };\n  // confirm selection\n  const handleConfirm = () => {\n    setProducts(Object.keys(selectedItems));\n  };\n\n  return (\n    <>\n      <Button onClick={onButtonClick}>Open Dialog</Button>\n      <SelectDialog\n        mode={ListMode.MultiSelect}\n        ref={dialogRef}\n        onSearchInput={handleSearch}\n        onSearch={handleSearch}\n        onSearchReset={handleSearchReset}\n        numberOfSelectedItems={Object.keys(selectedItems).length}\n        listProps={{ onItemClick: handleItemClick }}\n        showClearButton\n        rememberSelections\n        onClear={handleClear}\n        onConfirm={handleConfirm}\n      >\n        {new Array(40)\n          .fill('')\n          .map((_, index) => {\n            const currentProduct = listItems[index % 4];\n            const description = `${currentProduct.description}${index}`;\n            const lowerCaseSearchVal = searchVal?.toLowerCase();\n            if (\n              searchVal &&\n              !description.toLowerCase().includes(lowerCaseSearchVal) &&\n              !currentProduct.text.toLowerCase().includes(lowerCaseSearchVal)\n            ) {\n              return null;\n            }\n            return (\n              <StandardListItem\n                image={currentProduct.img}\n                description={`${currentProduct.description}${index}`}\n                data-description={`${currentProduct.description}${index}`}\n                key={`${currentProduct.text}${index}`}\n                selected={selectedItems[description]}\n              >\n                {currentProduct.text}\n              </StandardListItem>\n            );\n          })\n          .filter(Boolean)}\n      </SelectDialog>\n      <FlexBox>\n        <Label>Selected: </Label>\n        <Text>{products.join(', ')}</Text>\n      </FlexBox>\n    </>\n  );\n};\n```\n\n</details>\n\n<Footer />\n"],"names":["MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","ComponentStories","DocsHeader","Canvas","ComponentStories.Default","ControlsWithNote","DomRefTable","DialogDomRef","MessageStrip","Text","ComponentStories.MultiSelect","Footer"],"mappings":"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"}