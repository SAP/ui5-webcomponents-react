import{d as f,e as $,f as v,D as o,a as x,h as B}from"./Language-gwOe_M78.js";const C=/^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;class _{constructor(e){const s=C.exec(e.replace(/_/g,"-"));if(s===null)throw new Error(`The given language ${e} does not adhere to BCP-47.`);this.sLocaleId=e,this.sLanguage=s[1]||f,this.sScript=s[2]||"",this.sRegion=s[3]||"",this.sVariant=s[4]&&s[4].slice(1)||null,this.sExtension=s[5]&&s[5].slice(1)||null,this.sPrivateUse=s[6]||null,this.sLanguage&&(this.sLanguage=this.sLanguage.toLowerCase()),this.sScript&&(this.sScript=this.sScript.toLowerCase().replace(/^[a-z]/,n=>n.toUpperCase())),this.sRegion&&(this.sRegion=this.sRegion.toUpperCase())}getLanguage(){return this.sLanguage}getScript(){return this.sScript}getRegion(){return this.sRegion}getVariant(){return this.sVariant}getVariantSubtags(){return this.sVariant?this.sVariant.split("-"):[]}getExtension(){return this.sExtension}getExtensionSubtags(){return this.sExtension?this.sExtension.slice(2).split("-"):[]}getPrivateUse(){return this.sPrivateUse}getPrivateUseSubtags(){return this.sPrivateUse?this.sPrivateUse.slice(2).split("-"):[]}hasPrivateUseSubtag(e){return this.getPrivateUseSubtags().indexOf(e)>=0}toString(){const e=[this.sLanguage];return this.sScript&&e.push(this.sScript),this.sRegion&&e.push(this.sRegion),this.sVariant&&e.push(this.sVariant),this.sExtension&&e.push(this.sExtension),this.sPrivateUse&&e.push(this.sPrivateUse),e.join("-")}}const c=new Map,E=t=>(c.has(t)||c.set(t,new _(t)),c.get(t)),L=t=>{try{if(t&&typeof t=="string")return E(t)}catch{}return new _(o)},g=t=>{if(t)return L(t);const e=$();return e?E(e):L(v())},I=/^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i,A=/(?:^|-)(saptrc|sappsd)(?:-|$)/i,R={he:"iw",yi:"ji",nb:"no",sr:"sh"},m=t=>{let e;if(!t)return o;if(typeof t=="string"&&(e=I.exec(t.replace(/_/g,"-")))){let s=e[1].toLowerCase(),n=e[3]?e[3].toUpperCase():void 0;const r=e[2]?e[2].toLowerCase():void 0,i=e[4]?e[4].slice(1):void 0,a=e[6];return s=R[s]||s,a&&(e=A.exec(a))||i&&(e=A.exec(i))?`en_US_${e[1].toLowerCase()}`:(s==="zh"&&!n&&(r==="hans"?n="CN":r==="hant"&&(n="TW")),s+(n?"_"+n+(i?"_"+i.replace("-","_"):""):""))}return o},T=t=>{if(!t)return o;if(t==="zh_HK")return"zh_TW";const e=t.lastIndexOf("_");return e>=0?t.slice(0,e):t!==o?o:""},w=new Set,y=new Set,d=new Map,h=new Map,p=new Map,X=(t,e,s)=>{const n=`${t}/${e}`;p.set(n,s)},S=(t,e)=>{d.set(t,e)},b=t=>d.get(t),U=(t,e)=>{const s=`${t}/${e}`;return p.has(s)},M=(t,e)=>{const s=`${t}/${e}`,n=p.get(s);return n&&!h.get(s)&&h.set(s,n(e)),h.get(s)},D=t=>{w.has(t)||(console.warn(`[${t}]: Message bundle assets are not configured. Falling back to English texts.`,` Add \`import "${t}/dist/Assets.js"\` in your bundle and make sure your build tool supports dynamic imports and JSON imports. See section "Assets" in the documentation for more information.`),w.add(t))},Z=(t,e)=>e!==f&&!U(t,e),P=async t=>{const e=g().getLanguage(),s=g().getRegion(),n=g().getVariant();let r=e+(s?`-${s}`:"")+(n?`-${n}`:"");if(Z(t,r))for(r=m(r);Z(t,r);)r=T(r);const i=B();if(r===f&&!i){S(t,null);return}if(!U(t,r)){D(t);return}try{const a=await M(t,r);S(t,a)}catch(a){const u=a;y.has(u.message)||(y.add(u.message),console.error(u.message))}};x(t=>{const e=[...d.keys()];return Promise.all(e.map(P))});const V=/('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g,F=(t,e)=>(e=e||[],t.replace(V,(s,n,r,i,a)=>{if(n)return"'";if(r)return r.replace(/''/g,"'");if(i){const u=typeof i=="string"?parseInt(i):i;return String(e[u])}throw new Error(`[i18n]: pattern syntax error at pos ${a}`)})),l=new Map;class W{constructor(e){this.packageName=e}getText(e,...s){if(typeof e=="string"&&(e={key:e,defaultText:e}),!e||!e.key)return"";const n=b(this.packageName);n&&!n[e.key]&&console.warn(`Key ${e.key} not found in the i18n bundle, the default text will be used`);const r=n&&n[e.key]?n[e.key]:e.defaultText||e.key;return F(r,s)}}const z=t=>{if(l.has(t))return l.get(t);const e=new W(t);return l.set(t,e),e},k=async t=>(await P(t),z(t));export{W as I,k as a,g,X as r};
