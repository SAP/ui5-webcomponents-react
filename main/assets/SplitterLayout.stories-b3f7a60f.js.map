{"version":3,"file":"SplitterLayout.stories-b3f7a60f.js","sources":["../../packages/main/src/internal/SplitterLayoutContext.ts","../../packages/main/src/components/SplitterElement/index.tsx","../../packages/main/src/components/SplitterLayout/SplitterLayout.jss.ts","../../node_modules/@ui5/webcomponents-icons/dist/v4/horizontal-grip.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/horizontal-grip.js","../../node_modules/@ui5/webcomponents-icons/dist/horizontal-grip.js","../../node_modules/@ui5/webcomponents-icons/dist/v4/vertical-grip.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/vertical-grip.js","../../node_modules/@ui5/webcomponents-icons/dist/vertical-grip.js","../../packages/main/src/components/Splitter/index.tsx","../../packages/main/src/components/SplitterLayout/useConcatSplitterElements.tsx","../../packages/main/src/components/SplitterLayout/index.tsx","../../.storybook/components/SplitterElementContent.tsx"],"sourcesContent":["import { createContext } from 'react';\n\ninterface ISplitterLayoutContext {\n  vertical: boolean;\n  reset: boolean;\n}\n\nexport const SplitterLayoutContext = createContext<ISplitterLayoutContext>({\n  vertical: true,\n  reset: false\n});\n","'use client';\n\nimport { Device, useIsomorphicLayoutEffect, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport type { CSSProperties, ReactNode } from 'react';\nimport React, { forwardRef, useContext, useEffect, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport { SplitterLayoutContext } from '../../internal/SplitterLayoutContext.js';\n\nconst useStyles = createUseStyles(\n  {\n    splitterElement: {\n      display: 'flex',\n      overflow: 'hidden',\n      position: 'relative',\n      willChange: 'flex-basis',\n      minWidth: '0px',\n      minHeight: '0px'\n    }\n  },\n  { name: 'SplitterElement' }\n);\n\nexport interface SplitterElementPropTypes extends CommonProps {\n  /**\n   * Defines whether a resizer element is displayed.\n   *\n   * If the next `SplitterElement` has the prop `resizable={false}`, no resizer element will be shown after this\n   * `SplitterElement`. The resizer element is only shown when all siblings of the resizer are resizable.\n   * Default value of resizable is `true`.\n   */\n  resizable?: boolean;\n  /**\n   * Defines the initial size of the `SplitterElement`.\n   */\n  size?: CSSProperties['width'] | CSSProperties['height'];\n  /**\n   * Defines the minimum size of the `SplitterElement`. The resizer element stops when the minimum size is reached.\n   */\n  minSize?: number;\n  /**\n   * Defines the content which is shown inside the `SplitterElement`.\n   */\n  children?: ReactNode | ReactNode[];\n}\n\n/**\n * The `SplitterElement` holds the component of the content area. Allowed size values are of the type css property width or\n * height according to the orientation of the `SplitterLayout`. If `size` isn't passed to the element, the width or\n * height of the content area will be calculated automatically according to the size of the given `SplitterLayout`.\n * The `minSize` defines the minimum width or height of the area and is set to 0 when no minimum size is given, so the\n * content can be completely collapsed.\n */\nconst SplitterElement = forwardRef<HTMLDivElement, SplitterElementPropTypes>((props, ref) => {\n  const { children, style, className, minSize, size, resizable: _0, ...rest } = props;\n  const [componentRef, splitterElementRef] = useSyncRef(ref);\n  const { vertical, reset } = useContext(SplitterLayoutContext);\n  const safariStyles = Device.isSafari() ? { width: 'min-content', flex: '1 1 auto' } : {};\n  const defaultFlexStyles = size !== 'auto' ? { flex: `0 1 ${size}` } : { flex: '1 0 min-content', ...safariStyles };\n  const [flexStyles, setFlexStyles] = useState(defaultFlexStyles);\n  const [flexBasisApplied, setFlexBasisApplied] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const elementObserver = new ResizeObserver(([element]) => {\n      if (element.target.getBoundingClientRect().width !== 0 && !flexBasisApplied) {\n        const resetSafariStyles = Device.isSafari() ? { width: 'unset' } : {};\n        setFlexStyles({\n          flex: `0 0 ${element.target.getBoundingClientRect()[vertical ? 'height' : 'width']}px`,\n          ...resetSafariStyles\n        });\n        setFlexBasisApplied(true);\n      }\n    });\n\n    if (size === 'auto' && splitterElementRef.current) {\n      elementObserver.observe(splitterElementRef.current);\n    } else {\n      setFlexStyles({ flex: `0 1 ${size}` });\n    }\n\n    return () => {\n      elementObserver.disconnect();\n    };\n  }, [size, flexBasisApplied, vertical]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (reset) {\n      setFlexStyles(undefined);\n      setFlexBasisApplied(false);\n    }\n  }, [reset, size]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (flexStyles === undefined) {\n      setFlexStyles(defaultFlexStyles);\n    }\n  }, [flexStyles]);\n\n  return (\n    <div\n      ref={componentRef}\n      className={clsx(classes.splitterElement, classes[vertical ? 'vertical' : 'horizontal'], className)}\n      style={{\n        minHeight: vertical && minSize ? `${minSize}px` : undefined,\n        minWidth: !vertical && minSize ? `${minSize}px` : undefined,\n        ...flexStyles,\n        ...style\n      }}\n      {...rest}\n      data-min-size={minSize}\n    >\n      {children}\n    </div>\n  );\n});\n\nSplitterElement.defaultProps = {\n  minSize: 0,\n  size: 'auto'\n};\n\nSplitterElement.displayName = 'SplitterElement';\n\nexport { SplitterElement };\n","const styles = {\n  splitterLayout: {\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative',\n    '&[data-splitter-orientation=\"horizontal\"]': {\n      flexDirection: 'row',\n      width: '100%',\n      '& > *': {\n        height: '100%'\n      }\n    },\n    '&[data-splitter-orientation=\"vertical\"]': {\n      flexDirection: 'column',\n      height: '100%',\n      '& > *': {\n        width: '100%'\n      }\n    }\n  }\n};\nexport { styles };\n","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"horizontal-grip\";\nconst pathData = \"M96 224v64H32v-64h64zm256 0v64h-64v-64h64zm-192 0h64v64h-64v-64zm320 0v64h-64v-64h64z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/horizontal-grip\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"horizontal-grip\";\nconst pathData = \"M96 176q0 20-14 34t-34 14-34-14-14-34 14-34 34-14 34 14 14 34zm42 0q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34zm140 0q0-20 14-34t34-14 34 14.5 14 33.5-14 33.5-34 14.5-34-14-14-34zm138 0q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34zM0 336q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34zm138 0q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34zm140 0q0-20 14-34t34-14 34 14.5 14 33.5-14 33.5-34 14.5-34-14-14-34zm138 0q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/horizontal-grip\";\nexport { pathData, ltr, accData };","import { isLegacyThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/horizontal-grip.js\";\nimport { pathData as pathDatav5 } from \"./v5/horizontal-grip.js\";\n\nconst pathData = isLegacyThemeFamily() ? pathDatav4 : pathDatav5;\n\nexport default \"horizontal-grip\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"vertical-grip\";\nconst pathData = \"M224 480v-64h64v64h-64zm0-384V32h64v64h-64zm0 128v-64h64v64h-64zm0 128v-64h64v64h-64z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/vertical-grip\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"vertical-grip\";\nconst pathData = \"M176 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm160 96q-20 0-34-14t-14-34 14-34 34-14 34 14 14 34-14 34-34 14zm-160 42q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm160 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zM176 278q20 0 34 14t14 34q0 19-14.5 33.5T176 374t-33.5-14.5T128 326q0-20 14-34t34-14zm160 0q20 0 34 14t14 34q0 19-14.5 33.5T336 374t-33.5-14.5T288 326q0-20 14-34t34-14zM176 416q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm160 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/vertical-grip\";\nexport { pathData, ltr, accData };","import { isLegacyThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/vertical-grip.js\";\nimport { pathData as pathDatav5 } from \"./v5/vertical-grip.js\";\n\nconst pathData = isLegacyThemeFamily() ? pathDatav4 : pathDatav5;\n\nexport default \"vertical-grip\";\nexport { pathData, ltr, accData };","'use client';\n\nimport horizontalGripIcon from '@ui5/webcomponents-icons/dist/horizontal-grip.js';\nimport verticalGripIcon from '@ui5/webcomponents-icons/dist/vertical-grip.js';\nimport {\n  CssSizeVariables,\n  ThemingParameters,\n  useCurrentTheme,\n  useI18nBundle,\n  useIsRTL,\n  useSyncRef\n} from '@ui5/webcomponents-react-base';\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ButtonDesign } from '../../enums/index.js';\nimport { PRESS_ARROW_KEYS_TO_MOVE } from '../../i18n/i18n-defaults.js';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport { CustomThemingParameters } from '../../themes/CustomVariables.js';\nimport { Button, Icon } from '../../webComponents/index.js';\n\nconst useStyles = createUseStyles(\n  {\n    splitter: {\n      touchAction: 'none',\n      position: 'relative',\n      display: 'flex',\n      willChange: 'flex',\n      backgroundColor: ThemingParameters.sapShell_Background,\n      alignItems: 'center',\n      justifyContent: 'center',\n      boxSizing: 'border-box',\n      '&[data-splitter-vertical=horizontal]': {\n        cursor: 'col-resize',\n        borderLeft: CustomThemingParameters.SplitterBarBorderStyle,\n        borderRight: CustomThemingParameters.SplitterBarBorderStyle,\n        minWidth: CssSizeVariables.ui5WcrSplitterSize,\n        width: CssSizeVariables.ui5WcrSplitterSize,\n        height: '100%',\n        flexDirection: 'column',\n        '&:focus': {\n          borderTop: CustomThemingParameters.SplitterBarBorderFix,\n          borderRight: CustomThemingParameters.SplitterBarBorderFocus,\n          borderBottom: CustomThemingParameters.SplitterBarBorderFix,\n          borderLeft: CustomThemingParameters.SplitterBarBorderFocus,\n          outlineOffset: '-0.20rem',\n          outline: CustomThemingParameters.SplitterBarOutline\n        },\n\n        '& $lineBefore, & $lineAfter': {\n          backgroundSize: '0.0625rem 100%',\n          width: CssSizeVariables.ui5WcrSplitterSize,\n          height: '4rem'\n        },\n        '& $lineBefore': {\n          backgroundImage: `linear-gradient(to top, ${CustomThemingParameters.SplitterContentBorderColor}, transparent)`\n        },\n        '& $icon': {\n          padding: '0.5rem 0',\n          zIndex: 1\n        },\n        '& $lineAfter': {\n          backgroundImage: `linear-gradient(to bottom, ${CustomThemingParameters.SplitterContentBorderColor}, transparent)`\n        }\n      },\n      '&[data-splitter-vertical=vertical]': {\n        borderTop: CustomThemingParameters.SplitterBarBorderStyle,\n        borderBottom: CustomThemingParameters.SplitterBarBorderStyle,\n        cursor: 'row-resize',\n        minHeight: CssSizeVariables.ui5WcrSplitterSize,\n        height: CssSizeVariables.ui5WcrSplitterSize,\n        width: '100%',\n        flexDirection: 'row',\n        '&:focus': {\n          borderTop: CustomThemingParameters.SplitterBarBorderFocus,\n          borderRight: CustomThemingParameters.SplitterBarBorderFix,\n          borderBottom: CustomThemingParameters.SplitterBarBorderFocus,\n          borderLeft: CustomThemingParameters.SplitterBarBorderFix,\n          outlineOffset: '-0.20rem',\n          outline: CustomThemingParameters.SplitterBarOutline\n        },\n\n        '& $lineBefore, & $lineAfter': {\n          backgroundSize: '100% 0.0625rem ',\n          width: '5rem',\n          height: CssSizeVariables.ui5WcrSplitterSize\n        },\n        '& $lineBefore': {\n          backgroundImage: `linear-gradient(to left, ${CustomThemingParameters.SplitterContentBorderColor}, transparent)`\n        },\n        '& $icon': {\n          padding: '0 0.5rem',\n          zIndex: 1\n        },\n        '& $lineAfter': {\n          backgroundImage: `linear-gradient(to right, ${CustomThemingParameters.SplitterContentBorderColor}, transparent)`\n        }\n      },\n      '&[data-splitter-vertical=verticalRtl]': {\n        cursor: 'row-resize',\n        minHeight: CssSizeVariables.ui5WcrSplitterSize,\n        height: CssSizeVariables.ui5WcrSplitterSize,\n        width: '100%',\n        flexDirection: 'row',\n\n        '& $lineBefore, & $lineAfter': {\n          backgroundSize: '100% 0.0625rem ',\n          width: '5rem',\n          height: CssSizeVariables.ui5WcrSplitterSize\n        },\n        '& $lineBefore': {\n          backgroundImage: `linear-gradient(to right, ${CustomThemingParameters.SplitterContentBorderColor}, transparent)`\n        },\n        '& $icon': {\n          padding: '0 0.5rem',\n          zIndex: 1\n        },\n        '& $lineAfter': {\n          backgroundImage: `linear-gradient(to left, ${CustomThemingParameters.SplitterContentBorderColor}, transparent)`\n        }\n      },\n      '&:hover': {\n        '& $lineBefore, & $lineAfter': {\n          flexGrow: 1,\n          transition: 'all 0.1s ease-in'\n        }\n      }\n    },\n    gripButton: {\n      minWidth: '1.5rem !important',\n      height: '1.625rem',\n      zIndex: '1',\n      '&:active': {\n        zIndex: '2'\n      }\n    },\n    icon: {\n      color: CustomThemingParameters.SplitterIconColor\n    },\n    lineBefore: {\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat'\n    },\n    lineAfter: {\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat'\n    }\n  },\n  { name: 'Splitter' }\n);\n\nexport interface SplitterPropTypes extends CommonProps {\n  height: string | number;\n  width: string | number;\n  vertical: boolean;\n}\n\nconst verticalPositionInfo = {\n  start: 'top',\n  end: 'bottom',\n  position: 'Y',\n  positionRect: 'y',\n  size: 'height',\n  min: 'minHeight',\n  offset: 'offsetY'\n};\n\nconst horizontalPositionInfo = {\n  start: 'left',\n  end: 'right',\n  position: 'X',\n  positionRect: 'x',\n  size: 'width',\n  min: 'minWidth',\n  offset: 'offsetX'\n};\n\nconst Splitter = forwardRef<HTMLDivElement, SplitterPropTypes>((props, ref) => {\n  const { vertical } = props;\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  const [componentRef, localRef] = useSyncRef<HTMLDivElement>(ref);\n  const isRtl = useIsRTL({ current: localRef.current?.parentElement });\n  const start = useRef(null);\n  const classes = useStyles();\n\n  const previousSiblingSize = useRef<number>(null);\n  const nextSiblingSize = useRef<number>(null);\n  const previousElementEnd = useRef(null);\n  const nextElementStart = useRef(null);\n\n  const resizerClickOffset = useRef(0);\n  const positionKeys = vertical ? verticalPositionInfo : horizontalPositionInfo;\n\n  const [isDragging, setIsDragging] = useState<boolean | string>(false);\n  const [isSiblings, setIsSiblings] = useState(['previousSibling', 'nextSibling']);\n\n  const handleSplitterMove = (e) => {\n    const offset = resizerClickOffset.current;\n    const previousSibling = localRef.current[isSiblings[0]] as HTMLDivElement;\n    const nextSibling = localRef.current[isSiblings[1]] as HTMLDivElement;\n\n    const currentPosition =\n      isDragging === 'touch' ? e.touches[0][`client${positionKeys.position}`] : e[`client${positionKeys.position}`];\n    const sizeDiv = currentPosition - start.current;\n    const splitterWidth = localRef.current.getBoundingClientRect()[positionKeys.size];\n    const moveLeft = sizeDiv < 0;\n\n    const move = () => {\n      previousSibling.style.flex = `0 0 ${previousSiblingSize.current + sizeDiv}px`;\n\n      if (nextSibling.nextSibling && previousSiblingSize.current + sizeDiv > 0) {\n        nextSibling.style.flex = `0 0 ${nextSiblingSize.current - sizeDiv}px`;\n      }\n    };\n\n    if (\n      previousSiblingSize.current + sizeDiv > 0 &&\n      (currentPosition as number) + (splitterWidth - offset) <= nextElementStart.current\n    ) {\n      if (parseInt(previousSibling.dataset.minSize, 10) <= previousSiblingSize.current + sizeDiv && moveLeft) {\n        move();\n      }\n      if (nextSiblingSize.current - sizeDiv >= parseInt(nextSibling.dataset.minSize, 10) && !moveLeft) {\n        move();\n      }\n    }\n\n    if (!nextSibling[isSiblings[1]] && !isRtl) {\n      (nextSibling as HTMLElement).style.flex = '1 0 0px';\n    }\n  };\n\n  const handleFallback = (e, touchEvent: boolean) => {\n    const prevSibling = localRef.current[isSiblings[0]] as HTMLElement;\n    const nextSibling = localRef.current[isSiblings[1]] as HTMLElement;\n    const prevSiblingRect = (localRef.current[isSiblings[0]] as HTMLElement).getBoundingClientRect();\n    const nextSiblingRect = (localRef.current[isSiblings[1]] as HTMLElement).getBoundingClientRect();\n    const currentPos = touchEvent\n      ? Math.round(e.changedTouches[0][`client${positionKeys.position}`])\n      : e[`client${positionKeys.position}`];\n\n    // left\n    if (currentPos - localRef.current.getBoundingClientRect()?.[positionKeys.positionRect] < 0) {\n      prevSibling.style.flex = '0 0 0px';\n      // Check if minSize is set on previous sibling\n      if (prevSibling.style?.[positionKeys.min]) {\n        nextSibling.style.flex = `0 0 ${\n          (nextSiblingRect?.[positionKeys.size] as number) +\n          (prevSiblingRect?.[positionKeys.size] - prevSibling.style?.[positionKeys.min].replace('px', ''))\n        }px`;\n      } else {\n        nextSibling.style.flex = `0 0 ${\n          (nextSiblingRect?.[positionKeys.size] as number) + prevSiblingRect?.[positionKeys.size]\n        }px`;\n      }\n    }\n\n    // right\n    if (nextElementStart.current < currentPos) {\n      nextSibling.style.flex = '0 0 0px';\n      // Check if minSize is set on next sibling\n      if (nextSibling.style?.[positionKeys.min]) {\n        prevSibling.style.flex = `0 0 ${\n          (prevSiblingRect?.[positionKeys.size] as number) +\n          (nextSiblingRect?.[positionKeys.size] - nextSibling.style?.[positionKeys.min].replace('px', ''))\n        }px`;\n      } else {\n        prevSibling.style.flex = `0 0 ${\n          (prevSiblingRect?.[positionKeys.size] as number) + nextSiblingRect?.[positionKeys.size]\n        }px`;\n      }\n    }\n  };\n\n  const handleSplitterClick = (e) => {\n    e.currentTarget.focus();\n  };\n\n  const handleMoveSplitterStart = (e) => {\n    if (e.type === 'pointerdown' && e.pointerType !== 'touch') {\n      return;\n    }\n    e.preventDefault();\n    setIsDragging(e.pointerType ?? 'mouse');\n    resizerClickOffset.current = e.nativeEvent[positionKeys.offset];\n\n    previousElementEnd.current = (localRef.current[isSiblings[0]] as HTMLElement).getBoundingClientRect()?.[\n      positionKeys.end\n    ];\n    if (localRef.current[isSiblings[1]][isSiblings[1]]) {\n      nextElementStart.current = (\n        localRef.current[isSiblings[1]][isSiblings[1]] as HTMLElement\n      ).getBoundingClientRect()?.[positionKeys.start];\n    } else {\n      nextElementStart.current = localRef.current.parentElement.getBoundingClientRect()[positionKeys.end];\n    }\n\n    previousSiblingSize.current = (localRef.current[isSiblings[0]] as HTMLElement).getBoundingClientRect()?.[\n      positionKeys.size\n    ];\n    nextSiblingSize.current = (localRef.current[isSiblings[1]] as HTMLElement).getBoundingClientRect()?.[\n      positionKeys.size\n    ];\n\n    start.current = e[`client${positionKeys.position}`];\n  };\n\n  const onHandleKeyDown = (e) => {\n    const keyEventProperties = e.code ?? e.key;\n    if (\n      keyEventProperties === 'ArrowRight' ||\n      keyEventProperties === 'ArrowLeft' ||\n      keyEventProperties === 'ArrowUp' ||\n      keyEventProperties === 'ArrowDown'\n    ) {\n      e.preventDefault();\n      let firstSibling = localRef.current[isSiblings[0]] as HTMLElement;\n      let secondSibling = localRef.current[isSiblings[1]] as HTMLElement;\n\n      if (keyEventProperties === 'ArrowLeft' || keyEventProperties === 'ArrowUp') {\n        secondSibling = localRef.current[isSiblings[0]] as HTMLElement;\n        firstSibling = localRef.current[isSiblings[1]] as HTMLElement;\n      }\n\n      const remainingSize = secondSibling.style[positionKeys.min]\n        ? secondSibling.getBoundingClientRect()?.[positionKeys.size] -\n          Number(secondSibling.style[positionKeys.min].replace('px', ''))\n        : secondSibling.getBoundingClientRect()?.[positionKeys.size];\n\n      if (document.activeElement === localRef.current) {\n        const tickSize = remainingSize >= 20 ? 20 : remainingSize;\n        const firstSiblingSize = firstSibling.getBoundingClientRect()?.[positionKeys.size] as number;\n        const secondSiblingSize = secondSibling.getBoundingClientRect()?.[positionKeys.size] as number;\n        secondSibling.style.flex = `0 0 ${secondSiblingSize - tickSize}px`;\n        firstSibling.style.flex = `0 0 ${firstSiblingSize + tickSize}px`;\n      }\n    }\n  };\n\n  const end = (e) => {\n    handleFallback(e, isDragging === 'touch');\n    setIsDragging(false);\n  };\n\n  useEffect(() => {\n    const removeEventListeners = () => {\n      if (isDragging === 'touch') {\n        document.removeEventListener('touchmove', handleSplitterMove);\n        document.removeEventListener('touchend', end);\n      } else {\n        document.removeEventListener('mouseup', end);\n        document.removeEventListener('mousemove', handleSplitterMove);\n      }\n    };\n    if (isDragging) {\n      if (isDragging === 'touch') {\n        document.addEventListener('touchmove', handleSplitterMove);\n        document.addEventListener('touchend', end);\n      } else {\n        document.addEventListener('mousemove', handleSplitterMove);\n        document.addEventListener('mouseup', end);\n      }\n    } else {\n      removeEventListeners();\n    }\n    return () => {\n      removeEventListeners();\n    };\n  }, [isDragging]);\n\n  useEffect(() => {\n    setIsSiblings(isRtl && !vertical ? ['nextSibling', 'previousSibling'] : ['previousSibling', 'nextSibling']);\n  }, [isRtl, vertical]);\n\n  const currentTheme = useCurrentTheme();\n  const isHighContrast =\n    currentTheme === 'sap_fiori_3_hcb' ||\n    currentTheme === 'sap_fiori_3_hcw' ||\n    currentTheme === 'sap_horizon_hcb' ||\n    currentTheme === 'sap_horizon_hcw';\n\n  return (\n    <div\n      className={classes.splitter}\n      tabIndex={0}\n      onClick={handleSplitterClick}\n      onKeyDown={onHandleKeyDown}\n      onPointerDown={handleMoveSplitterStart}\n      onMouseDown={handleMoveSplitterStart}\n      ref={componentRef}\n      role=\"separator\"\n      data-splitter-vertical={isRtl && vertical ? 'verticalRtl' : vertical ? 'vertical' : 'horizontal'}\n      title={i18nBundle.getText(PRESS_ARROW_KEYS_TO_MOVE)}\n      aria-orientation={vertical ? 'vertical' : 'horizontal'}\n      aria-label={i18nBundle.getText(PRESS_ARROW_KEYS_TO_MOVE)}\n    >\n      <div className={classes.lineBefore} />\n      {isHighContrast ? (\n        <Button\n          className={classes.gripButton}\n          tabIndex={-1}\n          icon={vertical ? horizontalGripIcon : verticalGripIcon}\n          design={ButtonDesign.Transparent}\n        />\n      ) : (\n        <Icon className={classes.icon} name={vertical ? horizontalGripIcon : verticalGripIcon} />\n      )}\n      <div className={classes.lineAfter} />\n    </div>\n  );\n});\n\nSplitter.displayName = 'Splitter';\n\nexport { Splitter };\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base';\nimport type { CSSProperties, ReactElement } from 'react';\nimport React, { Children, cloneElement, isValidElement, useMemo } from 'react';\nimport { Splitter } from '../Splitter/index.js';\nimport type { SplitterElementPropTypes } from '../SplitterElement/index.js';\n\ninterface ConcatSplitterElements {\n  children: ReactElement<SplitterElementPropTypes> | ReactElement<SplitterElementPropTypes>[];\n  width: CSSProperties['width'];\n  height: CSSProperties['height'];\n  vertical: boolean;\n}\n\nexport const useConcatSplitterElements = (concatSplitterElements: ConcatSplitterElements) => {\n  return useMemo(() => {\n    if (isValidElement(concatSplitterElements?.children)) {\n      return concatSplitterElements?.children;\n    }\n\n    const childrenArray = Children.toArray(concatSplitterElements?.children).filter(\n      isValidElement\n    ) as ReactElement<SplitterElementPropTypes>[];\n\n    let splitterCount = 0;\n    const indicesWithSplitter = [];\n\n    childrenArray.forEach((child, index) => {\n      const splitterElementChild = childrenArray[index + splitterCount];\n      if (\n        childrenArray.length - splitterCount - 1 > index &&\n        (splitterElementChild.props.resizable || splitterElementChild.props.resizable === undefined) &&\n        splitterElementChild.props.minSize !== undefined\n      ) {\n        childrenArray.splice(\n          index + splitterCount + 1,\n          0,\n          <Splitter\n            key={`splitter${index}`}\n            height={concatSplitterElements?.height}\n            width={concatSplitterElements?.width}\n            vertical={concatSplitterElements?.vertical}\n          />\n        );\n        // -1 => prev element\n        indicesWithSplitter.push(index + 1 + splitterCount - 1);\n        ++splitterCount;\n      } else if (index > 0 && splitterElementChild?.props.resizable === false) {\n        const indexOfSplitter = childrenArray.findIndex((element) => element === splitterElementChild) - 1;\n        if (childrenArray[indexOfSplitter].props.minSize === undefined) {\n          childrenArray.splice(indexOfSplitter, 1);\n        }\n        indicesWithSplitter.pop();\n        --splitterCount;\n      }\n    });\n\n    indicesWithSplitter.forEach((index) => {\n      const size = childrenArray[index]?.props?.size;\n      if (size && size !== 'auto') {\n        childrenArray[index] = cloneElement(childrenArray[index], {\n          size: `calc(${size} - ${CssSizeVariables.ui5WcrSplitterSize})`\n        });\n      }\n    });\n\n    return childrenArray;\n  }, [concatSplitterElements]);\n};\n","'use client';\n\nimport { debounce, useSyncRef } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport type { CSSProperties, DependencyList, ReactElement } from 'react';\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport { SplitterLayoutContext } from '../../internal/SplitterLayoutContext.js';\nimport type { SplitterElementPropTypes } from '../SplitterElement/index.js';\nimport { styles } from './SplitterLayout.jss.js';\nimport { useConcatSplitterElements } from './useConcatSplitterElements.js';\n\nconst useStyles = createUseStyles(styles, { name: 'SplitterLayout' });\n\ninterface SplitterLayoutOptions {\n  /**\n   * Defines whether the `SplitterLayout` should be reset when its size changes depending on the orientation.\n   */\n  resetOnSizeChange?: boolean;\n  /**\n   * Defines whether the `SplitterLayout` should be reset when its `children` change.\n   */\n  resetOnChildrenChange?: boolean;\n  /**\n   * Defines a list of dependencies that trigger a reset of the `SplitterLayout` when they are changed.\n   *\n   * __Note:__ The order and size of arrays of dependencies must remain constant in React, it's therefore not possible to change size or order between renders.\n   */\n  resetOnCustomDepsChange?: DependencyList;\n}\n\nexport interface SplitterLayoutPropTypes extends CommonProps {\n  /**\n   * Controls if a vertical or horizontal `SplitterLayout` is rendered.\n   */\n  vertical?: boolean;\n  /**\n   * The content areas (optional) to be split. The control will show n-1 splitter bars between n controls in this aggregation.\n   */\n  children?: ReactElement<SplitterElementPropTypes> | ReactElement<SplitterElementPropTypes>[];\n  /**\n   * Defines options to customize the behavior of the SplitterLayout.\n   */\n  options?: SplitterLayoutOptions;\n}\n\n/**\n * A layout that contains several content areas. The content that is added to the `SplitterLayout` should be wrapped\n * into 0-n `SplitterElement`s which define the size and size constraints of the content area.\n * The orientation of the `SplitterLayout` can be set to horizontal (default) or vertical. All content areas of the\n * layout will be arranged in that way. In order to split vertically and horizontally at the same time, splitters need\n * to be nested.\n * By adding or changing `SplitterElement`s to the `SplitterLayout` that make up the content areas, the size can be changed\n * programmatically. Additionally, the content areas can be made non-resizable individually and a minimal size (in px)\n * can be set.\n * The splitter bars are focusable to enable resizing of the content areas via keyboard. The size of the content areas\n * can be manipulated when the splitter bar is focused and Left/Down/Right/Up are pressed.\n */\nconst SplitterLayout = forwardRef<HTMLDivElement, SplitterLayoutPropTypes>((props, ref) => {\n  const { vertical, children, title, style, className, options, ...rest } = props;\n  const [componentRef, sLRef] = useSyncRef(ref);\n  const [reset, setReset] = useState(undefined);\n  const classes = useStyles();\n  const prevSize = useRef({ width: undefined, height: undefined });\n  const initialChildren = useRef(true);\n  const initialCustomDep = useRef(true);\n\n  const layoutElements = useConcatSplitterElements({\n    children: children ?? [],\n    width: style?.width,\n    height: style?.height,\n    vertical\n  });\n\n  useEffect(() => {\n    if (!initialChildren.current && options?.resetOnChildrenChange) {\n      setReset(true);\n    }\n    initialChildren.current = false;\n  }, [children, options?.resetOnChildrenChange]);\n\n  useEffect(\n    () => {\n      if (!initialCustomDep.current) {\n        setReset(true);\n      }\n      initialCustomDep.current = false;\n    },\n    options?.resetOnCustomDepsChange ?? []\n  );\n\n  useEffect(() => {\n    if (options?.resetOnSizeChange) {\n      const layoutObserver = new ResizeObserver(\n        debounce(([container]) => {\n          const containerRect = container.target.getBoundingClientRect();\n          if (!vertical && containerRect.width !== prevSize.current.width) {\n            prevSize.current.width = containerRect.width;\n            setReset(true);\n          } else if (vertical && containerRect.height !== prevSize.current.height) {\n            prevSize.current.height = containerRect.height;\n            setReset(true);\n          }\n        }, 60)\n      );\n\n      layoutObserver.observe(sLRef.current);\n\n      return () => {\n        layoutObserver.disconnect();\n      };\n    }\n  }, [vertical, options?.resetOnSizeChange]);\n\n  useEffect(() => {\n    if (reset) {\n      setReset(false);\n    }\n  }, [reset]);\n\n  return (\n    <SplitterLayoutContext.Provider value={{ vertical, reset }}>\n      <div\n        style={\n          {\n            flexDirection: vertical ? 'column' : 'row',\n            ...style\n          } as CSSProperties\n        }\n        title={title}\n        {...rest}\n        className={clsx(classes.splitterLayout, className)}\n        ref={componentRef}\n        data-splitter-vertical={vertical}\n      >\n        {layoutElements}\n      </div>\n    </SplitterLayoutContext.Provider>\n  );\n});\n\nSplitterLayout.displayName = 'SplitterLayout';\n\nexport { SplitterLayout };\n","import { FlexBox, Text } from '@ui5/webcomponents-react';\nimport React from 'react';\n\nexport const SplitterElementContent = ({ text, background = 'transparent' }) => (\n  <FlexBox style={{ height: '100%', width: '100%', background }} alignItems=\"Center\" justifyContent=\"Center\">\n    <Text>{text}</Text>\n  </FlexBox>\n);\n"],"names":["SplitterLayoutContext","createContext","useStyles","createUseStyles","SplitterElement","forwardRef","props","ref","children","style","className","minSize","size","_0","rest","componentRef","splitterElementRef","useSyncRef","vertical","reset","useContext","safariStyles","Device.isSafari","defaultFlexStyles","flexStyles","setFlexStyles","useState","flexBasisApplied","setFlexBasisApplied","classes","useEffect","elementObserver","element","resetSafariStyles","useIsomorphicLayoutEffect","jsx","clsx","styles","name","pathData","ltr","collection","packageName","registerIcon","isLegacyThemeFamily","horizontalGripIcon","verticalGripIcon","ThemingParameters","CustomThemingParameters","CssSizeVariables","verticalPositionInfo","horizontalPositionInfo","Splitter","i18nBundle","useI18nBundle","localRef","isRtl","useIsRTL","_a","start","useRef","previousSiblingSize","nextSiblingSize","previousElementEnd","nextElementStart","resizerClickOffset","positionKeys","isDragging","setIsDragging","isSiblings","setIsSiblings","handleSplitterMove","e","offset","previousSibling","nextSibling","currentPosition","sizeDiv","splitterWidth","moveLeft","move","handleFallback","touchEvent","prevSibling","prevSiblingRect","nextSiblingRect","currentPos","_b","_c","_d","_e","handleSplitterClick","handleMoveSplitterStart","onHandleKeyDown","keyEventProperties","firstSibling","secondSibling","remainingSize","tickSize","firstSiblingSize","secondSiblingSize","end","removeEventListeners","currentTheme","useCurrentTheme","isHighContrast","jsxs","PRESS_ARROW_KEYS_TO_MOVE","Button","ButtonDesign","Icon","useConcatSplitterElements","concatSplitterElements","useMemo","isValidElement","childrenArray","Children","splitterCount","indicesWithSplitter","child","index","splitterElementChild","indexOfSplitter","cloneElement","SplitterLayout","title","options","sLRef","setReset","prevSize","initialChildren","initialCustomDep","layoutElements","layoutObserver","debounce","container","containerRect","SplitterElementContent","text","background","FlexBox","Text"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8]}