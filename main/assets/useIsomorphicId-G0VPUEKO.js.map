{"version":3,"file":"useIsomorphicId-G0VPUEKO.js","sources":["../../packages/base/src/hooks/useIsomorphicId.ts"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nfunction getRandomId() {\n  if ('randomUUID' in crypto) {\n    return crypto.randomUUID();\n  }\n  const uint32 = window.crypto.getRandomValues(new Uint32Array(1))[0];\n  return uint32.toString(16);\n}\n\nconst canUseUseId = 'useId' in React;\n\nexport function useIsomorphicId(): string {\n  if (canUseUseId) {\n    // TODO might be fixed by https://github.com/webpack/webpack/issues/14814\n    return Reflect.get(React, 'useId')();\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const localId = React.useRef(getRandomId()); // React version never changes at runtime\n  return localId.current;\n}\n"],"names":["getRandomId","canUseUseId","React","useIsomorphicId","React.useRef"],"mappings":"0CAIA,SAASA,GAAc,CACrB,MAAI,eAAgB,OACX,OAAO,aAED,OAAO,OAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,EACpD,SAAS,EAAE,CAC3B,CAEA,MAAMC,EAAc,UAAWC,EAExB,SAASC,GAA0B,CACxC,OAAIF,EAEK,QAAQ,IAAIC,EAAO,OAAO,EAAE,EAIrBE,EAAAA,OAAaJ,EAAA,CAAa,EAC3B,OACjB"}