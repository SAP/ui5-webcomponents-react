import{j as t}from"./jsx-runtime-DtaoT6pD.js";import{j as H}from"./UI5Element-ZYvPEp0D.js";import{r as T}from"./Icons-cAVhCySg.js";import{m as q,n as R}from"./i18n-defaults-SIMqfZL6.js";import{am as X,an as Y,ao as Z,ap as ee,aq as te,ar as ae,u as ie,as as re}from"./i18n-defaults-8iJXv8tC.js";import{u as ne}from"./useIsomorphicId-G0VPUEKO.js";import{c as p}from"./clsx-Zbgk8kpT.js";import{r as $}from"./index-OjgoNOWw.js";import{c as j}from"./react-jss.esm-fzYOEaou.js";import{c as C,f as oe}from"./utils-_oNUceU3.js";import{s as le}from"./spacing-ftLAC4UG.js";import{T as e}from"./ThemingParameters-UghqSl-x.js";import{I as se}from"./index-c-r1P_2d.js";import{T as D}from"./index-SpQb4Cav.js";var s=(i=>(i.Down="Down",i.Up="Up",i.None="None",i))(s||{}),n=(i=>(i.Critical="Critical",i.Error="Error",i.Good="Good",i.Neutral="Neutral",i.None="None",i))(n||{});const ce="down",z="M0 32h512L256 480zm64 32l192 352L448 64H64z",de=!1,me=q,ue="SAP-icons-v4",pe="@ui5/webcomponents-icons";T(ce,{pathData:z,ltr:de,accData:me,collection:ue,packageName:pe});const he="down",L="M256 480q-15 0-22-13L4 70q-4-5-4-12 0-11 7.5-18.5T26 32h460q11 0 18.5 7.5T512 58q0 6-3 12L278 467q-6 13-22 13zM70 83l186 320L442 83H70z",fe=!1,xe=q,ge="SAP-icons-v5",Ne="@ui5/webcomponents-icons";T(he,{pathData:L,ltr:fe,accData:xe,collection:ge,packageName:Ne});H();const ve="down",ye="up",M="M256 32l256 448H0zm0 64L64 448h384z",Te=!1,Ce=R,Se="SAP-icons-v4",be="@ui5/webcomponents-icons";T(ye,{pathData:M,ltr:Te,accData:Ce,collection:Se,packageName:be});const we="up",W="M256 32q16 0 22 13l231 396q3 6 3 13 0 11-7.5 18.5T486 480H26q-11 0-18.5-7.5T0 454q0-8 4-13L234 45q7-13 22-13zm186 397L256 109 70 429h372z",_e=!1,Ie=R,$e="SAP-icons-v5",Fe="@ui5/webcomponents-icons";T(we,{pathData:W,ltr:_e,accData:Ie,collection:$e,packageName:Fe});H();const ke="up",Ae=`var(${C}card_header_focus_offset)`,De=`var(${C}card_header_focus_border)`,O=`var(${C}card_header_focus_radius)`,E=`var(${C}card_header_focus_bottom_radius)`,Oe={helpText:{fontFamily:e.sapFontFamily,fontSize:e.sapFontSize,fontWeight:"normal",color:e.sapTextColor},cardHeader:{...le,position:"relative",backgroundColor:e.sapTile_Background,"&:focus:before":{outline:"none",content:'""',position:"absolute",border:De,pointerEvents:"none",inset:Ae,borderTopLeftRadius:O,borderTopRightRadius:O,borderBottomLeftRadius:E,borderBottomRightRadius:E},"&:focus-visible":{outline:"none"}},cardHeaderClickable:{cursor:"pointer"},headerTitles:{flex:"1 1 auto",display:"flex",flexDirection:"column",justifyContent:"center",minWidth:"0",width:"100%"},headerFirstLine:{display:"flex",justifyContent:"space-between",width:"100%"},headerSecondLine:{position:"relative",fontFamily:e.sapFontFamily,fontSize:e.sapFontSize,fontWeight:"normal",color:e.sapTile_TextColor,minHeight:"1rem",flexGrow:"1",margin:"0.25rem 0 0 0",display:"flex",alignItems:"flex-end",whiteSpace:"normal",wordWrap:"break-word",overflow:"hidden",textAlign:"left",textOverflow:"ellipsis",marginTop:"0.5rem",width:"100%",WebkitLineClamp:"2",WebkitBoxOrient:"vertical"},headerText:{fontFamily:e.sapFontHeaderFamily,fontWeight:"var(--sapFontHeaderWeight)",fontSize:e.sapFontHeader6Size,color:e.sapTile_TitleTextColor,overflow:"hidden",WebkitLineClamp:"3",WebkitBoxOrient:"vertical",whiteSpace:"normal",wordWrap:"break-word",textAlign:"left",textOverflow:"ellipsis"},status:{fontSize:e.sapFontSmallSize,color:e.sapTile_TextColor,lineHeight:"normal",textAlign:"right",marginInlineStart:"1rem",marginBlockStart:"0.125rem"},unitOfMeasurement:{marginInlineStart:"0.25rem",paddingInlineStart:"0.25rem",borderInlineStart:`1px solid ${e.sapTile_TextColor}`},helpIcon:{position:"absolute",right:"0",top:"0"},kpiContent:{display:"flex",alignItems:"flex-start",marginTop:"0.25rem"},mainIndicator:{color:e.sapNeutralTextColor,display:"inline-flex",justifyContent:"flex-start",position:"relative",whiteSpace:"nowrap",textAlign:"right",textOverflow:"ellipsis",fontSize:"2.25rem",fontFamily:e.sapFontFamily,fontWeight:"normal"},value:{paddingBlockStart:"0.125rem",height:"2.875rem",fontFamily:e.sapFontLightFamily},indicatorAndUnit:{display:"grid",textOverflow:"ellipsis",textAlign:"center",height:"2.125rem",paddingInlineStart:"0.375rem",paddingBlock:"0.5rem 0.375rem"},indicator:{gridColumn:1,gridRow:1,width:e.sapFontSmallSize,height:e.sapFontSmallSize,color:"currentColor"},unit:{gridColumn:1,gridRow:1,marginTop:"0.9375rem",fontFamily:e.sapFontFamily,fontSize:e.sapFontSmallSize},indicatorGap:{flex:"1 0 1rem",maxWidth:"3rem"},sideIndicators:{display:"flex",padding:"0.5rem 0",minWidth:0,"& > *":{marginInlineEnd:"1rem"},"&:last-child":{marginInlineEnd:0}},description:{fontFamily:e.sapFontFamily,fontSize:e.sapFontSmallSize,fontWeight:"normal",color:e.sapTile_TextColor,whiteSpace:"normal",overflow:"hidden",textAlign:"left",textOverflow:"ellipsis",marginTop:"0.25rem",width:"100%",display:"-webkit-box",lineHeight:"14px",maxHeight:"14px",WebkitLineClamp:"1",WebkitBoxOrient:"vertical"},good:{color:e.sapPositiveTextColor},error:{color:e.sapNegativeTextColor},critical:{color:e.sapCriticalTextColor},neutral:{color:e.sapNeutralTextColor}},Ee=Oe,He=j(Ee,{name:"AnalyticalCardHeader"}),qe=new Map([[n.Neutral,X],[n.Good,Y],[n.Critical,Z],[n.Error,ee]]),Re=new Map([[s.Up,te],[s.Down,ae]]),v=$.forwardRef((i,S)=>{const{titleText:b,subtitleText:m,value:h,scale:f,state:o,onClick:x,className:l,description:w,status:F,unitOfMeasurement:g,trend:u,style:U,children:V,id:B,...P}=i,a=He(),G=p(a.cardHeader,x&&a.cardHeaderClickable,l),K=p(a.mainIndicator,o===n.Good&&a.good,o===n.Error&&a.error,o===n.Critical&&a.critical,o===n.Neutral&&a.neutral),_=ie("@ui5/webcomponents-react"),J=ne(),r=B??J,k=oe(V),Q=k.map((d,I)=>{var A;return((A=d.props)==null?void 0:A.id)??`${r}-indicator${I}`});let N=`${h??""}${f??""}
`;u&&u!==s.None&&(N+=_.getText(Re.get(u)??""),N+=`
`),o&&o!==n.None&&(N+=_.getText(qe.get(o)??""));let c=`${r}-title`;m&&(c+=` ${r}-subtitle`),g&&(c+=` ${r}-unitOfMeasurement`),c+=` ${r}-mainIndicator`;for(const d of Q)c+=` ${d}`;return w&&(c+=` ${r}-description`),t.jsx("div",{ref:S,className:G,style:U,id:r,"data-sap-ui-fastnavgroup":"true",tabIndex:0,role:"heading","aria-roledescription":_.getText(re),"aria-labelledby":c,...P,onClick:x,slot:"header",children:t.jsxs("div",{children:[t.jsxs("div",{className:a.headerTitles,children:[t.jsxs("div",{className:a.headerFirstLine,children:[t.jsx("span",{role:"heading","aria-level":3,className:a.headerText,id:`${r}-title`,children:b}),F&&t.jsx("span",{className:a.status,children:F})]}),(m||g)&&t.jsxs("div",{className:a.headerSecondLine,children:[t.jsx("span",{id:`${r}-subtitle`,children:m}),g&&t.jsx("span",{id:`${r}-unitOfMeasurement`,className:a.unitOfMeasurement,children:g})]})]}),t.jsxs("div",{className:a.kpiContent,children:[t.jsxs("div",{className:K,id:`${r}-mainIndicator`,"aria-label":N,role:"img",children:[t.jsx("span",{className:a.value,children:h}),t.jsxs("div",{className:a.indicatorAndUnit,children:[u!==s.None&&t.jsx(se,{className:p(a.indicator),name:u===s.Up?ke:ve}),t.jsx("div",{className:a.unit,children:f})]})]}),t.jsx("div",{className:a.indicatorGap}),t.jsx("div",{className:a.sideIndicators,children:k.map((d,I)=>$.cloneElement(d,{id:d.props.id??`${r}-indicator${I}`}))})]}),w&&t.jsx("span",{id:`${r}-description`,className:a.description,children:w})]})})});v.displayName="AnalyticalCardHeader";v.defaultProps={trend:s.None,state:n.None};try{v.displayName="AnalyticalCardHeader",v.__docgenInfo={description:"The `AnalyticalCardHeader` is a KPI header, enabling the AnalyticalCard representation. If this header is used, the `Card` should only receive a chart as content and no footer area.\n\n__Note:__ This component should only be used as header for the `Card` component.",displayName:"AnalyticalCardHeader",props:{titleText:{defaultValue:null,description:"The title of the card",name:"titleText",required:!1,type:{name:"string"}},subtitleText:{defaultValue:null,description:"The subtitle of the card",name:"subtitleText",required:!1,type:{name:"string"}},trend:{defaultValue:{value:"DeviationIndicator.None"},description:"The direction of the trend arrow. Shows deviation for the value of the main number indicator.",name:"trend",required:!1,type:{name:"enum",value:[{value:'"Down"'},{value:'"Up"'},{value:'"None"'},{value:'"Down"'},{value:'"Up"'},{value:'"None"'}]}},value:{defaultValue:null,description:"The numeric value of the main number indicator.",name:"value",required:!1,type:{name:"string"}},scale:{defaultValue:null,description:`Defines the unit of measurement (scaling prefix) for the main indicator.
Financial characters can be used for currencies and counters. The International System of Units (SI) prefixes can be used.`,name:"scale",required:!1,type:{name:"string"}},state:{defaultValue:{value:"ValueColor.None"},description:`The semantic color which represents the state of the main number indicator.
Available options are: <ul> <li><code>None</code></li> <li><code>Error</code></li> <li><code>Critical</code></li> <li><code>Good</code></li> <li><code>Neutral</code></li></ul>`,name:"state",required:!1,type:{name:"enum",value:[{value:'"Critical"'},{value:'"Error"'},{value:'"Good"'},{value:'"Neutral"'},{value:'"None"'},{value:'"None"'},{value:'"Critical"'},{value:'"Error"'},{value:'"Good"'},{value:'"Neutral"'}]}},description:{defaultValue:null,description:"Additional text which adds more details to what is shown in the numeric header.",name:"description",required:!1,type:{name:"string"}},status:{defaultValue:null,description:"Defines the status text.",name:"status",required:!1,type:{name:"string"}},unitOfMeasurement:{defaultValue:null,description:"General unit of measurement for the header. Displayed as side information to the subtitle.",name:"unitOfMeasurement",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Fired when the `AnalyticalCardHeader` is clicked.",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},children:{defaultValue:null,description:'Additional side number indicators. For example "Deviation" and "Target". Not more than two side indicators should be used.\n\n__Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `NumericSideIndicator` in order to preserve the intended design.',name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}}}}}catch{}const je={numericSideIndicator:{display:"flex",flexDirection:"column",alignItems:"flex-end",minWidth:0,position:"relative"},title:{fontFamily:e.sapFontFamily,fontSize:e.sapFontSmallSize,color:e.sapTile_TextColor,textAlign:"end",textOverflow:"ellipsis",overflow:"hidden",paddingBottom:"0.25rem",maxWidth:"100%"},valueContainer:{position:"relative"},number:{fontSize:e.sapFontSmallSize,color:e.sapTile_TitleTextColor,whiteSpace:"pre-line",wordWrap:"break-word",wordBreak:"break-word"},unit:{fontSize:e.sapFontSmallSize,color:e.sapTile_TitleTextColor,whiteSpace:"pre-line",wordWrap:"break-word",wordBreak:"break-word"},stateGood:{color:e.sapPositiveTextColor,"& $number, $unit":{color:e.sapPositiveTextColor}},stateError:{color:e.sapNegativeTextColor,"& $number, $unit":{color:e.sapNegativeTextColor}},stateCritical:{color:e.sapCriticalTextColor,"& $number, $unit":{color:e.sapCriticalTextColor}},stateNeutral:{color:e.sapNeutralTextColor,"& $number, $unit":{color:e.sapNeutralTextColor}}},ze=j(je,{name:"NumericSideIndicator"}),y=$.forwardRef((i,S)=>{const{number:b,state:m,titleText:h,unit:f,className:o,...x}=i,l=ze();return t.jsxs("div",{ref:S,className:p(l.numericSideIndicator,o),...x,children:[t.jsx("span",{className:l.title,children:h}),t.jsxs("div",{className:p(l.valueContainer,Reflect.get(l,`state${m}`)),children:[t.jsx(D,{className:l.number,children:b}),t.jsx(D,{className:l.unit,children:f})]})]})});y.displayName="NumericSideIndicator";y.defaultProps={state:n.None};try{y.displayName="NumericSideIndicator",y.__docgenInfo={description:"Holds a set of side indicator attributes used in the NumericHeader component.",displayName:"NumericSideIndicator",props:{number:{defaultValue:null,description:"The numeric value",name:"number",required:!0,type:{name:"string | number"}},state:{defaultValue:{value:"ValueColor.None"},description:"The semantic color which represents the state of the side indicator.",name:"state",required:!1,type:{name:"enum",value:[{value:'"Critical"'},{value:'"Error"'},{value:'"Good"'},{value:'"Neutral"'},{value:'"None"'}]}},titleText:{defaultValue:null,description:"The title of the indicator",name:"titleText",required:!0,type:{name:"string"}},unit:{defaultValue:null,description:"Defines the unit of measurement (scaling prefix) for the numeric value",name:"unit",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}}}}}catch{}export{v as A,s as D,y as N,n as V};
