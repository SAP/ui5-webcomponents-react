{"version":3,"file":"index-5d4e3cd0.js","sources":["../../packages/main/src/components/FilterBar/FilterBar.jss.ts","../../node_modules/@ui5/webcomponents-icons/dist/v4/list.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/list.js","../../node_modules/@ui5/webcomponents-icons/dist/list.js","../../packages/main/src/components/FilterBar/FilterBarDialog.jss.ts","../../packages/main/src/components/FilterBar/utils.tsx","../../packages/main/src/components/FilterBar/FilterDialog.tsx","../../packages/main/src/components/FilterBar/index.tsx","../../node_modules/@ui5/webcomponents-icons/dist/v4/circle-task-2.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/circle-task-2.js","../../node_modules/@ui5/webcomponents-icons/dist/circle-task-2.js","../../packages/main/src/components/FilterGroupItem/FilterGroupItem.jss.ts","../../packages/main/src/components/FilterGroupItem/index.tsx"],"sourcesContent":["import { CssSizeVariables, ThemingParameters } from '@ui5/webcomponents-react-base';\n\nconst styles = {\n  outerContainer: {\n    background: ThemingParameters.sapObjectHeader_Background\n  },\n  outerContainerWithToolbar: {\n    paddingBlock: '0.5rem 1px',\n    paddingInline: '2rem',\n    boxShadow: ThemingParameters.sapContent_HeaderShadow\n  },\n  filterBarHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    background: ThemingParameters.sapObjectHeader_Background,\n    minHeight: '3rem',\n    paddingBlockEnd: '0.5rem',\n    boxShadow: 'none',\n    flexWrap: 'wrap',\n    '& [data-component-name=\"ToolbarContent\"] > *:first-child': {\n      marginInlineStart: 0\n    }\n  },\n  filterArea: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingBlockStart: '1rem',\n    marginBlockEnd: '1rem',\n    background: ThemingParameters.sapObjectHeader_Background,\n    transition: 'max-height 0.2s ease-out, opacity 0.2s ease-in'\n  },\n  filterAreaClosed: {\n    maxHeight: '0',\n    opacity: 0,\n    padding: 0,\n    margin: 0,\n    overflowY: 'auto'\n  },\n  filterAreaOpen: {\n    opacity: 1\n  },\n  showFiltersBtn: { minWidth: '108px' },\n  loadingContainer: {\n    marginBlockEnd: '0.5rem',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center'\n  },\n  filterBarButtons: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    insetInline: 'auto 0',\n    marginInlineEnd: '1rem',\n    marginBlockEnd: '1rem',\n    '& > *:not(:first-child)': {\n      marginInlineStart: '0.25rem'\n    },\n    '& > *:not(:last-child)': {\n      marginInlineEnd: '0.25rem'\n    }\n  },\n  spacer: {\n    height: 0,\n    marginBlockStart: 0,\n    marginInlineEnd: '1rem',\n    flexGrow: 1,\n    flexShrink: 0,\n    maxWidth: 'calc(var(--_ui5wcr_filter_group_item_flex_basis) * 2)',\n    flexBasis: 'calc(var(--_ui5wcr_filter_group_item_flex_basis))'\n  },\n  lastSpacer: {\n    height: CssSizeVariables.ui5WcrElementHeight,\n    flexGrow: 1,\n    flexShrink: 0,\n    maxWidth: 'calc(var(--_ui5wcr_filter_group_item_flex_basis) * 2)',\n    flexBasis: 'calc(var(--_ui5wcr_filter_group_item_flex_basis))',\n    marginInlineEnd: '1rem'\n  }\n};\n\nexport default styles;\n","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"list\";\nconst pathData = \"M79.5 64q-16 0-16 16t16 16 16-16-16-16zm0 96q-16 0-16 16t16 16 16-16-16-16zm0 96q-16 0-16 16t16 16 16-16-16-16zm0 96q-16 0-16 16t16 16 16-16-16-16zm0 96q-16 0-16 16t16 16 16-16-16-16zm96-352q-16 0-16-16t16-16h257q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257zm257 64q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257q-16 0-16-16t16-16h257zm0 96q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257q-16 0-16-16t16-16h257zm0 96q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257q-16 0-16-16t16-16h257zm0 96q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257q-16 0-16-16t16-16h257z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/list\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"list\";\nconst pathData = \"M454 83H186q-11 0-18.5-7T160 58t7.5-18.5T186 32h268q11 0 18.5 7.5T480 58t-7.5 18-18.5 7zM64 32q13 0 22.5 9.5T96 64t-9.5 22.5T64 96t-22.5-9.5T32 64t9.5-22.5T64 32zm0 128q13 0 22.5 9.5T96 192t-9.5 22.5T64 224t-22.5-9.5T32 192t9.5-22.5T64 160zm390 51H186q-11 0-18.5-7t-7.5-18 7.5-18.5T186 160h268q11 0 18.5 7.5T480 186t-7.5 18-18.5 7zm0 128H186q-11 0-18.5-7t-7.5-18 7.5-18.5T186 288h268q11 0 18.5 7.5T480 314t-7.5 18-18.5 7zM64 288q13 0 22.5 9.5T96 320t-9.5 22.5T64 352t-22.5-9.5T32 320t9.5-22.5T64 288zm390 179H186q-11 0-18.5-7t-7.5-18 7.5-18.5T186 416h268q11 0 18.5 7.5T480 442t-7.5 18-18.5 7zM64 416q13 0 22.5 9.5T96 448t-9.5 22.5T64 480t-22.5-9.5T32 448t9.5-22.5T64 416z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/list\";\nexport { pathData, ltr, accData };","import { isLegacyThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/list.js\";\nimport { pathData as pathDatav5 } from \"./v5/list.js\";\n\nconst pathData = isLegacyThemeFamily() ? pathDatav4 : pathDatav5;\n\nexport default \"list\";\nexport { pathData, ltr, accData };","import { CssSizeVariables, Device, ThemingParameters } from '@ui5/webcomponents-react-base';\n\nconst phoneStyles = Device.isPhone()\n  ? { maxWidth: '100%', maxHeight: '100%', height: '100%', width: '100%', borderRadius: 0, top: 0, left: 0 }\n  : {};\n\nconst styles = {\n  tHactive: {\n    width: '25%',\n    '&::part(column)': {\n      textAlign: 'center'\n    }\n  },\n  groupPanel: {\n    '&::part(content)': {\n      padding: 0\n    }\n  },\n  searchInputContainer: { height: CssSizeVariables.ui5WcrToolbarHeight, paddingBottom: '0.25rem' },\n  searchInput: {\n    width: '100%'\n  },\n  dialogComponent: {\n    width: '40rem',\n    '&::part(content), &::part(footer), &::part(header)': {\n      padding: 0\n    },\n    ...phoneStyles\n  },\n  header: {\n    width: '100%',\n    paddingInline: '1rem',\n    paddingBlock: '0.25rem 0',\n    '& *': {\n      marginBlock: '0.25rem',\n      marginInline: 0\n    },\n    '& ui5-input': {\n      width: '100%'\n    }\n  },\n  subheaderContainer: {\n    paddingBlock: 0,\n    paddingInline: '1rem',\n    boxShadow: ThemingParameters.sapContent_HeaderShadow\n  },\n  subheader: {\n    paddingBlockEnd: '0.25rem',\n    '& [data-component-name=\"ToolbarContent\"] >:last-child': {\n      margin: 0\n    },\n    '& [data-component-name=\"ToolbarContent\"] >:first-child': {\n      marginInline: '0 0.25rem '\n    }\n  },\n  footer: {\n    '& :not(:last-child)': {\n      marginInlineEnd: '0.25rem'\n    }\n  }\n};\n\nexport default styles;\n","import type { Ref } from 'react';\nimport { cloneElement } from 'react';\n\nconst inputTagNames = new Set([\n  'UI5-COMBOBOX',\n  'UI5-DATE-PICKER',\n  'UI5-DATERANGE-PICKER',\n  'UI5-DATETIME-PICKER',\n  'UI5-DURATION-PICKER',\n  'UI5-INPUT',\n  'UI5-MULTI-INPUT',\n  'UI5-RATING-INDICATOR',\n  'UI5-STEP-INPUT',\n  'UI5-TIME-PICKER'\n]);\n\nexport const filterValue = (ref, child) => {\n  const tagName = ref.tagName;\n  let filterItemProps = {};\n  if (inputTagNames.has(tagName)) {\n    filterItemProps = { value: ref.value ?? '' };\n  }\n  if (tagName === 'UI5-SELECT' || tagName === 'UI5-MULTI-COMBOBOX') {\n    const selectedIndices = Array.from(ref.children as HTMLCollectionOf<any>)\n      .map((item, index) => (item.selected ? index : false))\n      .filter((el) => el !== false);\n    const selectedIndicesSet = new Set(selectedIndices);\n    const options = child.props.children.props.children?.map((item, index) => {\n      if (selectedIndicesSet.has(index)) {\n        return cloneElement(item, { selected: true });\n      }\n      return cloneElement(item, { selected: false });\n    });\n    filterItemProps = { children: options };\n  }\n  if (tagName === 'UI5-SWITCH' || tagName === 'UI5-CHECKBOX') {\n    filterItemProps = { checked: ref.checked };\n  }\n  return filterItemProps;\n};\n\nexport const renderSearchWithValue = (renderSearchElement, searchValue) => {\n  return cloneElement(renderSearchElement, {\n    value: searchValue ?? renderSearchElement?.props?.value,\n    'data-component-name': 'FilterBarSearch'\n  });\n};\n\nexport const syncRef = (ref: Ref<unknown>, node: unknown): void => {\n  if (ref) {\n    if (typeof ref === 'function') {\n      ref(node);\n    } else if (ref.hasOwnProperty('current')) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref.current = node;\n    }\n  }\n};\n","import group2Icon from '@ui5/webcomponents-icons/dist/group-2.js';\nimport listIcon from '@ui5/webcomponents-icons/dist/list.js';\nimport searchIcon from '@ui5/webcomponents-icons/dist/search.js';\nimport { enrichEventWithDetails, useI18nBundle } from '@ui5/webcomponents-react-base';\nimport React, { Children, cloneElement, useEffect, useReducer, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { createUseStyles } from 'react-jss';\nimport {\n  BarDesign,\n  ButtonDesign,\n  FlexBoxDirection,\n  FlexBoxJustifyContent,\n  TableMode,\n  TitleLevel,\n  ToolbarStyle\n} from '../../enums/index.js';\nimport {\n  ACTIVE,\n  ALL,\n  BASIC,\n  CANCEL,\n  FIELD,\n  FIELDS_BY_ATTRIBUTE,\n  FILTERS,\n  GROUP_VIEW,\n  HIDE_VALUES,\n  LIST_VIEW,\n  MANDATORY,\n  OK,\n  RESET,\n  SEARCH_FOR_FILTERS,\n  SHOW_VALUES,\n  VISIBLE,\n  VISIBLE_AND_ACTIVE\n} from '../../i18n/i18n-defaults.js';\nimport type { Ui5CustomEvent } from '../../interfaces/index.js';\nimport { addCustomCSSWithScoping } from '../../internal/addCustomCSSWithScoping.js';\nimport { useCanRenderPortal } from '../../internal/ssr.js';\nimport { stopPropagation } from '../../internal/stopPropagation.js';\nimport type { DialogDomRef, TableDomRef, TableRowDomRef } from '../../webComponents/index.js';\nimport {\n  Bar,\n  Button,\n  Dialog,\n  Icon,\n  Input,\n  Option,\n  Panel,\n  SegmentedButton,\n  SegmentedButtonItem,\n  Select,\n  Table,\n  TableColumn,\n  Title\n} from '../../webComponents/index.js';\nimport type { FilterGroupItemPropTypes } from '../FilterGroupItem/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport { Toolbar } from '../Toolbar/index.js';\nimport { ToolbarSpacer } from '../ToolbarSpacer/index.js';\nimport styles from './FilterBarDialog.jss.js';\nimport { filterValue, syncRef } from './utils.js';\n\naddCustomCSSWithScoping(\n  'ui5-table',\n  `\n/* hide table header of panel table */\n:host([data-component-name=\"FilterBarDialogPanelTable\"]) thead {\n  visibility: collapse;\n}\n/* don't display border of panel table */\n:host([data-component-name=\"FilterBarDialogPanelTable\"]) table {\n  border-collapse: unset;\n}\n\n/* don't allow table cells to grow\ntodo: FilterBarDialogPanelTable\n*/\n:host([data-component-name=\"FilterBarDialogTable\"]) table{\n  table-layout: fixed;\n}\n\n:host([data-component-name=\"FilterBarDialogPanelTable\"]) .ui5-table-root {\n  border-bottom: none;\n}\n/* don't display select all checkbox */\n:host([data-component-name=\"FilterBarDialogTable\"]) thead th.ui5-table-select-all-column [ui5-checkbox] {\n visibility: hidden;\n}\n\n:host([data-component-name=\"FilterBarDialogPanelTable\"]) thead th.ui5-table-select-all-column {\n display: none;\n}\n `\n);\n\nconst getActiveFilters = (activeFilterAttribute, filter) => {\n  switch (activeFilterAttribute) {\n    case 'all':\n      return true;\n    case 'visible':\n      return filter.props?.visibleInFilterBar;\n    case 'active':\n      return filter.props?.active;\n    case 'visibleAndActive':\n      return filter.props?.visibleInFilterBar && filter.props?.active;\n    case 'mandatory':\n      return filter.props?.required;\n    default:\n      return true;\n  }\n};\n\nconst compareObjects = (firstObj, secondObj) =>\n  Object.keys(firstObj).find((first) =>\n    Object.keys(secondObj).every((second) => firstObj[second] !== secondObj[first])\n  );\n\nconst useStyles = createUseStyles(styles, { name: 'FilterBarDialog' });\n\ninterface FilterDialogPropTypes {\n  filterBarRefs: any;\n  open: boolean;\n  handleDialogClose: (event: Ui5CustomEvent<DialogDomRef>) => void;\n  children: any;\n  showRestoreButton: boolean;\n  handleRestoreFilters: (e, source, filterElements) => void;\n  handleDialogSave: (e, newRefs, updatedToggledFilters) => void;\n  handleSearchValueChange: React.Dispatch<React.SetStateAction<string>>;\n  handleSelectionChange?: (\n    event: Ui5CustomEvent<\n      TableDomRef,\n      { element: TableRowDomRef; checked: boolean; selectedRows: unknown[]; previouslySelectedRows: unknown[] }\n    >\n  ) => void;\n  handleDialogSearch?: (event: CustomEvent<{ value: string; element: HTMLElement }>) => void;\n  handleDialogCancel?: (event: Ui5CustomEvent<HTMLElement>) => void;\n  portalContainer: Element;\n  dialogRef: React.MutableRefObject<DialogDomRef>;\n  isListView: boolean;\n  setIsListView: React.Dispatch<React.SetStateAction<boolean>>;\n  filteredAttribute: string;\n  setFilteredAttribute: React.Dispatch<React.SetStateAction<string>>;\n  onAfterFiltersDialogOpen: (event: Ui5CustomEvent<DialogDomRef>) => void;\n}\n\nexport const FilterDialog = (props: FilterDialogPropTypes) => {\n  const {\n    filterBarRefs,\n    open,\n    handleDialogClose,\n    children,\n    showRestoreButton,\n    handleRestoreFilters,\n    handleDialogSave,\n    handleSelectionChange,\n    handleDialogSearch,\n    handleDialogCancel,\n    onAfterFiltersDialogOpen,\n    portalContainer,\n    dialogRef,\n    isListView,\n    setIsListView,\n    filteredAttribute,\n    setFilteredAttribute\n  } = props;\n  const classes = useStyles();\n  const [searchString, setSearchString] = useState('');\n  const [toggledFilters, setToggledFilters] = useState({});\n  const dialogRefs = useRef({});\n  const dialogSearchRef = useRef(null);\n  const [showValues, toggleValues] = useReducer((prev) => !prev, false);\n\n  const [forceRequired, setForceRequired] = useState<undefined | TableRowDomRef>();\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const basicText = i18nBundle.getText(BASIC);\n  const cancelText = i18nBundle.getText(CANCEL);\n  const okText = i18nBundle.getText(OK);\n  const searchForFiltersText = i18nBundle.getText(SEARCH_FOR_FILTERS);\n  const filtersTitle = i18nBundle.getText(FILTERS);\n  const resetText = i18nBundle.getText(RESET);\n  const allText = i18nBundle.getText(ALL);\n  const activeText = i18nBundle.getText(ACTIVE);\n  const visibleText = i18nBundle.getText(VISIBLE);\n  const visibleAndActiveText = i18nBundle.getText(VISIBLE_AND_ACTIVE);\n  const mandatoryText = i18nBundle.getText(MANDATORY);\n  const listViewText = i18nBundle.getText(LIST_VIEW);\n  const groupViewText = i18nBundle.getText(GROUP_VIEW);\n  const showValuesText = i18nBundle.getText(SHOW_VALUES);\n  const hideValuesText = i18nBundle.getText(HIDE_VALUES);\n  const fieldText = i18nBundle.getText(FIELD);\n  const fieldsByAttributeText = i18nBundle.getText(FIELDS_BY_ATTRIBUTE);\n\n  const handleSearch = (e) => {\n    if (handleDialogSearch) {\n      handleDialogSearch(enrichEventWithDetails(e, { value: e.target.value, element: e.target }));\n    }\n    setSearchString(e.target.value);\n  };\n  const handleSave = (e) => {\n    handleDialogSave(e, dialogRefs.current, toggledFilters);\n  };\n\n  const handleClose = (e) => {\n    setToggledFilters({});\n    stopPropagation(e);\n    if (handleDialogCancel) {\n      handleDialogCancel(e);\n    }\n    handleDialogClose(e);\n  };\n\n  const handleCancel = (e) => {\n    if (handleDialogCancel) {\n      handleDialogCancel(e);\n    }\n    handleDialogClose(e);\n  };\n\n  const handleRestore = (e) => {\n    setToggledFilters({});\n    handleRestoreFilters(e, 'dialog', { filters: Array.from(dialogRef.current.querySelectorAll('ui5-table-row')) });\n  };\n  const handleViewChange = (e) => {\n    setIsListView(e.detail.selectedItem.dataset.id === 'list');\n  };\n\n  const renderChildren = () => {\n    return children\n      .filter((item) => {\n        return (\n          !!item?.props &&\n          item.props?.visible &&\n          (item.props?.label?.toLowerCase().includes(searchString.toLowerCase()) || searchString.length === 0) &&\n          getActiveFilters(filteredAttribute, item)\n        );\n      })\n      .map((child) => {\n        const filterBarItemRef = filterBarRefs.current[child.key];\n        let filterItemProps = {};\n        if (filterBarItemRef) {\n          filterItemProps = filterValue(filterBarItemRef, child);\n        }\n        if (!child.props.children) return child;\n\n        let isSelected =\n          child.props.visibleInFilterBar || child.props.required || child.type.displayName !== 'FilterGroupItem';\n        if (Object.hasOwn(toggledFilters, child.key)) {\n          isSelected = toggledFilters[child.key];\n        }\n\n        return cloneElement<\n          FilterGroupItemPropTypes & {\n            'data-with-values': boolean;\n            'data-selected': boolean;\n            'data-react-key': boolean;\n          }\n        >(child, {\n          'data-with-values': showValues,\n          'data-selected': isSelected,\n          'data-react-key': child.key,\n          children: {\n            ...child.props.children,\n            props: {\n              ...child.props.children.props,\n              ...filterItemProps\n            },\n            ref: (node) => {\n              if (node) {\n                dialogRefs.current[child.key] = node;\n                syncRef(child.props.children.ref, node);\n              }\n            }\n          }\n        });\n      });\n  };\n\n  const handleAttributeFilterChange = (e) => {\n    setFilteredAttribute(e.detail.selectedOption.dataset.id);\n  };\n\n  const handleCheckBoxChange = (e) => {\n    e.preventDefault();\n\n    if (!e.target.hasAttribute('ui5-table')) {\n      return;\n    }\n    const prevRowsByKey = e.detail.previouslySelectedRows.reduce(\n      (acc, prevSelRow) => ({ ...acc, [prevSelRow.dataset.reactKey]: prevSelRow }),\n      {}\n    );\n    const rowsByKey = e.detail.selectedRows.reduce(\n      (acc, selRow) => ({ ...acc, [selRow.dataset.reactKey]: selRow }),\n      {}\n    );\n\n    const changedRowKey =\n      e.detail.previouslySelectedRows > e.detail.selectedRows\n        ? compareObjects(prevRowsByKey, rowsByKey)\n        : compareObjects(rowsByKey, prevRowsByKey);\n\n    const element = rowsByKey[changedRowKey] || prevRowsByKey[changedRowKey];\n\n    // todo: workaround until specific rows can be disabled\n    if (element.dataset?.required === 'true') {\n      setForceRequired(element);\n      return;\n    }\n\n    if (typeof handleSelectionChange === 'function') {\n      handleSelectionChange(enrichEventWithDetails(e, { element, checked: element.selected }));\n    }\n\n    setToggledFilters((prev) => {\n      return { ...prev, [changedRowKey]: element.selected };\n    });\n  };\n\n  useEffect(() => {\n    if (forceRequired) {\n      forceRequired.setAttribute('selected', 'true');\n      setForceRequired(undefined);\n    }\n  }, [forceRequired]);\n\n  const canRenderPortal = useCanRenderPortal();\n  if (!canRenderPortal) {\n    return null;\n  }\n\n  const renderGroups = () => {\n    const groups = {};\n    Children.forEach(renderChildren(), (child) => {\n      const childGroups = child.props.groupName ?? 'default';\n      if (groups[childGroups]) {\n        groups[childGroups].push(child);\n      } else {\n        groups[childGroups] = [child];\n      }\n    });\n\n    const filterGroups = Object.keys(groups)\n      .sort((x, y) => (x === 'default' ? -1 : y === 'role' ? 1 : 0))\n      .map((item, index) => {\n        return (\n          <Panel\n            headerText={item === 'default' ? basicText : item}\n            className={classes.groupPanel}\n            key={`${item === 'default' ? basicText : item}${index}`}\n          >\n            <Table\n              mode={TableMode.MultiSelect}\n              data-component-name=\"FilterBarDialogPanelTable\"\n              onSelectionChange={handleCheckBoxChange}\n            >\n              {groups[item]}\n            </Table>\n          </Panel>\n        );\n      });\n    return filterGroups;\n  };\n\n  return createPortal(\n    <Dialog\n      open={open}\n      ref={dialogRef}\n      data-component-name=\"FilterBarDialog\"\n      onAfterClose={handleClose}\n      onAfterOpen={onAfterFiltersDialogOpen}\n      resizable\n      draggable\n      className={classes.dialogComponent}\n      preventFocusRestore\n      header={\n        <Bar\n          design={BarDesign.Header}\n          startContent={\n            <Title level={TitleLevel.H4} title={filtersTitle}>\n              {filtersTitle}\n            </Title>\n          }\n          endContent={\n            showRestoreButton && (\n              <Button design={ButtonDesign.Transparent} onClick={handleRestore}>\n                {resetText}\n              </Button>\n            )\n          }\n        />\n      }\n      footer={\n        <Bar\n          design={BarDesign.Footer}\n          endContent={\n            <FlexBox justifyContent={FlexBoxJustifyContent.End} className={classes.footer}>\n              <Button\n                onClick={handleSave}\n                data-component-name=\"FilterBarDialogSaveBtn\"\n                design={ButtonDesign.Emphasized}\n              >\n                {okText}\n              </Button>\n              <Button\n                design={ButtonDesign.Transparent}\n                onClick={handleCancel}\n                data-component-name=\"FilterBarDialogCancelBtn\"\n              >\n                {cancelText}\n              </Button>\n            </FlexBox>\n          }\n        />\n      }\n    >\n      <FlexBox direction={FlexBoxDirection.Column} className={classes.subheaderContainer}>\n        <Toolbar className={classes.subheader} toolbarStyle={ToolbarStyle.Clear}>\n          <Select\n            onChange={handleAttributeFilterChange}\n            title={fieldsByAttributeText}\n            accessibleName={fieldsByAttributeText}\n          >\n            <Option selected={filteredAttribute === 'all'} data-id=\"all\">\n              {allText}\n            </Option>\n            <Option selected={filteredAttribute === 'visible'} data-id=\"visible\">\n              {visibleText}\n            </Option>\n            <Option selected={filteredAttribute === 'active'} data-id=\"active\">\n              {activeText}\n            </Option>\n            <Option selected={filteredAttribute === 'visibleAndActive'} data-id=\"visibleAndActive\">\n              {visibleAndActiveText}\n            </Option>\n            <Option selected={filteredAttribute === 'mandatory'} data-id=\"mandatory\">\n              {mandatoryText}\n            </Option>\n          </Select>\n          <ToolbarSpacer />\n          <Button design={ButtonDesign.Transparent} onClick={toggleValues} aria-live=\"polite\">\n            {showValues ? hideValuesText : showValuesText}\n          </Button>\n          <SegmentedButton onSelectionChange={handleViewChange}>\n            <SegmentedButtonItem icon={listIcon} data-id=\"list\" pressed={isListView} accessibleName={listViewText} />\n            <SegmentedButtonItem\n              icon={group2Icon}\n              data-id=\"group\"\n              pressed={!isListView}\n              accessibleName={groupViewText}\n            />\n          </SegmentedButton>\n        </Toolbar>\n        <FlexBox className={classes.searchInputContainer}>\n          <Input\n            noTypeahead\n            placeholder={searchForFiltersText}\n            onInput={handleSearch}\n            showClearIcon\n            icon={<Icon name={searchIcon} />}\n            ref={dialogSearchRef}\n            className={classes.searchInput}\n            data-component-name=\"FilterBarDialogSearchInput\"\n          />\n        </FlexBox>\n      </FlexBox>\n      <Table\n        data-component-name=\"FilterBarDialogTable\"\n        hideNoData={!isListView}\n        mode={TableMode.MultiSelect}\n        onSelectionChange={handleCheckBoxChange}\n        columns={\n          <>\n            <TableColumn>{fieldText}</TableColumn>\n            {!showValues && <TableColumn className={classes.tHactive}>{activeText}</TableColumn>}\n          </>\n        }\n      >\n        {isListView && renderChildren()}\n      </Table>\n      {!isListView && renderGroups()}\n    </Dialog>,\n    portalContainer ?? document.body\n  );\n};\n","'use client';\n\nimport { debounce, Device, enrichEventWithDetails, useI18nBundle } from '@ui5/webcomponents-react-base';\nimport { clsx } from 'clsx';\nimport type { CSSProperties, ElementType, ReactElement, ReactNode } from 'react';\nimport React, { Children, cloneElement, forwardRef, isValidElement, useEffect, useRef, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ButtonDesign, ToolbarStyle } from '../../enums/index.js';\nimport {\n  ADAPT_FILTERS,\n  CLEAR,\n  FILTERS,\n  GO,\n  HIDE_FILTER_BAR,\n  RESTORE,\n  SHOW_FILTER_BAR\n} from '../../i18n/i18n-defaults.js';\nimport type { CommonProps, Ui5CustomEvent } from '../../interfaces/index.js';\nimport type {\n  ButtonDomRef,\n  DialogDomRef,\n  InputPropTypes,\n  TableDomRef,\n  TableRowDomRef\n} from '../../webComponents/index.js';\nimport { Button } from '../../webComponents/index.js';\nimport type { FilterGroupItemPropTypes } from '../FilterGroupItem/index.js';\nimport { Toolbar } from '../Toolbar/index.js';\nimport { ToolbarSeparator } from '../ToolbarSeparator/index.js';\nimport { ToolbarSpacer } from '../ToolbarSpacer/index.js';\nimport styles from './FilterBar.jss.js';\nimport { FilterDialog } from './FilterDialog.js';\nimport { filterValue, renderSearchWithValue, syncRef } from './utils.js';\n\nconst isPhone = Device.isPhone();\nconst isTablet = Device.isTablet();\n\nexport interface FilterBarPropTypes extends CommonProps {\n  /**\n   * Defines the filters of the `FilterBar`.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `FilterGroupItems` in order to preserve the intended design.\n   */\n  children: ReactNode | ReactNode[];\n  /**\n   * Defines the search field next to the header of the `FilterBar`.\n   *\n   * __Note:__ If `hideToolbar` is `true` this prop has no effect.\n   */\n  search?: ReactElement<InputPropTypes>;\n  /**\n   * Specifies header text or variant management that is shown in the toolbar on the first position\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `VariantManagement`, `Text` or `Title` in order to preserve the intended design.\n   * __Note:__ If `hideToolbar` is `true` this prop has no effect.\n   */\n  header?: ReactNode;\n  /**\n   * Defines whether the toolbar on top of the filter items is displayed.\n   *\n   * __Note__: If set to `true`, `header`, `search` and the \"Hide/Show FilterBar\" button are not available and the rest of the buttons are moved to the bottom right side of the filter area.\n   */\n  hideToolbar?: boolean;\n  /**\n   * Defines whether the `FilterBar` is collapsed.\n   */\n  filterBarCollapsed?: boolean;\n  /**\n   * Defines the width of the `FilterGroupItems`.\n   *\n   * __Note:__ If your filter elements (e.g. `DateRangePicker`) have an internal `minWidth`, please make sure to overwrite it with `minWidth:'auto'` or the corresponding `filterContainerWidth` otherwise it can lead to unintended behavior.\n   */\n  filterContainerWidth?: CSSProperties['width'];\n  /**\n   * Defines whether the `groupName` of the `FilterGroupItems` is displayed.\n   */\n  considerGroupName?: boolean;\n  /**\n   * Defines whether the \"Clear\" button is displayed in the `FilterBar`.\n   */\n  showClearOnFB?: boolean;\n  /**\n   * Defines whether the \"Go\" button is displayed in the `FilterBar`.\n   */\n  showGoOnFB?: boolean;\n  /**\n   * Defines whether the \"Filter\" button is displayed in the `FilterBar`.\n   *\n   * __Note:__ Clicking on the button will open the filter configuration dialog, where you can add/remove filters to the `FilterBar`.\n   */\n  hideFilterConfiguration?: boolean;\n  /**\n   * Defines whether the \"Reset\" button is displayed in the filter configuration dialog.\n   */\n  showResetButton?: boolean;\n  /**\n   * Defines whether the \"Hide/Show Filters\" button is displayed in the `FilterBar`.\n   *\n   * __Note:__ If `hideToolbar` is `true` this prop has no effect.\n   */\n  hideToggleFiltersButton?: boolean;\n  /**\n   * Defines the number of active filters displayed in the \"Filter\" button.\n   *\n   * __Note__: If `hideFilterConfiguration` is `true` this prop has no effect.\n   */\n  activeFiltersCount?: number | string;\n  /**\n   * Defines whether the \"Restore\" button is displayed in the `FilterBar`.\n   */\n  showRestoreOnFB?: boolean;\n  /**\n   * Sets the components outer HTML tag.\n   *\n   * __Note:__ For TypeScript the types of `ref` are bound to the default tag name, if you change it you are responsible to set the respective types yourself.\n   */\n  as?: keyof HTMLElementTagNameMap;\n  /**\n   * Defines where modals are rendered into via `React.createPortal`.\n   *\n   * You can find out more about this [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-working-with-portals--page).\n   *\n   * Defaults to: `document.body`\n   */\n  portalContainer?: Element;\n  /**\n   * The event is fired when the `FilterBar` is collapsed/expanded.\n   */\n  onToggleFilters?: (event: CustomEvent<{ visible: boolean; filters: HTMLElement[]; search: HTMLElement }>) => void;\n  /**\n   * The event is fired when the \"Go\" button of the filter configuration dialog is clicked.\n   */\n  onFiltersDialogSave?: (\n    event: CustomEvent<{\n      elements: Record<string, HTMLElement>;\n      toggledElements?: Record<string, HTMLElement>;\n      filters: HTMLElement[];\n      search: HTMLElement;\n    }>\n  ) => void;\n  /**\n   * The event is fired when the \"Cancel\" button of the filter configuration dialog is clicked or when the dialog is closed by pressing the \"Escape\" key.\n   */\n  onFiltersDialogCancel?: (event: Ui5CustomEvent) => void;\n  /**\n   * The event is fired when the filter configuration dialog is opened.\n   *\n   * __Note:__ By adding `event.preventDefault()` to the function body, opening the dialog is prevented and you can add your own custom component. Even though this is possible, we highly recommend using the default dialog in order to preserve the intended design.\n   */\n  onFiltersDialogOpen?: (event: CustomEvent) => void;\n  /**\n   * The event is fired after the filter configuration dialog has been opened.\n   */\n  onAfterFiltersDialogOpen?: (event: Ui5CustomEvent<DialogDomRef>) => void;\n  /**\n   * The event is fired when the filter configuration dialog is closed.\n   */\n  onFiltersDialogClose?: (event: Ui5CustomEvent) => void;\n  /**\n   * The event is fired when a filter is selected/unselected in the filter configuration dialog.\n   */\n  onFiltersDialogSelectionChange?: (\n    event: Ui5CustomEvent<\n      TableDomRef,\n      { element: TableRowDomRef; checked: boolean; selectedRows: unknown[]; previouslySelectedRows: unknown[] }\n    >\n  ) => void;\n  /**\n   * The event is fired on input in the filter configuration dialog search field.\n   */\n  onFiltersDialogSearch?: (event: CustomEvent<{ value: string; element: HTMLElement }>) => void;\n  /**\n   * The event is fired when the \"Clear\" button is clicked.\n   */\n  onClear?: (event: CustomEvent<{ filters: HTMLElement[]; search: HTMLElement }>) => void;\n  /**\n   * The event is fired when the \"Go\" button is clicked.\n   */\n  onGo?: (\n    event: CustomEvent<{\n      elements: Record<string, HTMLElement>;\n      filters: HTMLElement[];\n      search: HTMLElement;\n    }>\n  ) => void;\n  /**\n   * The event is fired when the \"Restore\" button is clicked.\n   */\n  onRestore?: (\n    event: CustomEvent<{ source: string; filters: HTMLElement[] | TableRowDomRef[]; search?: HTMLElement }>\n  ) => void;\n}\n\nconst resizeObserverEntryWidth = (entry) => {\n  if (entry.borderBoxSize) {\n    // Firefox implements `borderBoxSize` as a single content rect, rather than an array\n    return Array.isArray(entry.borderBoxSize) ? entry.borderBoxSize[0]?.inlineSize : entry.borderBoxSize?.inlineSize;\n  }\n  // Safari doesn't implement `borderBoxSize`\n  return entry.target.getBoundingClientRect().width;\n};\n\ntype ReactKeyWithoutBigInt = string | number;\n\nconst useStyles = createUseStyles(styles, { name: 'FilterBar' });\n/**\n * The `FilterBar` displays filters in a user-friendly manner to populate values for a query. It consists of a row containing the `VariantManagement` or a title, the related buttons, and an area underneath displaying the filters. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The area containing the filters can be hidden or shown using the \"Hide FilterBar / Show FilterBar\" button, the \"Filters\" button shows the filter dialog.\n In this dialog, the consumer has full control over the FilterBar. The filters in this dialog are displayed in one column and organized in groups. Each filter can be marked as visible in the FilterBar by selecting \"Add to FilterBar\".\n */\nconst FilterBar = forwardRef<HTMLDivElement, FilterBarPropTypes>((props, ref) => {\n  const {\n    children,\n    hideToolbar,\n    filterBarCollapsed,\n    considerGroupName,\n    filterContainerWidth = '13.125rem',\n    activeFiltersCount,\n    showClearOnFB,\n    showGoOnFB,\n    hideFilterConfiguration,\n    showRestoreOnFB,\n    showResetButton,\n    hideToggleFiltersButton,\n    style,\n    className,\n    slot,\n    search,\n    header,\n    as = 'div',\n    portalContainer,\n    onToggleFilters,\n    onFiltersDialogOpen,\n    onAfterFiltersDialogOpen,\n    onFiltersDialogCancel,\n    onFiltersDialogClose,\n    onFiltersDialogSave,\n    onClear,\n    onFiltersDialogSelectionChange,\n    onFiltersDialogSearch,\n    onGo,\n    onRestore,\n    ...rest\n  } = props;\n  const initiallyShowFilters = (() => {\n    if (!hideToolbar) {\n      if (filterBarCollapsed !== undefined) {\n        return filterBarCollapsed;\n      }\n      return !isTablet;\n    }\n    return true;\n  })();\n  const [showFilters, setShowFilters] = useState(initiallyShowFilters);\n  const [mountFilters, setMountFilters] = useState(true);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState<string>(undefined);\n  const searchRef = useRef(null);\n  const filterRefs = useRef({});\n  const dialogRef = useRef<DialogDomRef>(null);\n  const [dialogRefs, setDialogRefs] = useState({});\n  const [toggledFilters, setToggledFilters] = useState({});\n  const prevVisibleInFilterBarProps = useRef({});\n  const prevSearchInputPropsValueRef = useRef<string>();\n  const filterBarButtonsRef = useRef(null);\n  const filterAreaRef = useRef<HTMLDivElement>(null);\n  const filterBtnRef = useRef<ButtonDomRef>(null);\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const clearText = i18nBundle.getText(CLEAR);\n  const restoreText = i18nBundle.getText(RESTORE);\n  const showFilterBarText = i18nBundle.getText(SHOW_FILTER_BAR);\n  const hideFilterBarText = i18nBundle.getText(HIDE_FILTER_BAR);\n  const goText = i18nBundle.getText(GO);\n  const filtersText = !hideToolbar ? i18nBundle.getText(FILTERS) : i18nBundle.getText(ADAPT_FILTERS);\n\n  // dialog\n  const [isListView, setIsListView] = useState(true);\n  const [filteredAttribute, setFilteredAttribute] = useState('all');\n\n  useEffect(() => {\n    Children.toArray(children).forEach((item) => {\n      if (isValidElement(item)) {\n        const key = item.key as ReactKeyWithoutBigInt;\n        setToggledFilters((prev) => {\n          if (!item.props.hasOwnProperty('visibleInFilterBar') && prev?.[key] === undefined) {\n            return { ...prev, [key]: true };\n          }\n          if (item.props.hasOwnProperty('visibleInFilterBar')) {\n            return { ...prev, [key]: item.props.visibleInFilterBar };\n          }\n          return prev;\n        });\n      }\n    });\n  }, [children, setToggledFilters]);\n\n  useEffect(() => {\n    if (filterBarCollapsed !== undefined) {\n      setShowFilters(!hideToolbar ? !filterBarCollapsed : true);\n    }\n  }, [setShowFilters, hideToolbar, filterBarCollapsed]);\n\n  const classes = useStyles();\n\n  const filterAreaClasses = clsx(\n    classes.filterArea,\n    showFilters && (!isPhone || (isPhone && hideToolbar)) ? classes.filterAreaOpen : classes.filterAreaClosed\n  );\n\n  const getFilterElements = () => {\n    const search = searchRef.current?.querySelector(`[data-component-name=\"FilterBarSearch\"]`);\n    return {\n      filters: filterRefs?.current ? Object.values(filterRefs.current).filter(Boolean) : [],\n      search\n    };\n  };\n\n  const handleToggle = (e) => {\n    if (onToggleFilters) {\n      onToggleFilters(enrichEventWithDetails(e, { visible: !showFilters, ...getFilterElements() }));\n    }\n    setShowFilters(!showFilters);\n  };\n\n  const [executeGo, setExecuteGo] = useState(false);\n  const handleDialogSave = (e, newRefs, updatedToggledFilters) => {\n    setDialogRefs(newRefs);\n\n    const details = {\n      elements: newRefs,\n      toggledElements: { ...toggledFilters, ...updatedToggledFilters },\n      ...getFilterElements()\n    };\n\n    setToggledFilters((old) => ({ ...old, ...updatedToggledFilters }));\n    if (onFiltersDialogSave) {\n      onFiltersDialogSave(enrichEventWithDetails(e, details));\n    }\n    handleDialogClose(e);\n  };\n\n  const handleDialogOpen = (e) => {\n    if (typeof onFiltersDialogOpen === 'function') {\n      onFiltersDialogOpen(e);\n    }\n    if (e.defaultPrevented) {\n      setDialogOpen(false);\n    } else {\n      setDialogOpen(true);\n    }\n  };\n\n  const handleDialogClose = (e) => {\n    if (onFiltersDialogClose) {\n      onFiltersDialogClose(enrichEventWithDetails(e));\n    }\n    setDialogOpen(false);\n    filterBtnRef.current?.focus();\n  };\n\n  const handleGoOnFb = (e) => {\n    if (typeof onGo === 'function') {\n      onGo(enrichEventWithDetails(e, { elements: filterRefs.current, ...getFilterElements() }));\n    }\n  };\n\n  const safeChildren = () => {\n    if (Object.keys(toggledFilters).length > 0) {\n      return Children.toArray(children).map((child) => {\n        if (isValidElement(child)) {\n          const key = child.key as ReactKeyWithoutBigInt;\n          if (toggledFilters?.[key] !== undefined) {\n            // @ts-expect-error: child should always be a FilterGroupItem w/o portal\n            return cloneElement<FilterGroupItemPropTypes, HTMLDivElement>(child, {\n              visibleInFilterBar: toggledFilters[key]\n            });\n          }\n        }\n        return child;\n      });\n    }\n    return Children.toArray(children);\n  };\n  const prevChildren = useRef({});\n\n  const renderChildren = () => {\n    const childProps = { considerGroupName, ['data-in-fb']: true, ['data-with-toolbar']: !hideToolbar } as any;\n\n    return safeChildren()\n      .filter((item): item is ReactElement => {\n        if (!isValidElement(item)) {\n          return false;\n        }\n        return item?.props?.visible && item.props?.visibleInFilterBar;\n      })\n      .map((child) => {\n        const key = child.key as ReactKeyWithoutBigInt;\n        // necessary because of varying widths of input elements\n        if (filterContainerWidth) {\n          childProps.style = { width: filterContainerWidth, ...child.props.style };\n        }\n        if (hideFilterConfiguration) {\n          return cloneElement(child, { ...childProps });\n        }\n        prevVisibleInFilterBarProps.current[key] = child.props.visibleInFilterBar;\n        let filterItemProps = {};\n        if (Object.keys(dialogRefs).length > 0) {\n          const dialogItemRef = dialogRefs[key];\n          if (dialogItemRef) {\n            filterItemProps = filterValue(dialogItemRef, child);\n          }\n        }\n        if (!child.props.children) {\n          return cloneElement(child, {\n            ...childProps\n          });\n        }\n        if (\n          prevChildren.current?.[key] &&\n          //Input\n          (child.props.children?.props?.value !== prevChildren.current?.[key]?.value ||\n            //Checkbox\n            child.props.children?.props?.checked !== prevChildren.current?.[key]?.checked ||\n            //Selectable\n            (Array.isArray(child.props.children?.props?.children) &&\n              child.props.children?.props?.children?.map((item) => item.props.selected).join(',') !==\n                prevChildren?.current?.[key]?.children?.map((item) => item.props.selected).join(',')))\n        ) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          const { [child.key]: _omit, ...rest } = dialogRefs;\n          setDialogRefs(rest);\n        }\n        prevChildren.current[key] = child.props.children.props;\n\n        return cloneElement(child, {\n          ...childProps,\n          children: {\n            ...child.props.children,\n            props: {\n              ...child.props.children.props,\n              ...filterItemProps\n            },\n            ref: (node) => {\n              filterRefs.current[key] = node;\n              if (!dialogOpen) syncRef(child.props.children.ref, node);\n            }\n          }\n        });\n      });\n  };\n  const handleRestoreFilters = (e, source, filterElements) => {\n    if (source === 'filterBar' && showGoOnFB) {\n      setMountFilters(false);\n    }\n    if (onRestore) {\n      onRestore(enrichEventWithDetails(e, { source, ...filterElements }));\n    }\n  };\n\n  useEffect(() => {\n    if (!mountFilters) {\n      setMountFilters(true);\n    }\n  }, [mountFilters]);\n\n  const handleFBRestore = (e) => {\n    handleRestoreFilters(e, 'filterBar', getFilterElements());\n  };\n\n  const handleClear = (e) => {\n    if (typeof onClear === 'function') {\n      onClear(enrichEventWithDetails(e, getFilterElements()));\n    }\n  };\n\n  const cssClasses = clsx(classes.outerContainer, className, !hideToolbar && classes.outerContainerWithToolbar);\n\n  useEffect(() => {\n    prevSearchInputPropsValueRef.current = search?.props?.value;\n  }, [search?.props?.value]);\n\n  const prevSearchInputPropsValue = prevSearchInputPropsValueRef.current;\n\n  useEffect(() => {\n    if (prevSearchInputPropsValue !== search?.props?.value) {\n      setSearchValue(search?.props?.value);\n    }\n  }, [prevSearchInputPropsValue, search?.props?.value]);\n\n  const ToolbarButtons = (\n    <>\n      {showGoOnFB && (\n        <Button onClick={handleGoOnFb} design={ButtonDesign.Emphasized}>\n          {goText}\n        </Button>\n      )}\n      {!hideToggleFiltersButton && !hideToolbar && !isPhone && (\n        <Button\n          onClick={handleToggle}\n          design={ButtonDesign.Transparent}\n          className={classes.showFiltersBtn}\n          aria-live=\"polite\"\n        >\n          {showFilters ? hideFilterBarText : showFilterBarText}\n        </Button>\n      )}\n      {showClearOnFB && (\n        <Button onClick={handleClear} design={ButtonDesign.Transparent}>\n          {clearText}\n        </Button>\n      )}\n      {showRestoreOnFB && (\n        <Button onClick={handleFBRestore} design={ButtonDesign.Transparent}>\n          {restoreText}\n        </Button>\n      )}\n      {!hideFilterConfiguration && (\n        <Button onClick={handleDialogOpen} aria-haspopup=\"dialog\" design={ButtonDesign.Transparent} ref={filterBtnRef}>\n          {`${filtersText}${\n            activeFiltersCount && parseInt(activeFiltersCount as string, 10) > 0 ? ` (${activeFiltersCount})` : ''\n          }`}\n        </Button>\n      )}\n    </>\n  );\n\n  const hasButtons = ToolbarButtons.props.children.some(Boolean);\n  const [filterBarButtonsWidth, setFilterBarButtonsWidth] = useState(undefined);\n\n  const [filterAreaWidth, setFilterAreaWidth] = useState(undefined);\n  const [firstChildWidth, setFirstChildWidth] = useState(undefined);\n  useEffect(() => {\n    const debouncedObserverFn = debounce(([area]: ResizeObserverEntry[]) => {\n      const firstChild = area.target?.children?.[0] as HTMLDivElement;\n      if (firstChild && firstChild.offsetWidth !== firstChildWidth) {\n        setFirstChildWidth(firstChild.offsetWidth + 16 /*margin*/);\n      }\n    }, 100);\n    const filterAreaObserver = new ResizeObserver(debouncedObserverFn);\n    if (hideToolbar && filterAreaRef.current) {\n      filterAreaObserver.observe(filterAreaRef.current);\n    }\n    return () => {\n      debouncedObserverFn.cancel();\n      filterAreaObserver.disconnect();\n    };\n  }, [filterAreaRef.current, hideToolbar]);\n\n  useEffect(() => {\n    const debouncedObserverFn = debounce(([area]: ResizeObserverEntry[]) => {\n      const filterWidth = resizeObserverEntryWidth(area);\n      if (filterWidth !== filterBarButtonsWidth) {\n        setFilterAreaWidth(filterWidth);\n      }\n    }, 100);\n    const filterAreaObserver = new ResizeObserver(debouncedObserverFn);\n    if (hideToolbar && filterAreaRef.current) {\n      filterAreaObserver.observe(filterAreaRef.current);\n    }\n    return () => {\n      debouncedObserverFn.cancel();\n      filterAreaObserver.disconnect();\n    };\n  }, [filterAreaWidth, filterAreaRef.current, hideToolbar]);\n\n  useEffect(() => {\n    const debouncedObserverFn = debounce(([buttons]: ResizeObserverEntry[]) => {\n      const buttonsWidth = resizeObserverEntryWidth(buttons);\n      if (buttonsWidth !== filterBarButtonsWidth) {\n        setFilterBarButtonsWidth(buttonsWidth);\n      }\n    }, 100);\n    const filterBarButtonsObserver = new ResizeObserver(debouncedObserverFn);\n    if (hideToolbar && filterBarButtonsRef.current) {\n      filterBarButtonsObserver.observe(filterBarButtonsRef.current);\n    }\n    return () => {\n      debouncedObserverFn.cancel();\n      filterBarButtonsObserver.disconnect();\n    };\n  }, [filterBarButtonsRef.current, hideToolbar, filterBarButtonsWidth]);\n\n  const calculatedChildren = renderChildren();\n\n  useEffect(() => {\n    if (executeGo) {\n      setExecuteGo((prevEvent) => {\n        onGo(prevEvent as any);\n        return false;\n      });\n    }\n  }, [executeGo]);\n\n  // calculates the number of spacers depending on the available width inside the row\n  const renderSpacers = () => {\n    if (firstChildWidth && filterAreaWidth && filterBarButtonsWidth) {\n      const spacers = [];\n      const filterItemsWidth = calculatedChildren.length * firstChildWidth;\n      //early return if enough space is available\n      if (filterAreaWidth - filterBarButtonsWidth > filterItemsWidth) {\n        return null;\n      }\n      const usedSpaceLastRow = filterItemsWidth % filterAreaWidth;\n      const emptySpaceLastRow = filterAreaWidth - usedSpaceLastRow;\n      // deduct width of buttons container of the empty space in the last row to calculate number of spacers\n      const numberOfSpacers = Math.floor((emptySpaceLastRow - filterBarButtonsWidth) / firstChildWidth);\n      for (let i = 0; i < numberOfSpacers; i++) {\n        spacers.push(<div key={`filter-spacer-${i}`} className={classes.spacer} />);\n      }\n      return spacers;\n    }\n    return null;\n  };\n  const CustomTag = as as ElementType;\n  return (\n    <>\n      {dialogOpen && !hideFilterConfiguration && (\n        <FilterDialog\n          filterBarRefs={filterRefs}\n          open={dialogOpen}\n          handleDialogClose={handleDialogClose}\n          handleRestoreFilters={handleRestoreFilters}\n          handleSearchValueChange={setSearchValue}\n          showRestoreButton={showResetButton}\n          handleSelectionChange={onFiltersDialogSelectionChange}\n          handleDialogSave={handleDialogSave}\n          handleDialogSearch={onFiltersDialogSearch}\n          handleDialogCancel={onFiltersDialogCancel}\n          onAfterFiltersDialogOpen={onAfterFiltersDialogOpen}\n          portalContainer={portalContainer}\n          dialogRef={dialogRef}\n          isListView={isListView}\n          setIsListView={setIsListView}\n          filteredAttribute={filteredAttribute}\n          setFilteredAttribute={setFilteredAttribute}\n        >\n          {safeChildren()}\n        </FilterDialog>\n      )}\n      <CustomTag\n        ref={ref}\n        className={cssClasses}\n        style={{ ['--_ui5wcr_filter_group_item_flex_basis']: filterContainerWidth, ...style } as CSSProperties}\n        slot={slot}\n        {...rest}\n      >\n        {!hideToolbar && (\n          <Toolbar className={classes.filterBarHeader} toolbarStyle={ToolbarStyle.Clear}>\n            {header}\n            {header && search && <ToolbarSeparator />}\n            {search && !isPhone && <div ref={searchRef}>{renderSearchWithValue(search, searchValue)}</div>}\n            {hasButtons && <ToolbarSpacer />}\n            {ToolbarButtons}\n          </Toolbar>\n        )}\n        {mountFilters && (\n          <div className={filterAreaClasses} style={{ position: 'relative' }} ref={filterAreaRef}>\n            {calculatedChildren}\n            {hideToolbar && (\n              <>\n                {renderSpacers()}\n                <div\n                  style={{\n                    width: filterBarButtonsWidth ? `${filterBarButtonsWidth}px` : '120px',\n                    minWidth: filterBarButtonsWidth ? `${filterBarButtonsWidth}px` : '120px'\n                  }}\n                  className={classes.lastSpacer}\n                >\n                  <div className={classes.filterBarButtons} ref={filterBarButtonsRef}>\n                    {ToolbarButtons}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        )}\n      </CustomTag>\n    </>\n  );\n});\n\nFilterBar.displayName = 'FilterBar';\nexport { FilterBar };\n","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"circle-task-2\";\nconst pathData = \"M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20q-54 0-100-20t-81-55-55-81.5T0 256t20-99.5T75 75t81-55T256 0z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/circle-task-2\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"circle-task-2\";\nconst pathData = \"M256 0q53 0 100 20t81.5 54.5T492 156t20 100-20 100-54.5 81.5T356 492t-100 20-100-20-81.5-54.5T20 356 0 256t20-100 54.5-81.5T156 20 256 0z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/circle-task-2\";\nexport { pathData, ltr, accData };","import { isLegacyThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/circle-task-2.js\";\nimport { pathData as pathDatav5 } from \"./v5/circle-task-2.js\";\n\nconst pathData = isLegacyThemeFamily() ? pathDatav4 : pathDatav5;\n\nexport default \"circle-task-2\";\nexport { pathData, ltr, accData };","import { ThemingParameters } from '@ui5/webcomponents-react-base';\n\nconst styles = {\n  filterItem: {\n    marginBlockEnd: '1rem',\n    marginInlineEnd: '1rem',\n    flexBasis: 'var(--_ui5wcr_filter_group_item_flex_basis)',\n    maxWidth: 'calc(var(--_ui5wcr_filter_group_item_flex_basis))',\n    flexGrow: 1,\n    flexShrink: 0,\n    '&[data-with-toolbar=false]': {\n      maxWidth: 'calc(var(--_ui5wcr_filter_group_item_flex_basis) * 2)'\n    }\n  },\n  innerFilterItemContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start',\n    '& :last-child': {\n      width: '100%'\n    }\n  },\n  loadingContainer: {\n    display: 'flex',\n    width: '100%',\n    height: '1.625rem',\n    justifyContent: 'center'\n  },\n  dialogCellLabel: { marginBottom: '0.25rem', color: ThemingParameters.sapTextColor },\n  dialogActiveCell: { width: '25%', textAlign: 'center' },\n  dialogActiveIcon: {\n    flexGrow: 1,\n    color: ThemingParameters.sapNeutralColor,\n    transform: 'scale(-50%)'\n  },\n  labelContainer: {\n    '& :not(:first-child)': {\n      width: '100%'\n    }\n  }\n};\n\nexport default styles;\n","'use client';\n\nimport circleTask2Icon from '@ui5/webcomponents-icons/dist/circle-task-2.js';\nimport { clsx } from 'clsx';\nimport type { ReactElement } from 'react';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { FlexBoxDirection, BusyIndicatorSize } from '../../enums/index.js';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport { addCustomCSSWithScoping } from '../../internal/addCustomCSSWithScoping.js';\nimport { BusyIndicator } from '../../webComponents/BusyIndicator/index.js';\nimport { Icon, TableCell, TableRow } from '../../webComponents/index.js';\nimport { Label } from '../../webComponents/Label/index.js';\nimport { FlexBox } from '../FlexBox/index.js';\nimport styles from './FilterGroupItem.jss.js';\n\naddCustomCSSWithScoping(\n  'ui5-table-row',\n  `\n/* hide navigated cell */\n:host([data-component-name=\"FilterBarDialogTableRow\"]) .ui5-table-row-navigated {\n display:none;\n}\n`\n);\n\nconst useStyles = createUseStyles(styles, { name: 'FilterGroupItem' });\n\nexport interface FilterGroupItemPropTypes extends CommonProps {\n  /**\n   * Content of the `FilterGroupItem`.\n   *\n   * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use form elements like `Input`, `Select` or `Switch` in order to preserve the intended design.\n   */\n  children: ReactElement;\n  /**\n   * Defines the label of the `FilterGroupItem`.<br />\n   * __Note:__ This label is used for the search in the filter configuration dialog.\n   */\n  label?: string;\n  /**\n   * Defines the group name of the filter.<br />\n   * __Note:__ If no `groupName` is set, the name defaults to \"Basic\".\n   */\n  groupName?: string;\n  /**\n   * Defines the tooltip of the label.<br />\n   * __Note:__ If no `labelTooltip` is set, it uses the `label` text as tooltip.\n   */\n  labelTooltip?: string;\n  /**\n   * Defines whether a loading indicator should be shown in the `FilterGroupItem`.\n   */\n  loading?: boolean;\n  /**\n   * Defines whether the filter is required.<br />\n   * __Note:__ Required filters cannot be removed from the `FilterBar`.\n   */\n  required?: boolean;\n  /**\n   * Defines whether the filter is visible.\n   */\n  visible?: boolean;\n  /**\n   * Defines whether the filter is visible in the `FilterBar` or only in the filter configuration dialog.\n   */\n  visibleInFilterBar?: boolean;\n  /**\n   * Defines whether the `groupName` of the `FilterGroupItems` is displayed in the filter configuration dialog.\n   */\n  considerGroupName?: boolean;\n  /**\n   * Defines whether the filter is displayed with a value. If it's active an indicator will be shown in the filter configuration dialog.\n   */\n  active?: boolean;\n}\n\n/**\n * Represents a filter belonging to the `FilterBar`.\n */\nexport const FilterGroupItem = forwardRef<HTMLDivElement, FilterGroupItemPropTypes>((props, ref) => {\n  const classes = useStyles();\n  const {\n    groupName = 'default',\n    considerGroupName,\n    label = '',\n    labelTooltip,\n    required = false,\n    visible = true,\n    visibleInFilterBar,\n    children,\n    loading,\n    className,\n    slot,\n    active,\n    ...rest\n  } = props;\n\n  const inFB = props['data-in-fb'];\n  const withValues = props['data-with-values'];\n  const selected = props['data-selected'];\n\n  if (!required && (!visible || (inFB && !visibleInFilterBar))) return null;\n\n  // todo use context instead of data attributes\n  if (!inFB) {\n    return (\n      //todo: disable selection for required fields when it's possible, or the table is fully controllable (https://github.com/SAP/ui5-webcomponents/issues/5662)\n      <TableRow\n        data-react-key={props['data-react-key']}\n        selected={selected}\n        data-required={required}\n        data-component-name=\"FilterBarDialogTableRow\"\n      >\n        <TableCell>\n          <FlexBox direction={FlexBoxDirection.Column} className={classes.labelContainer}>\n            <Label\n              className={classes.dialogCellLabel}\n              title={labelTooltip ?? label}\n              required={required}\n              showColon={!!label && withValues}\n            >\n              {label}\n            </Label>\n            {withValues && children}\n          </FlexBox>\n        </TableCell>\n        {!withValues && (\n          <TableCell className={classes.dialogActiveCell}>\n            {active && <Icon name={circleTask2Icon} className={classes.dialogActiveIcon} />}\n          </TableCell>\n        )}\n      </TableRow>\n    );\n  }\n\n  return (\n    <div ref={ref} slot={slot} {...rest} className={clsx(classes.filterItem, className)}>\n      <div className={classes.innerFilterItemContainer}>\n        <FlexBox>\n          <Label title={labelTooltip ?? label} required={required} showColon={!!label}>\n            {`${considerGroupName && groupName !== 'default' ? `${groupName}: ` : ''}\n          ${label}`}\n          </Label>\n        </FlexBox>\n        {loading ? (\n          <BusyIndicator className={classes.loadingContainer} active size={BusyIndicatorSize.Small} />\n        ) : (\n          children\n        )}\n      </div>\n    </div>\n  );\n});\n\nFilterGroupItem.displayName = 'FilterGroupItem';\n\nFilterGroupItem.defaultProps = {\n  groupName: 'default',\n  visible: true,\n  required: false,\n  label: ''\n};\n"],"names":["styles","ThemingParameters","CssSizeVariables","styles$5","name","pathData","ltr","collection","packageName","registerIcon","isLegacyThemeFamily","listIcon","phoneStyles","Device.isPhone","styles$3","inputTagNames","filterValue","ref","child","tagName","filterItemProps","selectedIndices","item","index","el","selectedIndicesSet","_a","cloneElement","renderSearchWithValue","renderSearchElement","searchValue","syncRef","node","addCustomCSSWithScoping","getActiveFilters","activeFilterAttribute","filter","_b","_c","_d","_e","compareObjects","firstObj","secondObj","first","second","useStyles","createUseStyles","FilterDialog","props","filterBarRefs","open","handleDialogClose","children","showRestoreButton","handleRestoreFilters","handleDialogSave","handleSelectionChange","handleDialogSearch","handleDialogCancel","onAfterFiltersDialogOpen","portalContainer","dialogRef","isListView","setIsListView","filteredAttribute","setFilteredAttribute","classes","searchString","setSearchString","useState","toggledFilters","setToggledFilters","dialogRefs","useRef","dialogSearchRef","showValues","toggleValues","useReducer","prev","forceRequired","setForceRequired","i18nBundle","useI18nBundle","basicText","BASIC","cancelText","CANCEL","okText","OK","searchForFiltersText","SEARCH_FOR_FILTERS","filtersTitle","FILTERS","resetText","RESET","allText","ALL","activeText","ACTIVE","visibleText","VISIBLE","visibleAndActiveText","VISIBLE_AND_ACTIVE","mandatoryText","MANDATORY","listViewText","LIST_VIEW","groupViewText","GROUP_VIEW","showValuesText","SHOW_VALUES","hideValuesText","HIDE_VALUES","fieldText","FIELD","fieldsByAttributeText","FIELDS_BY_ATTRIBUTE","handleSearch","e","enrichEventWithDetails","handleSave","handleClose","stopPropagation","handleCancel","handleRestore","handleViewChange","renderChildren","filterBarItemRef","isSelected","handleAttributeFilterChange","handleCheckBoxChange","prevRowsByKey","acc","prevSelRow","rowsByKey","selRow","changedRowKey","element","useEffect","useCanRenderPortal","renderGroups","groups","Children","childGroups","x","y","jsx","Panel","Table","TableMode","createPortal","jsxs","Dialog","Bar","BarDesign","Title","TitleLevel","Button","ButtonDesign","FlexBox","FlexBoxJustifyContent","FlexBoxDirection","Toolbar","ToolbarStyle","Select","Option","ToolbarSpacer","SegmentedButton","SegmentedButtonItem","group2Icon","Input","Icon","searchIcon","Fragment","TableColumn","isPhone","isTablet","Device.isTablet","resizeObserverEntryWidth","entry","FilterBar","forwardRef","hideToolbar","filterBarCollapsed","considerGroupName","filterContainerWidth","activeFiltersCount","showClearOnFB","showGoOnFB","hideFilterConfiguration","showRestoreOnFB","showResetButton","hideToggleFiltersButton","style","className","slot","search","header","as","onToggleFilters","onFiltersDialogOpen","onFiltersDialogCancel","onFiltersDialogClose","onFiltersDialogSave","onClear","onFiltersDialogSelectionChange","onFiltersDialogSearch","onGo","onRestore","rest","initiallyShowFilters","showFilters","setShowFilters","mountFilters","setMountFilters","dialogOpen","setDialogOpen","setSearchValue","searchRef","filterRefs","setDialogRefs","prevVisibleInFilterBarProps","prevSearchInputPropsValueRef","filterBarButtonsRef","filterAreaRef","filterBtnRef","clearText","CLEAR","restoreText","RESTORE","showFilterBarText","SHOW_FILTER_BAR","hideFilterBarText","HIDE_FILTER_BAR","goText","GO","filtersText","ADAPT_FILTERS","isValidElement","key","filterAreaClasses","clsx","getFilterElements","search2","handleToggle","executeGo","setExecuteGo","newRefs","updatedToggledFilters","details","old","handleDialogOpen","handleGoOnFb","safeChildren","prevChildren","childProps","dialogItemRef","_g","_f","_i","_h","_k","_j","_n","_m","_l","_q","_p","_o","_omit","rest2","source","filterElements","handleFBRestore","handleClear","cssClasses","prevSearchInputPropsValue","ToolbarButtons","hasButtons","filterBarButtonsWidth","setFilterBarButtonsWidth","filterAreaWidth","setFilterAreaWidth","firstChildWidth","setFirstChildWidth","debouncedObserverFn","debounce","area","firstChild","filterAreaObserver","filterWidth","buttons","buttonsWidth","filterBarButtonsObserver","calculatedChildren","prevEvent","renderSpacers","spacers","filterItemsWidth","usedSpaceLastRow","emptySpaceLastRow","numberOfSpacers","i","CustomTag","ToolbarSeparator","circleTask2Icon","styles$1","FilterGroupItem","groupName","label","labelTooltip","required","visible","visibleInFilterBar","loading","active","inFB","withValues","selected","Label","BusyIndicator","BusyIndicatorSize","TableRow","TableCell"],"mappings":"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","x_google_ignoreList":[1,2,3,8,9,10]}