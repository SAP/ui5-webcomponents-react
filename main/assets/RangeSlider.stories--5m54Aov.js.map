{"version":3,"mappings":"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","names":["block0","context","tags","suffix","html","classMap","ifDefined","block1","styleMap","scopeTag","block8","block9","block2","repeat","item","index","block3","block6","block4","block5","block7","registerThemePropertiesLoader","defaultThemeBase","defaultTheme","styleData","__decorate","decorators","target","key","desc","c","d","i","RangeSlider_1","RangeSlider","SliderBase","stepPrecision","RANGE_SLIDER_ARIA_DESCRIPTION","isRTL","isReversed","ariaHandlesText","RANGE_SLIDER_END_HANDLE_DESCRIPTION","RANGE_SLIDER_START_HANDLE_DESCRIPTION","affectedValue","normalizedStartValue","normalizedEndValue","isEscape","min","max","isEnd","isHome","newValueOffset","ctor","propValue","newValue","newStartValue","newEndValue","startValue","endValue","progressBarDom","event","currentPageXPos","newValues","clientX","value","startHandle","endHandle","handleStartDomRect","handleEndDomRect","inHandleStartDom","inHandleEndDom","isNewValueInCurrentRange","isPressInCurrentRange","initialStartHandlePageXPos","selectedRange","step","dom","startValuePageX","positionOffset","prevStartValue","prevEndValue","count","arr","isBiggerThanStartValue","isBiggerThanEndValue","getI18nBundle","property","Float","customElement","RangeSliderTemplate","Icon","rangeSliderStyles","RangeSlider$2","withWebComponent","__vitePreload","RangeSlider$3","Description","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","DocsHeader","Canvas","Story","args","ArgsTableWithNote","Markdown","Footer","defaultStory","componentMeta","__namedExportsOrder"],"sources":["../../node_modules/@ui5/webcomponents/dist/generated/templates/RangeSliderTemplate.lit.js","../../node_modules/@ui5/webcomponents/dist/generated/themes/RangeSlider.css.js","../../node_modules/@ui5/webcomponents/dist/RangeSlider.js","../../packages/main/src/webComponents/RangeSlider/index.tsx","../../packages/main/src/webComponents/RangeSlider/RangeSliderDescription.md?raw","../../packages/main/src/webComponents/RangeSlider/RangeSlider.stories.mdx"],"sourcesContent":["/* eslint no-unused-vars: 0 */\nimport { html, repeat, classMap, styleMap, ifDefined, scopeTag } from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nfunction block0(context, tags, suffix) { return suffix ? html `<div class=\"ui5-slider-root ${classMap(this.classes.root)}\" @mousedown=\"${this._onmousedown}\" @touchstart=\"${this._ontouchstart}\" @mouseover=\"${this._onmouseover}\" @mouseout=\"${this._onmouseout}\" @keydown=\"${this._onkeydown}\" @keyup=\"${this._onkeyup}\" part=\"root-container\"><span id=\"${ifDefined(this._id)}-startHandleDesc\" class=\"ui5-hidden-text\">${ifDefined(this._ariaHandlesText.startHandleText)}</span><span id=\"${ifDefined(this._id)}-endHandleDesc\" class=\"ui5-hidden-text\">${ifDefined(this._ariaHandlesText.endHandleText)}</span><div class=\"ui5-slider-inner\">${this.step ? block1.call(this, context, tags, suffix) : undefined}<div class=\"ui5-slider-progress-container\" part=\"progress-container\"><div class=\"ui5-slider-progress\" part=\"progress-bar\" style=\"${styleMap(this.styles.progress)}\" @focusin=\"${this._onfocusin}\" @focusout=\"${this._onfocusout}\" role=\"slider\" tabindex=\"${ifDefined(this._tabIndex)}\" aria-orientation=\"horizontal\" aria-valuemin=\"${ifDefined(this.min)}\" aria-valuemax=\"${ifDefined(this.max)}\" aria-valuenow=\"${ifDefined(this._ariaValueNow)}\" aria-valuetext=\"From ${ifDefined(this.startValue)} to ${ifDefined(this.endValue)}\" aria-labelledby=\"${ifDefined(this._ariaLabelledByProgressBarRefs)}\" aria-disabled=\"${ifDefined(this._ariaDisabled)}\"></div></div><div class=\"ui5-slider-handle ui5-slider-handle--start\" part=\"handle\" style=\"${styleMap(this.styles.startHandle)}\" @focusin=\"${this._onfocusin}\" @focusout=\"${this._onfocusout}\" role=\"slider\" tabindex=\"${ifDefined(this._tabIndex)}\" aria-orientation=\"horizontal\" aria-valuemin=\"${ifDefined(this.min)}\" aria-valuemax=\"${ifDefined(this.max)}\" aria-valuenow=\"${ifDefined(this.startValue)}\" aria-labelledby=\"${ifDefined(this._ariaLabelledByStartHandleRefs)}\" aria-disabled=\"${ifDefined(this._ariaDisabled)}\"><${scopeTag(\"ui5-icon\", tags, suffix)} name=\"direction-arrows\" slider-icon></${scopeTag(\"ui5-icon\", tags, suffix)}>${this.showTooltip ? block8.call(this, context, tags, suffix) : undefined}</div><div class=\"ui5-slider-handle ui5-slider-handle--end\" part=\"handle\" style=\"${styleMap(this.styles.endHandle)}\" @focusin=\"${this._onfocusin}\" @focusout=\"${this._onfocusout}\" role=\"slider\" tabindex=\"${ifDefined(this._tabIndex)}\" aria-orientation=\"horizontal\" aria-valuemin=\"${ifDefined(this.min)}\" aria-valuemax=\"${ifDefined(this.max)}\" aria-valuenow=\"${ifDefined(this.endValue)}\" aria-labelledby=\"${ifDefined(this._ariaLabelledByEndHandleRefs)}\" aria-disabled=\"${ifDefined(this._ariaDisabled)}\"><${scopeTag(\"ui5-icon\", tags, suffix)} name=\"direction-arrows\" slider-icon></${scopeTag(\"ui5-icon\", tags, suffix)}>${this.showTooltip ? block9.call(this, context, tags, suffix) : undefined}</div></div><span id=\"${ifDefined(this._id)}-accName\" class=\"ui5-hidden-text\">${ifDefined(this.accessibleName)}</span><span id=\"${ifDefined(this._id)}-sliderDesc\" class=\"ui5-hidden-text\">${ifDefined(this._ariaLabelledByText)}</span></div> ` : html `<div class=\"ui5-slider-root ${classMap(this.classes.root)}\" @mousedown=\"${this._onmousedown}\" @touchstart=\"${this._ontouchstart}\" @mouseover=\"${this._onmouseover}\" @mouseout=\"${this._onmouseout}\" @keydown=\"${this._onkeydown}\" @keyup=\"${this._onkeyup}\" part=\"root-container\"><span id=\"${ifDefined(this._id)}-startHandleDesc\" class=\"ui5-hidden-text\">${ifDefined(this._ariaHandlesText.startHandleText)}</span><span id=\"${ifDefined(this._id)}-endHandleDesc\" class=\"ui5-hidden-text\">${ifDefined(this._ariaHandlesText.endHandleText)}</span><div class=\"ui5-slider-inner\">${this.step ? block1.call(this, context, tags, suffix) : undefined}<div class=\"ui5-slider-progress-container\" part=\"progress-container\"><div class=\"ui5-slider-progress\" part=\"progress-bar\" style=\"${styleMap(this.styles.progress)}\" @focusin=\"${this._onfocusin}\" @focusout=\"${this._onfocusout}\" role=\"slider\" tabindex=\"${ifDefined(this._tabIndex)}\" aria-orientation=\"horizontal\" aria-valuemin=\"${ifDefined(this.min)}\" aria-valuemax=\"${ifDefined(this.max)}\" aria-valuenow=\"${ifDefined(this._ariaValueNow)}\" aria-valuetext=\"From ${ifDefined(this.startValue)} to ${ifDefined(this.endValue)}\" aria-labelledby=\"${ifDefined(this._ariaLabelledByProgressBarRefs)}\" aria-disabled=\"${ifDefined(this._ariaDisabled)}\"></div></div><div class=\"ui5-slider-handle ui5-slider-handle--start\" part=\"handle\" style=\"${styleMap(this.styles.startHandle)}\" @focusin=\"${this._onfocusin}\" @focusout=\"${this._onfocusout}\" role=\"slider\" tabindex=\"${ifDefined(this._tabIndex)}\" aria-orientation=\"horizontal\" aria-valuemin=\"${ifDefined(this.min)}\" aria-valuemax=\"${ifDefined(this.max)}\" aria-valuenow=\"${ifDefined(this.startValue)}\" aria-labelledby=\"${ifDefined(this._ariaLabelledByStartHandleRefs)}\" aria-disabled=\"${ifDefined(this._ariaDisabled)}\"><ui5-icon name=\"direction-arrows\" slider-icon></ui5-icon>${this.showTooltip ? block8.call(this, context, tags, suffix) : undefined}</div><div class=\"ui5-slider-handle ui5-slider-handle--end\" part=\"handle\" style=\"${styleMap(this.styles.endHandle)}\" @focusin=\"${this._onfocusin}\" @focusout=\"${this._onfocusout}\" role=\"slider\" tabindex=\"${ifDefined(this._tabIndex)}\" aria-orientation=\"horizontal\" aria-valuemin=\"${ifDefined(this.min)}\" aria-valuemax=\"${ifDefined(this.max)}\" aria-valuenow=\"${ifDefined(this.endValue)}\" aria-labelledby=\"${ifDefined(this._ariaLabelledByEndHandleRefs)}\" aria-disabled=\"${ifDefined(this._ariaDisabled)}\"><ui5-icon name=\"direction-arrows\" slider-icon></ui5-icon>${this.showTooltip ? block9.call(this, context, tags, suffix) : undefined}</div></div><span id=\"${ifDefined(this._id)}-accName\" class=\"ui5-hidden-text\">${ifDefined(this.accessibleName)}</span><span id=\"${ifDefined(this._id)}-sliderDesc\" class=\"ui5-hidden-text\">${ifDefined(this._ariaLabelledByText)}</span></div> `; }\nfunction block1(context, tags, suffix) { return html `${this.showTickmarks ? block2.call(this, context, tags, suffix) : undefined}`; }\nfunction block2(context, tags, suffix) { return html `<ul class=\"ui5-slider-tickmarks\">${repeat(this.tickmarksObject, (item, index) => item._id || index, (item, index) => block3.call(this, context, tags, suffix, item, index))}</ul>${this.labelInterval ? block6.call(this, context, tags, suffix) : undefined}`; }\nfunction block3(context, tags, suffix, item, index) { return html `${item ? block4.call(this, context, tags, suffix, item, index) : block5.call(this, context, tags, suffix, item, index)}`; }\nfunction block4(context, tags, suffix, item, index) { return html `<li class=\"ui5-slider-tickmark ui5-slider-tickmark-in-range\"></li>`; }\nfunction block5(context, tags, suffix, item, index) { return html `<li class=\"ui5-slider-tickmark\"></li>`; }\nfunction block6(context, tags, suffix) { return html `<ul class=\"ui5-slider-labels ${classMap(this.classes.labelContainer)}\" style=\"${styleMap(this.styles.labelContainer)}\">${repeat(this._labels, (item, index) => item._id || index, (item, index) => block7.call(this, context, tags, suffix, item, index))}</ul>`; }\nfunction block7(context, tags, suffix, item, index) { return html `<li style=\"${styleMap(this.styles.label)}\">${ifDefined(item)}</li>`; }\nfunction block8(context, tags, suffix) { return html `<div class=\"ui5-slider-tooltip ui5-slider-tooltip--start\" style=\"${styleMap(this.styles.tooltip)}\"><span class=\"ui5-slider-tooltip-value\">${ifDefined(this.tooltipStartValue)}</span></div>`; }\nfunction block9(context, tags, suffix) { return html `<div class=\"ui5-slider-tooltip ui5-slider-tooltip--end\" style=\"${styleMap(this.styles.tooltip)}\"><span class=\"ui5-slider-tooltip-value\">${ifDefined(this.tooltipEndValue)}</span></div>`; }\nexport default block0;\n//# sourceMappingURL=RangeSliderTemplate.lit.js.map","import { registerThemePropertiesLoader } from \"@ui5/webcomponents-base/dist/asset-registries/Themes.js\";\nimport defaultThemeBase from \"@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js\";\nimport defaultTheme from \"./sap_horizon/parameters-bundle.css.js\";\nregisterThemePropertiesLoader(\"@ui5/webcomponents-theming\", \"sap_horizon\", async () => defaultThemeBase);\nregisterThemePropertiesLoader(\"@ui5/webcomponents\", \"sap_horizon\", async () => defaultTheme);\nconst styleData = { packageName: \"@ui5/webcomponents\", fileName: \"themes/RangeSlider.css\", content: \":host([ui5-range-slider]) .ui5-slider-progress-container:before{background-color:var(--_ui5-v1-19-0_slider_progress_container_dot_background)}.ui5-slider-root:hover:active .ui5-slider-handle:not(:focus){background:var(--sapSlider_RangeHandleBackground)}:host([range-pressed]) .ui5-slider-root:active .ui5-slider-handle:not(:focus){background:var(--_ui5-v1-19-0_range_slider_handle_active_background);border:var(--_ui5-v1-19-0_slider_handle_focus_border);box-shadow:none}:host([range-pressed]) .ui5-slider-handle [slider-icon]{display:var(--_ui5-v1-19-0_range_slider_active_handle_icon_display)}.ui5-slider-root:not(.ui5-slider-root-phone) .ui5-slider-inner .ui5-slider-handle:focus,.ui5-slider-root:not(.ui5-slider-root-phone):focus .ui5-slider-inner .ui5-slider-handle{background:var(--_ui5-v1-19-0_range_slider_handle_background_focus)}.ui5-slider-root:not(.ui5-slider-root-phone) .ui5-slider-inner .ui5-slider-handle:focus [slider-icon]{display:none}.ui5-slider-root:not(.ui5-slider-root-phone) .ui5-slider-progress:focus:before{border:var(--_ui5-v1-19-0_slider_progress_outline);border-radius:var(--_ui5-v1-19-0_range_slider_focus_outline_radius);box-sizing:border-box;content:\\\"\\\";display:var(--_ui5-v1-19-0_range_slider_legacy_progress_focus_display);height:var(--_ui5-v1-19-0_slider_outer_height);left:var(--_ui5-v1-19-0_slider_progress_outline_offset_left);position:absolute;top:var(--_ui5-v1-19-0_slider_progress_outline_offset);width:var(--_ui5-v1-19-0_range_slider_focus_outline_width)}.ui5-slider-progress{position:relative}.ui5-slider-progress:focus:after{border:.125rem solid var(--sapContent_FocusColor);border-radius:.5rem;box-sizing:border-box;content:\\\"\\\";display:var(--_ui5-v1-19-0_range_slider_progress_focus_display);height:var(--_ui5-v1-19-0_range_slider_progress_focus_height);left:var(--_ui5-v1-19-0_range_slider_progress_focus_left);padding:var(--_ui5-v1-19-0_range_slider_progress_focus_padding);position:absolute;top:var(--_ui5-v1-19-0_range_slider_progress_focus_top);width:var(--_ui5-v1-19-0_range_slider_progress_focus_width)}.ui5-slider-handle{background:var(--_ui5-v1-19-0_range_slider_handle_background)}.ui5-slider-handle:hover,.ui5-slider-progress-container:hover~.ui5-slider-handle:not(:focus){background:var(--_ui5-v1-19-0_range_slider_root_hover_handle_bg)}.ui5-slider-root:hover .ui5-slider-handle:not(:focus) [slider-icon]{display:var(--_ui5-v1-19-0_range_slider_root_hover_handle_icon_display)}:host([range-pressed]) .ui5-slider-root:active .ui5-slider-handle:not(:focus) [slider-icon]{display:var(--_ui5-v1-19-0_range_slider_root_active_handle_icon_display)}\" };\nexport default styleData;\n//# sourceMappingURL=RangeSlider.css.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar RangeSlider_1;\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport Float from \"@ui5/webcomponents-base/dist/types/Float.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { isEscape, isHome, isEnd, } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport SliderBase from \"./SliderBase.js\";\nimport Icon from \"./Icon.js\";\nimport RangeSliderTemplate from \"./generated/templates/RangeSliderTemplate.lit.js\";\n// Texts\nimport { RANGE_SLIDER_ARIA_DESCRIPTION, RANGE_SLIDER_START_HANDLE_DESCRIPTION, RANGE_SLIDER_END_HANDLE_DESCRIPTION, } from \"./generated/i18n/i18n-defaults.js\";\n// Styles\nimport rangeSliderStyles from \"./generated/themes/RangeSlider.css.js\";\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * Represents a numerical interval and two handles (grips) to select a sub-range within it.\n * The purpose of the component to enable visual selection of sub-ranges within a given interval.\n *\n * <h3>Structure</h3>\n * The most important properties of the Range Slider are:\n * <ul>\n * <li>min - The minimum value of the slider range.</li>\n * <li>max - The maximum value of the slider range.</li>\n * <li>value - The current value of the slider.</li>\n * <li>step - Determines the increments in which the slider will move.</li>\n * <li>showTooltip - Determines if a tooltip should be displayed above the handle.</li>\n * <li>showTickmarks - Displays a visual divider between the step values.</li>\n * <li>labelInterval - Labels some or all of the tickmarks with their values.</li>\n * </ul>\n * <h4>Notes:</h4>\n * <ul>\n * <li>The right and left handle can be moved individually and their positions could therefore switch.</li>\n * <li>The entire range can be moved along the interval.</li>\n * </ul>\n * <h3>Usage</h3>\n * The most common use case is to select and move sub-ranges on a continuous numerical scale.\n *\n * <h3>Responsive Behavior</h3>\n * You can move the currently selected range by clicking on it and dragging it along the interval.\n *\n * <h3>CSS Shadow Parts</h3>\n *\n * <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.\n * <br>\n * The <code>ui5-range-slider</code> exposes the following CSS Shadow Parts:\n * <ul>\n * <li>progress-container - Used to style the progress container(the horizontal bar which visually represents the range between the minimum and maximum value) of the <code>ui5-range-slider</code>.</li>\n * <li>progress-bar - Used to style the progress bar, which shows the progress of the <code>ui5-range-slider</code>.</li>\n * <li>handle - Used to style the handles of the <code>ui5-range-slider</code>.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n *\n * <ul>\n * <li><code>Left or Down Arrow</code> - Moves a component's handle or the entire selection one step to the left;</li>\n * <li><code>Right or Up Arrow</code> - Moves a component's handle or the entire selection one step to the right;</li>\n * <li><code>Left or Down Arrow + Ctrl/Cmd</code> - Moves a component's handle to the left or the entire range with step equal to 1/10th of the entire range;</li>\n * <li><code>Right or Up Arrow + Ctrl/Cmd</code> - Moves a component's handle to the right or the entire range with step equal to 1/10th of the entire range;</li>\n * <li><code>Plus</code> - Same as <code>Right or Up Arrow</code>;</li>\n * <li><code>Minus</code> - Same as <code>Left or Down Arrow</code>;</li>\n * <li><code>Home</code> - Moves the entire selection or the selected handle to the beginning of the component's range;</li>\n * <li><code>End</code> - Moves the entire selection or the selected handle to the end of the component's range;</li>\n * <li><code>Page Up</code> - Same as <code>Right or Up Arrow + Ctrl/Cmd</code>;</li>\n * <li><code>Page Down</code> - Same as <code>Left or Down Arrow + Ctrl/Cmd</code>;</li>\n * <li><code>Escape</code> - Resets the <code>startValue</code> and <code>endValue</code> properties to the values prior the component focusing;</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/RangeSlider\";</code>\n *\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.main.RangeSlider\n * @extends sap.ui.webc.main.SliderBase\n * @tagname ui5-range-slider\n * @since 1.0.0-rc.11\n * @public\n */\nlet RangeSlider = RangeSlider_1 = class RangeSlider extends SliderBase {\n    constructor() {\n        super();\n        this._isPressInCurrentRange = false;\n        this._handeIsPressed = false;\n        this._reversedValues = false;\n        this._stateStorage.startValue = undefined;\n        this._stateStorage.endValue = undefined;\n    }\n    get tooltipStartValue() {\n        const ctor = this.constructor;\n        const stepPrecision = ctor._getDecimalPrecisionOfNumber(this._effectiveStep);\n        return this.startValue.toFixed(stepPrecision);\n    }\n    get tooltipEndValue() {\n        const ctor = this.constructor;\n        const stepPrecision = ctor._getDecimalPrecisionOfNumber(this._effectiveStep);\n        return this.endValue.toFixed(stepPrecision);\n    }\n    get _ariaDisabled() {\n        return this.disabled || undefined;\n    }\n    get _ariaLabelledByText() {\n        return RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_ARIA_DESCRIPTION);\n    }\n    get _ariaHandlesText() {\n        const isRTL = this.effectiveDir === \"rtl\";\n        const isReversed = this._areValuesReversed();\n        const ariaHandlesText = {};\n        if ((isRTL && !isReversed) || (!isRTL && isReversed)) {\n            ariaHandlesText.startHandleText = RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_END_HANDLE_DESCRIPTION);\n            ariaHandlesText.endHandleText = RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_START_HANDLE_DESCRIPTION);\n        }\n        else {\n            ariaHandlesText.startHandleText = RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_START_HANDLE_DESCRIPTION);\n            ariaHandlesText.endHandleText = RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_END_HANDLE_DESCRIPTION);\n        }\n        return ariaHandlesText;\n    }\n    get _ariaValueNow() {\n        return Math.abs(this.endValue - this.startValue);\n    }\n    /**\n     * Check if the previously saved state is outdated. That would mean\n     * either it is the initial rendering or that a property has been changed\n     * programmatically - because the previous state is always updated in\n     * the interaction handlers.\n     *\n     * Normalize current properties, update the previously stored state.\n     * Update the visual UI representation of the Slider.\n     *\n     */\n    onBeforeRendering() {\n        if (this.startValue > this.endValue) {\n            const affectedValue = this._valueAffected === \"startValue\" ? \"endValue\" : \"startValue\";\n            this._swapValues();\n            this._setAffectedValue(affectedValue);\n            this.update(affectedValue, this.startValue, this.endValue);\n        }\n        if (!this.isCurrentStateOutdated()) {\n            return;\n        }\n        this.notResized = true;\n        this.syncUIAndState();\n        this._updateHandlesAndRange(0);\n    }\n    syncUIAndState() {\n        // Validate step and update the stored state for the step property.\n        if (this.isPropertyUpdated(\"step\")) {\n            this._validateStep(this.step);\n            this.storePropertyState(\"step\");\n        }\n        // Recalculate the tickmarks and labels and update the stored state.\n        if (this.isPropertyUpdated(\"min\", \"max\", \"startValue\", \"endValue\")) {\n            this.storePropertyState(\"min\", \"max\");\n            // Here the value props are changed programmatically (not by user interaction)\n            // and it won't be \"stepified\" (rounded to the nearest step). 'Clip' them within\n            // min and max bounderies and update the previous state reference.\n            const normalizedStartValue = SliderBase.clipValue(this.startValue, this._effectiveMin, this._effectiveMax);\n            this.startValue = normalizedStartValue;\n            this.updateStateStorageAndFireInputEvent(\"startValue\");\n            this.storePropertyState(\"startValue\");\n            const normalizedEndValue = SliderBase.clipValue(this.endValue, this._effectiveMin, this._effectiveMax);\n            this.endValue = normalizedEndValue;\n            this.updateStateStorageAndFireInputEvent(\"endValue\");\n            this.storePropertyState(\"endValue\");\n        }\n        // Labels must be updated if any of the min/max/step/labelInterval props are changed\n        if (this.labelInterval && this.showTickmarks) {\n            this._createLabels();\n        }\n        // Update the stored state for the labelInterval, if changed\n        if (this.isPropertyUpdated(\"labelInterval\")) {\n            this.storePropertyState(\"labelInterval\");\n        }\n    }\n    _onfocusin() {\n        // If this is the initial focusin of the component save its initial\n        // value properties so they could be restored on ESC key press\n        if (!this._endValueInitial) {\n            this._startValueInitial = this.startValue;\n            this._endValueInitial = this.endValue;\n        }\n        if (this.showTooltip) {\n            this._tooltipVisibility = SliderBase.TOOLTIP_VISIBILITY.VISIBLE;\n        }\n    }\n    /**\n     * Handles focus out event of the focusable components inner elements.\n     * Prevent focusout when the focus is getting initially set within the slider before the\n     * slider customElement itself is finished focusing.\n     *\n     * Prevents the focus from leaving the Range Slider when the focus is managed between\n     * its inner elements in result of user interactions.\n     *\n     * Resets the stored Range Slider's initial values saved when it was first focused\n     *\n     * @private\n     */\n    _onfocusout() {\n        if (this._isFocusing()) {\n            this._preventFocusOut();\n            return;\n        }\n        this._setAffectedValue(undefined);\n        this._startValueInitial = undefined;\n        this._endValueInitial = undefined;\n        if (this.showTooltip) {\n            this._tooltipVisibility = SliderBase.TOOLTIP_VISIBILITY.HIDDEN;\n        }\n    }\n    /**\n    * Handles keyup logic. If one of the handles came across the other\n    * swap the start and end values. Reset the affected value by the finished\n    * user interaction.\n    *\n    * @private\n    */\n    _onkeyup() {\n        super._onkeyup();\n        this._setAffectedValue(undefined);\n        if (this.startValue !== this._startValueAtBeginningOfAction || this.endValue !== this._endValueAtBeginningOfAction) {\n            this.fireEvent(\"change\");\n        }\n        this._startValueAtBeginningOfAction = undefined;\n        this._endValueAtBeginningOfAction = undefined;\n    }\n    _handleActionKeyPress(e) {\n        this._startValueAtBeginningOfAction = this.startValue;\n        this._endValueAtBeginningOfAction = this.endValue;\n        if (isEscape(e)) {\n            this.update(undefined, this._startValueInitial, this._endValueInitial);\n            return;\n        }\n        // Set the target of the interaction based on the focused inner element\n        this._setAffectedValueByFocusedElement();\n        const min = this._effectiveMin;\n        const max = this._effectiveMax;\n        const affectedValue = this._valueAffected;\n        // If home/end key is pressed and no single handle is focused the active element\n        // is the range selection - update both start and end values. Otherwise, if 'home'\n        // is pressed the 'startValue'will be used for the start-handle offset calculation,\n        // if 'End' is pressed - the 'endValue' will be used for the end-handle update.\n        if ((isEnd(e) || isHome(e)) && !affectedValue) {\n            this._homeEndForSelectedRange(e, isHome(e) ? \"startValue\" : \"endValue\", min, max);\n            return;\n        }\n        // Calculate how much the value should be increased/decreased based on the action key\n        const newValueOffset = this._handleActionKeyPressBase(e, affectedValue);\n        if (!newValueOffset) {\n            return;\n        }\n        // Update a single value if one of the handles is focused or the range if not already at min or max\n        const ctor = this.constructor;\n        if (affectedValue && !this._isPressInCurrentRange) {\n            const propValue = this[affectedValue];\n            const newValue = ctor.clipValue(newValueOffset + propValue, min, max);\n            this.update(affectedValue, newValue, undefined);\n        }\n        else if ((newValueOffset < 0 && this.startValue > min) || (newValueOffset > 0 && this.endValue < max)) {\n            const newStartValue = ctor.clipValue(newValueOffset + this.startValue, min, max);\n            const newEndValue = ctor.clipValue(newValueOffset + this.endValue, min, max);\n            this.update(affectedValue, newStartValue, newEndValue);\n        }\n    }\n    /**\n     * Determines affected value (start/end) depending on the currently\n     * active inner element within the Range Slider - used in the keyboard handling.\n     *\n     * @private\n     */\n    _setAffectedValueByFocusedElement() {\n        if (this.shadowRoot.activeElement === this._startHandle) {\n            this._setAffectedValue(\"startValue\");\n        }\n        if (this.shadowRoot.activeElement === this._endHandle) {\n            this._setAffectedValue(\"endValue\");\n        }\n        if (this.shadowRoot.activeElement === this._progressBar) {\n            this._setAffectedValue(undefined);\n        }\n        this._setIsPressInCurrentRange(!this._valueAffected);\n    }\n    /**\n     * Calculates the start and end values when the 'Home\" or 'End' keys\n     * are pressed on the selected range bar.\n     *\n     * @private\n     */\n    _homeEndForSelectedRange(e, affectedValue, min, max) {\n        const newValueOffset = this._handleActionKeyPressBase(e, affectedValue);\n        const ctor = this.constructor;\n        const newStartValue = ctor.clipValue(newValueOffset + this.startValue, min, max);\n        const newEndValue = ctor.clipValue(newValueOffset + this.endValue, min, max);\n        this.update(undefined, newStartValue, newEndValue);\n    }\n    /**\n     * Update values, stored inner state and the visual UI representation of the component.\n     * If no specific type of value property is passed - the range is selected - update both handles,\n     * otherwise update the handle corresponding to the affected by the user interacton value prop.\n     *\n     * @private\n     */\n    update(affectedValue, startValue, endValue) {\n        if (!affectedValue) {\n            this.startValue = startValue;\n            this.updateStateStorageAndFireInputEvent(\"startValue\");\n            this.endValue = endValue;\n            this.updateStateStorageAndFireInputEvent(\"endValue\");\n            this._updateHandlesAndRange(0);\n        }\n        else {\n            const newValue = endValue && affectedValue === \"endValue\" ? endValue : startValue;\n            this._updateHandlesAndRange(newValue || 0);\n            if (affectedValue === \"startValue\") {\n                this.startValue = newValue;\n                this.updateStateStorageAndFireInputEvent(\"startValue\");\n            }\n            if (affectedValue === \"endValue\") {\n                this.endValue = newValue;\n                this.updateStateStorageAndFireInputEvent(\"endValue\");\n            }\n        }\n    }\n    /**\n     * Called when the user starts interacting with the slider\n     *\n     * @private\n     */\n    _onmousedown(e) {\n        // If step is 0 no interaction is available because there is no constant\n        // (equal for all user environments) quantitative representation of the value\n        if (this.disabled || this._effectiveStep === 0) {\n            return;\n        }\n        // Calculate the new value from the press position of the event\n        const newValue = this.handleDownBase(e);\n        // Determine the rest of the needed details from the start of the interaction.\n        this._saveInteractionStartData(e, newValue);\n        this.rangePressed = this._isPressInCurrentRange;\n        // Do not yet update the RangeSlider if press is in range or over a handle.\n        if (this._isPressInCurrentRange || this._handeIsPressed) {\n            this._handeIsPressed = false;\n            return;\n        }\n        // Update Slider UI and internal state\n        this.update(this._valueAffected, newValue, undefined);\n    }\n    /**\n     * Determines and saves needed values from the start of the interaction:\n     *\n     * Is the value calculated is within the currently selected range;\n     * Initial pageX position of the start handle affected by the interaction;\n     * Initial pageX value of the pressed postion;\n     * Affected value property by the action;\n     *\n     * @private\n     */\n    _saveInteractionStartData(e, newValue) {\n        const progressBarDom = this.shadowRoot.querySelector(\".ui5-slider-progress\").getBoundingClientRect();\n        // Save the state of the value properties on the start of the interaction\n        this._startValueAtBeginningOfAction = this.startValue;\n        this._endValueAtBeginningOfAction = this.endValue;\n        // Save the initial press point coordinates (position)\n        const ctor = this.constructor;\n        this._initialPageXPosition = ctor.getPageXValueFromEvent(e);\n        // Which element of the Range Slider is pressed and which value property to be modified on further interaction\n        this._pressTargetAndAffectedValue(this._initialPageXPosition, newValue);\n        // Use the progress bar to save the initial coordinates of the start-handle when the interaction begins.\n        this._initialStartHandlePageX = this.directionStart === \"left\" ? progressBarDom.left : progressBarDom.right;\n    }\n    /**\n     * Called when the user moves the slider\n     *\n     * @private\n     */\n    _handleMove(e) {\n        e.preventDefault();\n        // If 'step' is 0 no interaction is available as there is no constant quantitative representation of the value\n        if (this.disabled || this._effectiveStep === 0) {\n            return;\n        }\n        // Update UI and state when dragging a single Range Slider handle\n        if (!this._isPressInCurrentRange) {\n            this._updateValueOnHandleDrag(e);\n            return;\n        }\n        // Updates UI and state when dragging of the whole selected range\n        this._updateValueOnRangeDrag(e);\n    }\n    /**\n     * Updates UI and state when dragging a single Range Slider handle\n     *\n     * @private\n     */\n    _updateValueOnHandleDrag(event) {\n        const ctor = this.constructor;\n        const newValue = ctor.getValueFromInteraction(event, this._effectiveStep, this._effectiveMin, this._effectiveMax, this.getBoundingClientRect(), this.directionStart);\n        this.update(this._valueAffected, newValue, undefined);\n    }\n    /**\n     * Updates UI and state when dragging of the whole selected range\n     *\n     * @private\n     */\n    _updateValueOnRangeDrag(event) {\n        // Calculate the new 'start' and 'end' values from the offset between the original press point and the current position of the mouse\n        const ctor = this.constructor;\n        const currentPageXPos = ctor.getPageXValueFromEvent(event);\n        const newValues = this._calculateRangeOffset(currentPageXPos, this._initialStartHandlePageX);\n        // No matter the which value is set as the one to be modified (by prev. user action) we want to modify both of them\n        this._setAffectedValue(undefined);\n        // Update the UI and the state according to the calculated new values\n        this.update(undefined, newValues[0], newValues[1]);\n    }\n    _handleUp() {\n        this._setAffectedValueByFocusedElement();\n        this._setAffectedValue(undefined);\n        if (this.startValue !== this._startValueAtBeginningOfAction || this.endValue !== this._endValueAtBeginningOfAction) {\n            this.fireEvent(\"change\");\n        }\n        this._setIsPressInCurrentRange(false);\n        this.handleUpBase();\n        this.rangePressed = false;\n        this._startValueAtBeginningOfAction = undefined;\n        this._endValueAtBeginningOfAction = undefined;\n    }\n    /**\n     * Determines where the press occured and which values of the Range Slider\n     * handles should be updated on further interaction.\n     *\n     * If the press is not in the selected range or over one of the Range Slider handles\n     * determines which one from the value/endValue properties has to be updated\n     * after the user action (based on closest handle).\n     *\n     * Set flags if the press is over a handle or in the selected range,\n     * in such cases no values are changed on interaction start, but could be\n     * updated later when dragging.\n     *\n     * @private\n     */\n    _pressTargetAndAffectedValue(clientX, value) {\n        const startHandle = this.shadowRoot.querySelector(\".ui5-slider-handle--start\");\n        const endHandle = this.shadowRoot.querySelector(\".ui5-slider-handle--end\");\n        // Check if the press point is in the bounds of any of the Range Slider handles\n        const handleStartDomRect = startHandle.getBoundingClientRect();\n        const handleEndDomRect = endHandle.getBoundingClientRect();\n        const inHandleStartDom = clientX >= handleStartDomRect.left && clientX <= handleStartDomRect.right;\n        const inHandleEndDom = clientX >= handleEndDomRect.left && clientX <= handleEndDomRect.right;\n        // Remove the flag for value in current range if the press action is over one of the handles\n        if (inHandleEndDom || inHandleStartDom) {\n            this._handeIsPressed = true;\n        }\n        // Return that handle that is closer to the press point\n        if (inHandleEndDom || value > this.endValue) {\n            this._setAffectedValue(\"endValue\");\n        }\n        // If one of the handle is pressed return that one\n        if (inHandleStartDom || value < this.startValue) {\n            this._setAffectedValue(\"startValue\");\n        }\n        // Flag if press is in the current select range\n        const isNewValueInCurrentRange = this._startValueAtBeginningOfAction !== undefined && this._endValueAtBeginningOfAction !== undefined && value >= this._startValueAtBeginningOfAction && value <= this._endValueAtBeginningOfAction;\n        this._setIsPressInCurrentRange(!(this._valueAffected || this._handeIsPressed) ? isNewValueInCurrentRange : false);\n    }\n    /**\n     * Sets the value property (start/end) that will get updated\n     * by a user action depending on that user action's characteristics\n     * - mouse press position - cursor coordinates relative to the start/end handles\n     * - selected inner element via a keyboard navigation\n     *\n     * @param {string} affectedValue The value that will get modified by the interaction\n     * @private\n     */\n    _setAffectedValue(affectedValue) {\n        this._valueAffected = affectedValue;\n        // If the values have been swapped reset the reversed flag\n        if (this._areValuesReversed()) {\n            this._setValuesAreReversed();\n        }\n    }\n    /**\n     * Flag if press action is made on the currently selected range of values\n     *\n     * @param {boolean} isPressInCurrentRange Did the current press action occur in the current range (between the two handles)\n     * @private\n     */\n    _setIsPressInCurrentRange(isPressInCurrentRange) {\n        this._isPressInCurrentRange = isPressInCurrentRange;\n    }\n    /**\n     * Manage the focus between the focusable inner elements within the component.\n     *\n     * On initial focusin or if the whole range is affected by the user interaction\n     * set the focus on the progress selection, otherwise on one of the Range Slider\n     * handles based on the determined affected value by the user action.\n     *\n     * If one of the handles came across the other one in result of a user action\n     * switch the focus between them to keep it visually consistent.\n     *\n     * Note:\n     * In some cases this function is going to get called twice on one user action.\n     *\n     * 1. When the focus is initially set to an inner element it is done in the very beginning,\n     * of an interaction - on 'mousedown' and 'keydown' events. The focus of the host custom element\n     * is still not being received, causining an immediate focusout that we prevent by\n     * calling this function once again.\n     *\n     * 2. When the focused is manually switched from one inner element to another.\n     * The focusout handler is one and the same for all focusable parts within the\n     * Range Slider and when is called it checks if it should keep the focus within\n     * the component and which part of it should get focused if that is the case.\n     *\n     * @protected\n     */\n    focusInnerElement() {\n        const isReversed = this._areValuesReversed();\n        const affectedValue = this._valueAffected;\n        if (this._isPressInCurrentRange || !affectedValue) {\n            this._progressBar.focus();\n        }\n        if ((affectedValue === \"startValue\" && !isReversed) || (affectedValue === \"endValue\" && isReversed)) {\n            this._startHandle.focus();\n        }\n        if ((affectedValue === \"endValue\" && !isReversed) || (affectedValue === \"startValue\" && isReversed)) {\n            this._endHandle.focus();\n        }\n    }\n    /**\n     * Calculates startValue/endValue properties when the whole range is moved.\n     *\n     * Uses the change of the position of the start handle and adds the initially\n     * selected range to it, to determine the whole range offset.\n     *\n     * @param {Integer} currentPageXPos The current horizontal position of the cursor/touch\n     * @param {Integer} initialStartHandlePageXPos The initial horizontal position of the start handle\n     *\n     * @private\n     */\n    _calculateRangeOffset(currentPageXPos, initialStartHandlePageXPos) {\n        // Return the current values if there is no difference in the\n        // positions of the initial press and the current pointer\n        if (this._initialPageXPosition === currentPageXPos) {\n            return [this.startValue, this.endValue];\n        }\n        const min = this._effectiveMin;\n        const max = this._effectiveMax;\n        const selectedRange = this.endValue - this.startValue;\n        // Computes the new value based on the difference of the current cursor location from the start of the interaction\n        let startValue = this._calculateStartValueByOffset(currentPageXPos, initialStartHandlePageXPos);\n        // When the end handle reaches the max possible value prevent the start handle from moving\n        // And the opposite - if the start handle reaches the beginning of the slider keep the initially selected range.\n        const ctor = this.constructor;\n        startValue = ctor.clipValue(startValue, min, max - selectedRange);\n        return [startValue, startValue + selectedRange];\n    }\n    /**\n     * Computes the new value based on the difference of the current cursor location from the\n     * start of the interaction.\n     *\n     * @param {Integer} currentPageXPos The current horizontal position of the cursor/touch\n     * @param {Integer} initialStartHandlePageXPos The initial horizontal position of the start handle\n     *\n     * @private\n     */\n    _calculateStartValueByOffset(currentPageXPos, initialStartHandlePageXPos) {\n        const min = this._effectiveMin;\n        const max = this._effectiveMax;\n        const step = this._effectiveStep;\n        const dom = this.getBoundingClientRect();\n        let startValue;\n        let startValuePageX;\n        let positionOffset;\n        /* Depending on the dragging direction:\n        - calculate the new position of the start handle from its old pageX value combined with the movement offset;\n        - calculate the start value based on its new pageX coordinates;\n        - 'stepify' the calculated value based on the specified step property; */\n        const ctor = this.constructor;\n        if (currentPageXPos > this._initialPageXPosition) {\n            // Difference between the new position of the pointer and when the press event initial occured\n            positionOffset = currentPageXPos - this._initialPageXPosition;\n            startValuePageX = initialStartHandlePageXPos + positionOffset;\n            startValue = ctor.computedValueFromPageX(startValuePageX, min, max, dom, this.directionStart);\n            startValue = ctor.getSteppedValue(startValue, step, min);\n        }\n        else {\n            positionOffset = this._initialPageXPosition - currentPageXPos;\n            startValuePageX = initialStartHandlePageXPos - positionOffset;\n            startValue = ctor.computedValueFromPageX(startValuePageX, min, max, dom, this.directionStart);\n            startValue = ctor.getSteppedValue(startValue, step, min);\n        }\n        return startValue;\n    }\n    /**\n     * Updates the visual representation of the component by calculating\n     * the styles of the handles and the range selection based on the new state.\n     *\n     * @private\n     */\n    _updateHandlesAndRange(newValue) {\n        const max = this._effectiveMax;\n        const min = this._effectiveMin;\n        const prevStartValue = this.getStoredPropertyState(\"startValue\") || 0;\n        const prevEndValue = this.getStoredPropertyState(\"endValue\") || 0;\n        const affectedValue = this._valueAffected;\n        // The value according to which we update the UI can be either the startValue\n        // or the endValue property. It is determined in _getClosestHandle()\n        // depending on to which handle is closer the user interaction.\n        if (affectedValue === \"startValue\") {\n            this._selectedRange = (prevEndValue - newValue) / (max - min);\n            this._firstHandlePositionFromStart = ((newValue - min) / (max - min)) * 100;\n        }\n        else if (affectedValue === \"endValue\") {\n            this._selectedRange = ((newValue - prevStartValue)) / (max - min);\n            this._secondHandlePositionFromStart = ((newValue - min) / (max - min)) * 100;\n        }\n        else {\n            // When both values are changed - UI sync or moving the whole selected range:\n            this._selectedRange = ((this.endValue - this.startValue)) / (max - min);\n            this._firstHandlePositionFromStart = ((this.startValue - min) / (max - min)) * 100;\n            this._secondHandlePositionFromStart = ((this.endValue - min) / (max - min)) * 100;\n        }\n    }\n    /**\n     * Swaps the start and end values of the handles if one came accros the other:\n     * - If the start value is greater than the endValue swap them and their handles\n     * - If the endValue become less than the start value swap them and their handles\n     *\n     * Switches the focus to the opposite of the currently focused handle.\n     *\n     * Note: Only the property values are reversed, the DOM elements of the handles\n     * corresponding to them are never switched.\n     *\n     * @private\n     */\n    _swapValues() {\n        const affectedValue = this._valueAffected;\n        if (!affectedValue) {\n            return;\n        }\n        if (affectedValue === \"startValue\" && this.startValue > this.endValue) {\n            const prevEndValue = this.endValue;\n            this.endValue = this.startValue;\n            this.startValue = prevEndValue;\n        }\n        if (affectedValue === \"endValue\" && this.endValue < this.startValue) {\n            const prevStartValue = this.startValue;\n            this.startValue = this.endValue;\n            this.endValue = prevStartValue;\n        }\n        this._setValuesAreReversed();\n        this._updateHandlesAndRange(this[affectedValue]);\n        this.focusInnerElement();\n        this.syncUIAndState();\n    }\n    /**\n     * Flag that we have swapped the values of the 'start' and 'end' properties,\n     * to correctly switch the focus within the component from one handle to another\n     * when the swapping is finished. As we only swap property values and not\n     * the handle elements themselves, we must also swap their focus.\n     *\n     * @private\n     */\n    _setValuesAreReversed() {\n        this._reversedValues = !this._reversedValues;\n    }\n    _areValuesReversed() {\n        return this._reversedValues;\n    }\n    get tickmarksObject() {\n        const count = this._tickmarksCount;\n        const arr = [];\n        if (this._hiddenTickmarks) {\n            return [false, false];\n        }\n        for (let i = 0; i <= count; i++) {\n            const isBiggerThanStartValue = this._effectiveMin + (i * this.step) >= this.startValue;\n            const isBiggerThanEndValue = this._effectiveMin + (i * this.step) <= this.endValue;\n            arr.push(isBiggerThanStartValue && isBiggerThanEndValue);\n        }\n        return arr;\n    }\n    get _startHandle() {\n        return this.shadowRoot.querySelector(\".ui5-slider-handle--start\");\n    }\n    get _endHandle() {\n        return this.shadowRoot.querySelector(\".ui5-slider-handle--end\");\n    }\n    get _progressBar() {\n        return this.shadowRoot.querySelector(\".ui5-slider-progress\");\n    }\n    get _ariaLabelledByStartHandleRefs() {\n        return [`${this._id}-accName`, `${this._id}-startHandleDesc`].join(\" \").trim();\n    }\n    get _ariaLabelledByEndHandleRefs() {\n        return [`${this._id}-accName`, `${this._id}-endHandleDesc`].join(\" \").trim();\n    }\n    get _ariaLabelledByProgressBarRefs() {\n        return [`${this._id}-accName`, `${this._id}-sliderDesc`].join(\" \").trim();\n    }\n    get styles() {\n        return {\n            progress: {\n                \"width\": `${this._selectedRange * 100}%`,\n                \"transform-origin\": `${this.directionStart} top`,\n                [this.directionStart]: `${this._firstHandlePositionFromStart}%`,\n            },\n            startHandle: {\n                [this.directionStart]: `${this._firstHandlePositionFromStart}%`,\n            },\n            endHandle: {\n                [this.directionStart]: `${this._secondHandlePositionFromStart}%`,\n            },\n            label: {\n                \"width\": `${this._labelWidth}%`,\n            },\n            labelContainer: {\n                \"width\": `100%`,\n                [this.directionStart]: `-${this._labelWidth / 2}%`,\n            },\n            tooltip: {\n                \"visibility\": `${this._tooltipVisibility}`,\n            },\n        };\n    }\n    static async onDefine() {\n        RangeSlider_1.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n    }\n};\n__decorate([\n    property({ validator: Float, defaultValue: 0 })\n], RangeSlider.prototype, \"startValue\", void 0);\n__decorate([\n    property({ validator: Float, defaultValue: 100 })\n], RangeSlider.prototype, \"endValue\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RangeSlider.prototype, \"rangePressed\", void 0);\nRangeSlider = RangeSlider_1 = __decorate([\n    customElement({\n        tag: \"ui5-range-slider\",\n        languageAware: true,\n        template: RangeSliderTemplate,\n        dependencies: [Icon],\n        styles: [SliderBase.styles, rangeSliderStyles],\n    })\n], RangeSlider);\nRangeSlider.define();\nexport default RangeSlider;\n//# sourceMappingURL=RangeSlider.js.map","'use client';\n\nimport '@ui5/webcomponents/dist/RangeSlider.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n\ninterface RangeSliderAttributes {\n  /**\n   * Defines end point of a selection - position of a second handle on the slider.\n   */\n  endValue?: number;\n  /**\n   * Defines start point of a selection - position of a first handle on the slider.\n   */\n  startValue?: number;\n  /**\n   * Defines the accessible ARIA name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines whether the slider is in disabled state.\n   */\n  disabled?: boolean;\n  /**\n   * Displays a label with a value on every N-th step.\n   *\n   * **Note:** The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number.\n   */\n  labelInterval?: number;\n  /**\n   * Defines the maximum value of the slider.\n   */\n  max?: number;\n  /**\n   * Defines the minimum value of the slider.\n   */\n  min?: number;\n  /**\n   * Enables tickmarks visualization for each step.\n   *\n   * **Note:** The step must be a positive number.\n   */\n  showTickmarks?: boolean;\n  /**\n   * Enables handle tooltip displaying the current value.\n   */\n  showTooltip?: boolean;\n  /**\n   * Defines the size of the slider's selection intervals (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10).\n   *\n   * **Note:** If set to 0 the slider handle movement is disabled. When negative number or value other than a number, the component fallbacks to its default value.\n   */\n  step?: number;\n}\n\nexport interface RangeSliderDomRef extends RangeSliderAttributes, Ui5DomRef {}\n\nexport interface RangeSliderPropTypes extends RangeSliderAttributes, Omit<CommonProps, 'onChange' | 'onInput'> {\n  /**\n   * Fired when the value changes and the user has finished interacting with the slider.\n   */\n  onChange?: (event: Ui5CustomEvent<RangeSliderDomRef>) => void;\n  /**\n   * Fired when the value changes due to user interaction that is not yet finished - during mouse/touch dragging.\n   */\n  onInput?: (event: Ui5CustomEvent<RangeSliderDomRef>) => void;\n}\n\n/**\n * Represents a numerical interval and two handles (grips) to select a sub-range within it. The purpose of the component to enable visual selection of sub-ranges within a given interval.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-RangeSlider)\n */\nconst RangeSlider = withWebComponent<RangeSliderPropTypes, RangeSliderDomRef>(\n  'ui5-range-slider',\n  ['endValue', 'startValue', 'accessibleName', 'labelInterval', 'max', 'min', 'step'],\n  ['disabled', 'showTickmarks', 'showTooltip'],\n  [],\n  ['change', 'input'],\n  () => import('@ui5/webcomponents/dist/RangeSlider.js')\n);\n\nRangeSlider.displayName = 'RangeSlider';\n\nRangeSlider.defaultProps = {\n  endValue: 100,\n  startValue: 0,\n  labelInterval: 0,\n  max: 100,\n  min: 0,\n  step: 1\n};\n\nexport { RangeSlider };\n","export default \"## Structure\\n\\nThe most important properties of the Range Slider are:\\n\\n- min - The minimum value of the slider range.\\n- max - The maximum value of the slider range.\\n- value - The current value of the slider.\\n- step - Determines the increments in which the slider will move.\\n- showTooltip - Determines if a tooltip should be displayed above the handle.\\n- showTickmarks - Displays a visual divider between the step values.\\n- labelInterval - Labels some or all of the tickmarks with their values.\\n\\n### Notes:\\n\\n- The right and left handle can be moved individually and their positions could therefore switch.\\n- The entire range can be moved along the interval.\\n\\n## Usage\\n\\nThe most common use case is to select and move sub-ranges on a continuous numerical scale.\\n\\n## Responsive Behavior\\n\\nYou can move the currently selected range by clicking on it and dragging it along the interval.\\n\\n## CSS Shadow Parts\\n\\n<ui5-link target=\\\"_blank\\\" href=\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\\\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.  \\nThe `RangeSlider` exposes the following CSS Shadow Parts:\\n\\n- progress-container - Used to style the progress container(the horizontal bar which visually represents the range between the minimum and maximum value) of the `RangeSlider`.\\n- progress-bar - Used to style the progress bar, which shows the progress of the `RangeSlider`.\\n- handle - Used to style the handles of the `RangeSlider`.\\n\\n## Keyboard Handling\\n\\n- `Left or Down Arrow` - Moves a component's handle or the entire selection one step to the left;\\n- `Right or Up Arrow` - Moves a component's handle or the entire selection one step to the right;\\n- `Left or Down Arrow + Ctrl/Cmd` - Moves a component's handle to the left or the entire range with step equal to 1/10th of the entire range;\\n- `Right or Up Arrow + Ctrl/Cmd` - Moves a component's handle to the right or the entire range with step equal to 1/10th of the entire range;\\n- `Plus` - Same as `Right or Up Arrow`;\\n- `Minus` - Same as `Left or Down Arrow`;\\n- `Home` - Moves the entire selection or the selected handle to the beginning of the component's range;\\n- `End` - Moves the entire selection or the selected handle to the end of the component's range;\\n- `Page Up` - Same as `Right or Up Arrow + Ctrl/Cmd`;\\n- `Page Down` - Same as `Left or Down Arrow + Ctrl/Cmd`;\\n- `Escape` - Resets the `startValue` and `endValue` properties to the values prior the component focusing;\\n\"","import { Canvas, Markdown, Meta, Story } from '@storybook/blocks';\nimport { RangeSlider } from './index';\nimport { ArgsTableWithNote, DocsHeader, Footer } from '@sb/components';\nimport Description from './RangeSliderDescription.md?raw';\n\n<Meta\n  title=\"Inputs / RangeSlider\"\n  component={RangeSlider}\n  argTypes={{\n    children: { control: { disable: true } }\n  }}\n/>\n\n<DocsHeader since=\"0.13.0\" />\n\n<br />\n\n## Example\n\n<Canvas>\n  <Story name=\"Default\">\n    {(args) => {\n      return <RangeSlider {...args} />;\n    }}\n  </Story>\n</Canvas>\n\n## Properties\n\n<ArgsTableWithNote story=\"Default\" />\n\n<Markdown>{Description}</Markdown>\n\n<Footer />\n"],"file":"assets/RangeSlider.stories--5m54Aov.js"}