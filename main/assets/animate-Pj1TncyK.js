const a=new WeakMap;class i{static get tasks(){return a}static enqueue(t,e){a.has(t)||a.set(t,[]),a.get(t).push(e)}static run(t,e){return a.has(t)||a.set(t,[]),e().then(()=>{const r=a.get(t);if(r.length>0)return i.run(t,r.shift());a.delete(t)})}static push(t,e){a.get(t)?i.enqueue(t,e):i.run(t,e)}}const p=s=>{let t=null,e=!1,r,u,c;const o=new Promise((n,l)=>{c=d=>{t=t||d;const f=d-t,h=s.duration-f;if(f<=s.duration){const m=1-h/s.duration;s.advance(m),e||(r=requestAnimationFrame(c))}else s.advance(1),n()},u=()=>{e=!0,cancelAnimationFrame(r),l(new Error("animation stopped"))}}).catch(n=>n);return i.push(s.element,()=>(typeof s.beforeStart=="function"&&s.beforeStart(),requestAnimationFrame(c),new Promise(n=>{o.then(()=>n())}))),{promise:()=>o,stop:()=>u}},g=400;export{p as a,g as d};
