{"version":3,"file":"LocaleData-11ff68d9.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/asset-registries/LocaleData.js"],"sourcesContent":["import { attachLanguageChange } from \"../locale/languageChange.js\";\nimport getLocale from \"../locale/getLocale.js\";\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from \"../generated/AssetParameters.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nconst localeDataMap = new Map();\nconst loaders = new Map();\nconst cldrPromises = new Map();\nconst reportedErrors = new Set();\nlet warningShown = false;\nconst M_ISO639_OLD_TO_NEW = {\n    \"iw\": \"he\",\n    \"ji\": \"yi\",\n    \"in\": \"id\",\n};\nconst _showAssetsWarningOnce = (localeId) => {\n    if (warningShown) {\n        return;\n    }\n    console.warn(`[LocaleData] Supported locale \"${localeId}\" not configured, import the \"Assets.js\" module from the webcomponents package you are using.`); /* eslint-disable-line */\n    warningShown = true;\n};\nconst calcLocale = (language, region, script) => {\n    // normalize language and handle special cases\n    language = (language && M_ISO639_OLD_TO_NEW[language]) || language;\n    // Special case 1: in an SAP context, the inclusive language code \"no\" always means Norwegian Bokmal (\"nb\")\n    if (language === \"no\") {\n        language = \"nb\";\n    }\n    // Special case 2: for Chinese, derive a default region from the script (this behavior is inherited from Java)\n    if (language === \"zh\" && !region) {\n        if (script === \"Hans\") {\n            region = \"CN\";\n        }\n        else if (script === \"Hant\") {\n            region = \"TW\";\n        }\n    }\n    // Special case 3: for Serbian, there are cyrillic and latin scripts, \"sh\" and \"sr-latn\" map to \"latin\", \"sr\" maps to cyrillic.\n    if (language === \"sh\" || (language === \"sr\" && script === \"Latn\")) {\n        language = \"sr\";\n        region = \"Latn\";\n    }\n    // try language + region\n    let localeId = `${language}_${region}`;\n    if (SUPPORTED_LOCALES.includes(localeId)) {\n        if (loaders.has(localeId)) {\n            // supported and has loader\n            return localeId;\n        }\n        // supported, no loader - fallback to default and warn\n        _showAssetsWarningOnce(localeId);\n        return DEFAULT_LOCALE;\n    }\n    // not supported, try language only\n    localeId = language;\n    if (SUPPORTED_LOCALES.includes(localeId)) {\n        if (loaders.has(localeId)) {\n            // supported and has loader\n            return localeId;\n        }\n        // supported, no loader - fallback to default and warn\n        _showAssetsWarningOnce(localeId);\n        return DEFAULT_LOCALE;\n    }\n    // not supported - fallback to default locale\n    return DEFAULT_LOCALE;\n};\n// internal set data\nconst setLocaleData = (localeId, content) => {\n    localeDataMap.set(localeId, content);\n};\n// external getSync\nconst getLocaleData = (localeId) => {\n    // if there is no loader, the default fallback was fetched and a warning was given - use default locale instead\n    if (!loaders.has(localeId)) {\n        localeId = DEFAULT_LOCALE;\n    }\n    const content = localeDataMap.get(localeId);\n    if (!content) {\n        throw new Error(`CLDR data for locale ${localeId} is not loaded!`);\n    }\n    return content;\n};\n// load bundle over the network once\nconst _loadCldrOnce = (localeId) => {\n    if (!cldrPromises.get(localeId)) {\n        const loadCldr = loaders.get(localeId);\n        if (!loadCldr) {\n            throw new Error(`CLDR data for locale ${localeId} is not loaded!`);\n        }\n        cldrPromises.set(localeId, loadCldr(localeId));\n    }\n    return cldrPromises.get(localeId);\n};\n// external getAsync\nconst fetchCldr = async (language, region, script) => {\n    const localeId = calcLocale(language, region, script);\n    // reuse OpenUI5 CLDR if present\n    const openUI5Support = getFeature(\"OpenUI5Support\");\n    if (openUI5Support) {\n        const cldrContent = openUI5Support.getLocaleDataObject();\n        if (cldrContent) {\n            // only if openui5 actually returned valid content\n            setLocaleData(localeId, cldrContent);\n            return;\n        }\n    }\n    // fetch it\n    try {\n        const cldrContent = await _loadCldrOnce(localeId);\n        setLocaleData(localeId, cldrContent);\n    }\n    catch (error) {\n        const e = error;\n        if (!reportedErrors.has(e.message)) {\n            reportedErrors.add(e.message);\n            console.error(e.message); /* eslint-disable-line */\n        }\n    }\n};\nconst registerLocaleDataLoader = (localeId, loader) => {\n    loaders.set(localeId, loader);\n};\n// register default loader for \"en\" from ui5 CDN (dev workflow without assets)\nregisterLocaleDataLoader(\"en\", async () => {\n    const cldrContent = await fetch(`https://sdk.openui5.org/1.103.0/resources/sap/ui/core/cldr/en.json`);\n    return cldrContent.json();\n});\n// When the language changes dynamically (the user calls setLanguage),\n// re-fetch the required CDRD data.\nattachLanguageChange(() => {\n    const locale = getLocale();\n    return fetchCldr(locale.getLanguage(), locale.getRegion(), locale.getScript());\n});\nexport { registerLocaleDataLoader, fetchCldr, getLocaleData, };\n//# sourceMappingURL=LocaleData.js.map"],"names":["localeDataMap","loaders","cldrPromises","reportedErrors","warningShown","M_ISO639_OLD_TO_NEW","_showAssetsWarningOnce","localeId","calcLocale","language","region","script","SUPPORTED_LOCALES","DEFAULT_LOCALE","setLocaleData","content","getLocaleData","_loadCldrOnce","loadCldr","fetchCldr","openUI5Support","getFeature","cldrContent","error","e","registerLocaleDataLoader","loader","attachLanguageChange","locale","getLocale"],"mappings":"6HAIA,MAAMA,EAAgB,IAAI,IACpBC,EAAU,IAAI,IACdC,EAAe,IAAI,IACnBC,EAAiB,IAAI,IAC3B,IAAIC,EAAe,GACnB,MAAMC,EAAsB,CACxB,GAAM,KACN,GAAM,KACN,GAAM,IACV,EACMC,EAA0BC,GAAa,CACrCH,IAGJ,QAAQ,KAAK,kCAAkCG,CAAQ,+FAA+F,EACtJH,EAAe,GACnB,EACMI,EAAa,CAACC,EAAUC,EAAQC,IAAW,CAE7CF,EAAYA,GAAYJ,EAAoBI,CAAQ,GAAMA,EAEtDA,IAAa,OACbA,EAAW,MAGXA,IAAa,MAAQ,CAACC,IAClBC,IAAW,OACXD,EAAS,KAEJC,IAAW,SAChBD,EAAS,QAIbD,IAAa,MAASA,IAAa,MAAQE,IAAW,UACtDF,EAAW,KACXC,EAAS,QAGb,IAAIH,EAAW,GAAGE,CAAQ,IAAIC,CAAM,GACpC,OAAIE,EAAkB,SAASL,CAAQ,EAC/BN,EAAQ,IAAIM,CAAQ,EAEbA,GAGXD,EAAuBC,CAAQ,EACxBM,IAGXN,EAAWE,EACPG,EAAkB,SAASL,CAAQ,EAC/BN,EAAQ,IAAIM,CAAQ,EAEbA,GAGXD,EAAuBC,CAAQ,EACxBM,GAGJA,EACX,EAEMC,EAAgB,CAACP,EAAUQ,IAAY,CACzCf,EAAc,IAAIO,EAAUQ,CAAO,CACvC,EAEMC,EAAiBT,GAAa,CAE3BN,EAAQ,IAAIM,CAAQ,IACrBA,EAAWM,GAEf,MAAME,EAAUf,EAAc,IAAIO,CAAQ,EAC1C,GAAI,CAACQ,EACD,MAAM,IAAI,MAAM,wBAAwBR,CAAQ,iBAAiB,EAErE,OAAOQ,CACX,EAEME,EAAiBV,GAAa,CAChC,GAAI,CAACL,EAAa,IAAIK,CAAQ,EAAG,CAC7B,MAAMW,EAAWjB,EAAQ,IAAIM,CAAQ,EACrC,GAAI,CAACW,EACD,MAAM,IAAI,MAAM,wBAAwBX,CAAQ,iBAAiB,EAErEL,EAAa,IAAIK,EAAUW,EAASX,CAAQ,CAAC,CAChD,CACD,OAAOL,EAAa,IAAIK,CAAQ,CACpC,EAEMY,EAAY,MAAOV,EAAUC,EAAQC,IAAW,CAClD,MAAMJ,EAAWC,EAAWC,EAAUC,EAAQC,CAAM,EAE9CS,EAAiBC,EAAW,gBAAgB,EAClD,GAAID,EAAgB,CAChB,MAAME,EAAcF,EAAe,sBACnC,GAAIE,EAAa,CAEbR,EAAcP,EAAUe,CAAW,EACnC,MACH,CACJ,CAED,GAAI,CACA,MAAMA,EAAc,MAAML,EAAcV,CAAQ,EAChDO,EAAcP,EAAUe,CAAW,CACtC,OACMC,EAAO,CACV,MAAMC,EAAID,EACLpB,EAAe,IAAIqB,EAAE,OAAO,IAC7BrB,EAAe,IAAIqB,EAAE,OAAO,EAC5B,QAAQ,MAAMA,EAAE,OAAO,EAE9B,CACL,EACMC,EAA2B,CAAClB,EAAUmB,IAAW,CACnDzB,EAAQ,IAAIM,EAAUmB,CAAM,CAChC,EAEAD,EAAyB,KAAM,UACP,MAAM,MAAM,oEAAoE,GACjF,MACtB,EAGDE,EAAqB,IAAM,CACvB,MAAMC,EAASC,IACf,OAAOV,EAAUS,EAAO,cAAeA,EAAO,YAAaA,EAAO,UAAS,CAAE,CACjF,CAAC","x_google_ignoreList":[0]}