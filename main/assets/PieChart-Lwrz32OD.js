import{j as m}from"./jsx-runtime-Du8NFWEI.js";import{e as Ve}from"./index-CBpU8qq5.js";import{c as qe}from"./clsx-B-dksMZM.js";import{R as S,r as D}from"./index-Dl6G-zuu.js";import{c as Ne}from"./react-jss.esm-BPPChJW9.js";import{a as be,C as Ke}from"./defaults-C9D3eXmd.js";import{u as Fe,a as ze,b as Me}from"./staticProps-CjaVosBc.js";import{u as $e}from"./useOnClickInternal-lyLIrhui.js";import{u as Be,a as ae,d as H,j as We,i as Ae,b as Ue,g as W,c as He,f as Ye,l as te,w as Ce,n as ie,C as Ge}from"./ChartContainer-Urk6z_cc.js";import{P as Ze,a as Je,b as Qe}from"./Placeholder-CK99FIfJ.js";import{C as Xe,k as xe,p as ue,L as J,g as $,S as et,A as tt,i as ke,a as nt,G as at,l as it,e as Re,c as rt,m as ot,n as we,T as st,d as lt}from"./generateCategoricalChart--U82lExb.js";import{b as ne,g as ct}from"./_baseForOwn-DFjKyXZi.js";var re;function Y(a){"@babel/helpers - typeof";return Y=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(n){return typeof n}:function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Y(a)}function U(){return U=Object.assign?Object.assign.bind():function(a){for(var n=1;n<arguments.length;n++){var i=arguments[n];for(var e in i)Object.prototype.hasOwnProperty.call(i,e)&&(a[e]=i[e])}return a},U.apply(this,arguments)}function Se(a,n){var i=Object.keys(a);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(a);n&&(e=e.filter(function(t){return Object.getOwnPropertyDescriptor(a,t).enumerable})),i.push.apply(i,e)}return i}function h(a){for(var n=1;n<arguments.length;n++){var i=arguments[n]!=null?arguments[n]:{};n%2?Se(Object(i),!0).forEach(function(e){L(a,e,i[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(i)):Se(Object(i)).forEach(function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(i,e))})}return a}function dt(a,n){if(!(a instanceof n))throw new TypeError("Cannot call a class as a function")}function Pe(a,n){for(var i=0;i<n.length;i++){var e=n[i];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(a,Le(e.key),e)}}function ut(a,n,i){return n&&Pe(a.prototype,n),i&&Pe(a,i),Object.defineProperty(a,"prototype",{writable:!1}),a}function ht(a,n,i){return n=oe(n),pt(a,Ie()?Reflect.construct(n,i||[],oe(a).constructor):n.apply(a,i))}function pt(a,n){if(n&&(Y(n)==="object"||typeof n=="function"))return n;if(n!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return B(a)}function Ie(){try{var a=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(Ie=function(){return!!a})()}function oe(a){return oe=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(i){return i.__proto__||Object.getPrototypeOf(i)},oe(a)}function B(a){if(a===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function ft(a,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(n&&n.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),Object.defineProperty(a,"prototype",{writable:!1}),n&&he(a,n)}function he(a,n){return he=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},he(a,n)}function L(a,n,i){return n=Le(n),n in a?Object.defineProperty(a,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):a[n]=i,a}function Le(a){var n=mt(a,"string");return Y(n)=="symbol"?n:String(n)}function mt(a,n){if(Y(a)!="object"||!a)return a;var i=a[Symbol.toPrimitive];if(i!==void 0){var e=i.call(a,n||"default");if(Y(e)!="object")return e;throw new TypeError("@@toPrimitive must return a primitive value.")}return(n==="string"?String:Number)(a)}var T=function(a){ft(n,a);function n(i){var e;return dt(this,n),e=ht(this,n,[i]),L(B(e),"pieRef",null),L(B(e),"sectorRefs",[]),L(B(e),"id",Be("recharts-pie-")),L(B(e),"handleAnimationEnd",function(){var t=e.props.onAnimationEnd;e.setState({isAnimationFinished:!0}),ne(t)&&t()}),L(B(e),"handleAnimationStart",function(){var t=e.props.onAnimationStart;e.setState({isAnimationFinished:!1}),ne(t)&&t()}),e.state={isAnimationFinished:!i.isAnimationActive,prevIsAnimationActive:i.isAnimationActive,prevAnimationId:i.animationId,sectorToFocus:0},e}return ut(n,[{key:"isActiveIndex",value:function(e){var t=this.props.activeIndex;return Array.isArray(t)?t.indexOf(e)!==-1:e===t}},{key:"hasActiveIndex",value:function(){var e=this.props.activeIndex;return Array.isArray(e)?e.length!==0:e||e===0}},{key:"renderLabels",value:function(e){var t=this.props.isAnimationActive;if(t&&!this.state.isAnimationFinished)return null;var o=this.props,r=o.label,u=o.labelLine,f=o.dataKey,l=o.valueKey,g=ae(this.props,!1),y=ae(r,!1),P=ae(u,!1),x=r&&r.offsetRadius||20,b=e.map(function(c,v){var A=(c.startAngle+c.endAngle)/2,s=ue(c.cx,c.cy,c.outerRadius+x,A),C=h(h(h(h({},g),c),{},{stroke:"none"},y),{},{index:v,textAnchor:n.getTextAnchor(s.x,c.cx)},s),k=h(h(h(h({},g),c),{},{fill:"none",stroke:c.fill},P),{},{index:v,points:[ue(c.cx,c.cy,c.outerRadius,A),s],key:"line"}),d=f;return H(f)&&H(l)?d="value":H(f)&&(d=l),S.createElement(J,{key:"label-".concat(c.startAngle,"-").concat(c.endAngle,"-").concat(c.midAngle,"-").concat(v)},u&&n.renderLabelLineItem(u,k),n.renderLabelItem(r,C,$(c,d)))});return S.createElement(J,{className:"recharts-pie-labels"},b)}},{key:"renderSectorsStatically",value:function(e){var t=this,o=this.props,r=o.activeShape,u=o.blendStroke,f=o.inactiveShape;return e.map(function(l,g){if((l==null?void 0:l.startAngle)===0&&(l==null?void 0:l.endAngle)===0&&e.length!==1)return null;var y=t.isActiveIndex(g),P=f&&t.hasActiveIndex()?f:null,x=y?r:P,b=h(h({},l),{},{stroke:u?l.fill:l.stroke,tabIndex:-1});return S.createElement(J,U({ref:function(v){v&&!t.sectorRefs.includes(v)&&t.sectorRefs.push(v)},tabIndex:-1,className:"recharts-pie-sector"},We(t.props,l,g),{key:"sector-".concat(l==null?void 0:l.startAngle,"-").concat(l==null?void 0:l.endAngle,"-").concat(l.midAngle,"-").concat(g)}),S.createElement(et,U({option:x,isActive:y,shapeType:"sector"},b)))})}},{key:"renderSectorsWithAnimation",value:function(){var e=this,t=this.props,o=t.sectors,r=t.isAnimationActive,u=t.animationBegin,f=t.animationDuration,l=t.animationEasing,g=t.animationId,y=this.state,P=y.prevSectors,x=y.prevIsAnimationActive;return S.createElement(tt,{begin:u,duration:f,isActive:r,easing:l,from:{t:0},to:{t:1},key:"pie-".concat(g,"-").concat(x),onAnimationStart:this.handleAnimationStart,onAnimationEnd:this.handleAnimationEnd},function(b){var c=b.t,v=[],A=o&&o[0],s=A.startAngle;return o.forEach(function(C,k){var d=P&&P[k],O=k>0?ct(C,"paddingAngle",0):0;if(d){var q=Ae(d.endAngle-d.startAngle,C.endAngle-C.startAngle),w=h(h({},C),{},{startAngle:s+O,endAngle:s+q(c)+O});v.push(w),s=w.endAngle}else{var E=C.endAngle,R=C.startAngle,F=Ae(0,E-R),z=F(c),_=h(h({},C),{},{startAngle:s+O,endAngle:s+z+O});v.push(_),s=_.endAngle}}),S.createElement(J,null,e.renderSectorsStatically(v))})}},{key:"attachKeyboardHandlers",value:function(e){var t=this;e.onkeydown=function(o){if(!o.altKey)switch(o.key){case"ArrowLeft":{var r=++t.state.sectorToFocus%t.sectorRefs.length;t.sectorRefs[r].focus(),t.setState({sectorToFocus:r});break}case"ArrowRight":{var u=--t.state.sectorToFocus<0?t.sectorRefs.length-1:t.state.sectorToFocus%t.sectorRefs.length;t.sectorRefs[u].focus(),t.setState({sectorToFocus:u});break}case"Escape":{t.sectorRefs[t.state.sectorToFocus].blur(),t.setState({sectorToFocus:0});break}}}}},{key:"renderSectors",value:function(){var e=this.props,t=e.sectors,o=e.isAnimationActive,r=this.state.prevSectors;return o&&t&&t.length&&(!r||!Ue(r,t))?this.renderSectorsWithAnimation():this.renderSectorsStatically(t)}},{key:"componentDidMount",value:function(){this.pieRef&&this.attachKeyboardHandlers(this.pieRef)}},{key:"render",value:function(){var e=this,t=this.props,o=t.hide,r=t.sectors,u=t.className,f=t.label,l=t.cx,g=t.cy,y=t.innerRadius,P=t.outerRadius,x=t.isAnimationActive,b=this.state.isAnimationFinished;if(o||!r||!r.length||!W(l)||!W(g)||!W(y)||!W(P))return null;var c=He("recharts-pie",u);return S.createElement(J,{tabIndex:this.props.rootTabIndex,className:c,ref:function(A){e.pieRef=A}},this.renderSectors(),f&&this.renderLabels(r),ke.renderCallByParent(this.props,null,!1),(!x||b)&&nt.renderCallByParent(this.props,r,!1))}}],[{key:"getDerivedStateFromProps",value:function(e,t){return t.prevIsAnimationActive!==e.isAnimationActive?{prevIsAnimationActive:e.isAnimationActive,prevAnimationId:e.animationId,curSectors:e.sectors,prevSectors:[],isAnimationFinished:!0}:e.isAnimationActive&&e.animationId!==t.prevAnimationId?{prevAnimationId:e.animationId,curSectors:e.sectors,prevSectors:t.curSectors,isAnimationFinished:!0}:e.sectors!==t.curSectors?{curSectors:e.sectors,isAnimationFinished:!0}:null}},{key:"getTextAnchor",value:function(e,t){return e>t?"start":e<t?"end":"middle"}},{key:"renderLabelLineItem",value:function(e,t){return S.isValidElement(e)?S.cloneElement(e,t):ne(e)?e(t):S.createElement(Xe,U({},t,{type:"linear",className:"recharts-pie-label-line"}))}},{key:"renderLabelItem",value:function(e,t,o){if(S.isValidElement(e))return S.cloneElement(e,t);var r=o;return ne(e)&&(r=e(t),S.isValidElement(r))?r:S.createElement(xe,U({},t,{alignmentBaseline:"middle",className:"recharts-pie-label-text"}),r)}}]),n}(D.PureComponent);re=T;L(T,"displayName","Pie");L(T,"defaultProps",{stroke:"#fff",fill:"#808080",legendType:"rect",cx:"50%",cy:"50%",startAngle:0,endAngle:360,innerRadius:0,outerRadius:"80%",paddingAngle:0,labelLine:!0,hide:!1,minAngle:0,isAnimationActive:!at.isSsr,animationBegin:400,animationDuration:1500,animationEasing:"ease",nameKey:"name",blendStroke:!1,rootTabIndex:0});L(T,"parseDeltaAngle",function(a,n){var i=ie(n-a),e=Math.min(Math.abs(n-a),360);return i*e});L(T,"getRealPieData",function(a){var n=a.props,i=n.data,e=n.children,t=ae(a.props,!1),o=Ye(e,Re);return i&&i.length?i.map(function(r,u){return h(h(h({payload:r},t),r),o&&o[u]&&o[u].props)}):o&&o.length?o.map(function(r){return h(h({},t),r.props)}):[]});L(T,"parseCoordinateOfPie",function(a,n){var i=n.top,e=n.left,t=n.width,o=n.height,r=it(t,o),u=e+te(a.props.cx,t,t/2),f=i+te(a.props.cy,o,o/2),l=te(a.props.innerRadius,r,0),g=te(a.props.outerRadius,r,r*.8),y=a.props.maxRadius||Math.sqrt(t*t+o*o)/2;return{cx:u,cy:f,innerRadius:l,outerRadius:g,maxRadius:y}});L(T,"getComposedData",function(a){var n=a.item,i=a.offset,e=re.getRealPieData(n);if(!e||!e.length)return null;var t=n.props,o=t.cornerRadius,r=t.startAngle,u=t.endAngle,f=t.paddingAngle,l=t.dataKey,g=t.nameKey,y=t.valueKey,P=t.tooltipType,x=Math.abs(n.props.minAngle),b=re.parseCoordinateOfPie(n,i),c=re.parseDeltaAngle(r,u),v=Math.abs(c),A=l;H(l)&&H(y)?(Ce(!1,`Use "dataKey" to specify the value of pie,
      the props "valueKey" will be deprecated in 1.1.0`),A="value"):H(l)&&(Ce(!1,`Use "dataKey" to specify the value of pie,
      the props "valueKey" will be deprecated in 1.1.0`),A=y);var s=e.filter(function(w){return $(w,A,0)!==0}).length,C=(v>=360?s:s-1)*f,k=v-s*x-C,d=e.reduce(function(w,E){var R=$(E,A,0);return w+(W(R)?R:0)},0),O;if(d>0){var q;O=e.map(function(w,E){var R=$(w,A,0),F=$(w,g,E),z=(W(R)?R:0)/d,_;E?_=q.endAngle+ie(c)*f*(R!==0?1:0):_=r;var se=_+ie(c)*((R!==0?x:0)+z*k),le=(_+se)/2,ce=(b.innerRadius+b.outerRadius)/2,de=[{name:F,value:R,payload:w,dataKey:A,type:P}],Q=ue(b.cx,b.cy,ce,le);return q=h(h(h({percent:z,cornerRadius:o,name:F,tooltipPayload:de,midAngle:le,middleRadius:ce,tooltipPosition:Q},w),b),{},{value:$(w,A),startAngle:_,endAngle:se,payload:w,paddingAngle:ie(c)*f}),q})}return h(h({},b),{},{sectors:O,data:e})});var gt=rt({chartName:"PieChart",GraphicalChild:T,validateTooltipEventTypes:["item"],defaultTooltipEventType:"item",legendContent:"children",axisComponents:[{axisType:"angleAxis",AxisComp:Ze},{axisType:"radiusAxis",AxisComp:Je}],formatAxisMap:ot,defaultProps:{layout:"centric",startAngle:0,endAngle:360,cx:"50%",cy:"50%",innerRadius:0,outerRadius:"80%"}});const vt=Ne({piechart:{"& g:focus,& path:focus":{outline:"none"}}},{name:"PieChartStyles"}),yt={color:"var (--sapTextColor)"},G=D.forwardRef((a,n)=>{var Q;const{loading:i,dataset:e,noLegend:t,noAnimation:o,tooltipConfig:r,onDataPointClick:u,onLegendClick:f,onClick:l,centerLabel:g,style:y,className:P,slot:x,ChartPlaceholder:b,children:c,...v}=a,A=vt(),s={margin:{right:30,left:30,bottom:30,top:30,...((Q=a.chartConfig)==null?void 0:Q.margin)??{}},legendPosition:"bottom",legendHorizontalAlign:"center",paddingAngle:0,outerRadius:"80%",resizeDebounce:250,tooltipItemStyle:yt,...a.chartConfig},C=s.showActiveSegmentDataLabel??!0,k=D.useMemo(()=>({formatter:be,...a.dimension}),[a.dimension]),d=D.useMemo(()=>({formatter:be,...a.measure}),[a.measure]),O=p=>(typeof d.hideDataLabel=="function"?d.hideDataLabel(p):d.hideDataLabel)||s.activeSegment===p.index?null:D.isValidElement(d.DataLabel)?D.cloneElement(d.DataLabel,{...p,config:d}):m.jsx(xe,{...p,alignmentBaseline:"middle",className:"recharts-pie-label-text",children:d.formatter(p.value)}),q=D.useCallback((p,I)=>[d.formatter(p),k.formatter(I)],[d.formatter,k.formatter]),w=Fe(f,()=>d.accessor),E=$e(l),R=D.useCallback((p,I,j)=>{var V,Z;p&&p&&typeof u=="function"&&u(Ve(j,{value:p.value,dataKey:(Z=(V=p.tooltipPayload)==null?void 0:V[0])==null?void 0:Z.dataKey,name:p.name,payload:p.payload,dataIndex:I}))},[u]),F=D.useCallback(p=>{const I=Math.PI/180,{cx:j,cy:V,midAngle:Z,innerRadius:De,outerRadius:N,startAngle:pe,endAngle:fe,fill:K,payload:_e,percent:je,value:Te}=p,me=Math.sin(-I*Z),M=Math.cos(-I*Z),Oe=j+(N+10)*M,Ee=V+(N+10)*me,ge=j+(N+30)*M,ve=V+(N+30)*me,X=ge+(M>=0?1:-1)*22,ee=ve,ye=M>=0?"start":"end";return m.jsxs("g",{children:[m.jsx("text",{x:j,y:V,dy:8,textAnchor:"middle",fill:K,children:_e.name}),m.jsx(we,{cx:j,cy:V,innerRadius:De,outerRadius:N,startAngle:pe,endAngle:fe,fill:K}),m.jsx(we,{cx:j,cy:V,startAngle:pe,endAngle:fe,innerRadius:N+6,outerRadius:N+10,fill:K}),C&&m.jsxs(m.Fragment,{children:[m.jsx("path",{d:`M${Oe},${Ee}L${ge},${ve}L${X},${ee}`,stroke:K,fill:"none"}),m.jsx("circle",{cx:X,cy:ee,r:2,fill:K,stroke:"none"}),m.jsx("text",{x:X+(M>=0?1:-1)*12,y:ee,textAnchor:ye,fill:K,children:d.formatter(Te)}),m.jsx("text",{x:X+(M>=0?1:-1)*12,y:ee,dy:18,textAnchor:ye,fill:K,children:`(${(je*100).toFixed(2)}%)`})]})]})},[C]),z=D.useCallback(p=>(typeof d.hideDataLabel=="function"?d.hideDataLabel(p):d.hideDataLabel)||s.activeSegment===p.index?null:T.renderLabelLineItem(void 0,p),[s.activeSegment,d.hideDataLabel]),_=D.useMemo(()=>{if(s.activeSegment!=null&&C){if(s.legendPosition==="bottom")return{paddingTop:"30px"};if(s.legendPosition==="top")return{paddingBottom:"30px"}}return null},[C,s.activeSegment,s.legendPosition]),{chartConfig:se,dimension:le,measure:ce,...de}=v;return m.jsx(Ge,{dataset:e,ref:n,loading:i,Placeholder:b??Qe,style:y,className:P,slot:x,resizeDebounce:s.resizeDebounce,...de,children:m.jsxs(gt,{onClick:E,margin:s.margin,className:qe(typeof u=="function"||typeof l=="function"?"has-click-handler":void 0,A.piechart),children:[m.jsxs(T,{onClick:R,innerRadius:s.innerRadius,outerRadius:s.outerRadius,paddingAngle:s.paddingAngle,nameKey:k.accessor,dataKey:d.accessor,data:e,animationBegin:0,isAnimationActive:o===!1,labelLine:z,label:O,activeIndex:s.activeSegment,activeShape:s.activeSegment!=null&&F,children:[g&&m.jsx(ke,{position:"center",children:g}),e&&e.map((p,I)=>{var j;return m.jsx(Re,{name:k.formatter(Ke.getValueByDataKey(p,k.accessor,"")),fill:((j=d.colors)==null?void 0:j[I])??`var(--sapChart_OrderedColor_${I%11+1})`},I)})]}),(r==null?void 0:r.active)!==!1&&m.jsx(st,{cursor:ze,formatter:q,contentStyle:Me,itemStyle:s.tooltipItemStyle,labelStyle:s.tooltipLabelStyle,...r}),!t&&m.jsx(lt,{verticalAlign:s.legendPosition,align:s.legendHorizontalAlign,onClick:w,wrapperStyle:_}),c]})})});G.defaultProps={noLegend:!1,noAnimation:!1};G.displayName="PieChart";try{G.displayName="PieChart",G.__docgenInfo={description:`A Pie Chart is a type of graph that displays data in a circular graph.
The pieces of the graph are proportional to the fraction of the whole in each category.

In other words, each slice of the pie is relative to the size of that category in the group as a whole.
The entire “pie” represents 100 percent of a whole, while the pie “slices” represent portions of the whole.`,displayName:"PieChart",props:{centerLabel:{defaultValue:null,description:"A label to display in the center of the `PieChart`.\nIf you use this prop to display a text, we recommend to increase `chartConfig.innerRadius` to have some free\nspace for the text.",name:"centerLabel",required:!1,type:{name:"string"}},dimension:{defaultValue:null,description:`A object which contains the configuration of the dimension.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs`,name:"dimension",required:!0,type:{name:"IChartDimension"}},measure:{defaultValue:null,description:"A object which contains the configuration of the measure. The object is defining one pie in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this pie should display. Supports object structures by using <code>'parent.child'</code>.\n\n**Optional properties**\n\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `DataLabel`: a custom component to be used for the data label\n- `colors`: array of any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this segment. When passed a function it will be called for each data label with the corresponding chart properties.",name:"measure",required:!0,type:{name:"MeasureConfig"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},loading:{defaultValue:null,description:`Flag whether the chart should display a loading indicator.

This can either be a placeholder shimmer (in case the chart has no data yet) or a small
loading bar in the top of the chart (in case the chart has already some data to display).`,name:"loading",required:!1,type:{name:"boolean"}},dataset:{defaultValue:null,description:"The `dataset` is an array of object which will be displayed in the chart.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},noLegend:{defaultValue:{value:"false"},description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:{value:"false"},description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:"IPolarChartConfig & { margin?: { right: number; left: number; top: number; bottom: number; }; legendPosition?: string; legendHorizontalAlign?: string; resizeDebounce?: number; }"}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to overwrite internally used tooltip props, so use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}}}}}catch{}try{G.displayName="PieChart",G.__docgenInfo={description:`A Pie Chart is a type of graph that displays data in a circular graph.
The pieces of the graph are proportional to the fraction of the whole in each category.

In other words, each slice of the pie is relative to the size of that category in the group as a whole.
The entire “pie” represents 100 percent of a whole, while the pie “slices” represent portions of the whole.`,displayName:"PieChart",props:{centerLabel:{defaultValue:null,description:"A label to display in the center of the `PieChart`.\nIf you use this prop to display a text, we recommend to increase `chartConfig.innerRadius` to have some free\nspace for the text.",name:"centerLabel",required:!1,type:{name:"string"}},dimension:{defaultValue:null,description:`A object which contains the configuration of the dimension.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs`,name:"dimension",required:!0,type:{name:"IChartDimension"}},measure:{defaultValue:null,description:"A object which contains the configuration of the measure. The object is defining one pie in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this pie should display. Supports object structures by using <code>'parent.child'</code>.\n\n**Optional properties**\n\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `DataLabel`: a custom component to be used for the data label\n- `colors`: array of any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this segment. When passed a function it will be called for each data label with the corresponding chart properties.",name:"measure",required:!0,type:{name:"MeasureConfig"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},loading:{defaultValue:null,description:`Flag whether the chart should display a loading indicator.

This can either be a placeholder shimmer (in case the chart has no data yet) or a small
loading bar in the top of the chart (in case the chart has already some data to display).`,name:"loading",required:!1,type:{name:"boolean"}},dataset:{defaultValue:null,description:"The `dataset` is an array of object which will be displayed in the chart.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},noLegend:{defaultValue:{value:"false"},description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:{value:"false"},description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:"IPolarChartConfig & { margin?: { right: number; left: number; top: number; bottom: number; }; legendPosition?: string; legendHorizontalAlign?: string; resizeDebounce?: number; }"}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to overwrite internally used tooltip props, so use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}}}}}catch{}export{G as P};
