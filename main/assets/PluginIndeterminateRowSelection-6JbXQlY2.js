import{j as t}from"./jsx-runtime-DtaoT6pD.js";import{I as n}from"./DomRefTable.module-msf5HOZT.js";import{M as p,C as a}from"./chunk-HLWAVYOI-EZX7hPPx.js";import"./index-OjgoNOWw.js";import{F as s}from"./Footer-Y8APiEzd.js";import{M as l}from"./index-b3qSKXqn.js";import{c}from"./AnalyticalTable.stories-EdmG0ujK.js";import{u as m}from"./index-RwE9nQVW.js";import"./react-jss.esm-tmBtHfec.js";import"./index-ETl9kWYS.js";import"./clsx-c3LcQGjR.js";import"./i18n-defaults-PmTGElot.js";import"./i18nBundle-Crssojm_.js";import"./VersionInfo-hBCHoyLi.js";import"./I18nContext-VUOpdMoH.js";import"./useIsomorphicLayoutEffect-s31TYDr7.js";import"./ThemingParameters-UghqSl-x.js";import"./addCustomCSSWithScoping-cCePQQVr.js";import"./UI5Element-OBgzz0fv.js";import"./CustomElementsScopeUtils-kYmWas10.js";import"./utils-5CTKRvkw.js";import"./index-mbaF7UBb.js";import"./iframe-zwAd2A-R.js";import"../sb-preview/runtime.js";import"./withWebComponent-6ZcDnwha.js";import"./slot-HSrR9XJ-.js";import"./Icon-2m0rU9av.js";import"./Icons-zRUxeAje.js";import"./Integer-kog98579.js";import"./class-map-dxoND1Lf.js";import"./i18n-defaults-RBzcmDt8.js";import"./index-y56eIBCk.js";import"./Avatar-LWFiEvrj.js";import"./ResizeHandler-jV9qqcaG.js";import"./employee-DNZboz-g.js";import"./alert-SMfrQE5J.js";import"./index-zDHz3ZfJ.js";import"./AriaLabelHelper-RbKlVwzD.js";import"./index-fn4OeEGU.js";import"./Link-Gs09ax_S.js";import"./MarkedEvents-aYv14vsS.js";import"./WrappingType-avPrqc94.js";import"./index-GL4gBoyB.js";import"./index-QYh6idnL.js";import"./mapValues-HzTlT2lF.js";import"./_baseForOwn-UZJwRxDU.js";import"./_baseUniq-JVyScZ-n.js";import"./index-PPLHz8o0.js";import"./index-q8oiNN3v.js";import"./index--dE6GCbE.js";import"./Label-bo0gz_aS.js";import"./index-slcgC8uD.js";import"./Button-UDaVhcBU.js";import"./index-hL0VF-nY.js";import"./Popover-SxOPU5wi.js";import"./PopupUtils-7oRQuqE1.js";import"./getActiveElement-IIKAy3xo.js";import"./PopupsCommon.css-dlrgNDf3.js";import"./FocusableElements-vmTxt0Po.js";import"./isElementHidden-d3-Fo4V6.js";import"./decline-P9scilyE.js";import"./i18n-defaults-n2A5pq_J.js";import"./MediaRange-sEMt71Ve.js";import"./style-map-oXcF1--7.js";import"./BrowserScrollbar.css-gfEIeu7r.js";import"./information-eS-oBj3B.js";import"./delete-2sMs8p4I.js";import"./ListItem-sP6HCr5u.js";import"./ListItemBase-OVhNd6zE.js";import"./ItemNavigation-_xIDlcJ6.js";import"./TabbableElements-aYIPY3zp.js";import"./debounce-8VpZswfd.js";import"./BusyIndicator-v8eJGF06.js";import"./RadioButton-b_fTB1Cx.js";import"./ValueState-zUcANXoY.js";import"./CheckBox-Hp_NHnWe.js";import"./accept-sNf1zbjr.js";import"./HasPopup-9BAMrqbD.js";import"./slim-arrow-right-LgQh9lXE.js";import"./settings-jXR25DaW.js";import"./index-Jm2lAFsC.js";import"./CssSizeVariables-IMpNFjIe.js";import"./CustomVariables-jcpx1a4M.js";import"./filter-BIi04-3M.js";import"./group-2-PB4OlzUK.js";import"./index-bACyWUaP.js";import"./stopPropagation-dV8jBYUw.js";import"./index-LjF_Eudc.js";import"./CustomListItem-rZV_FYSo.js";import"./index-rJcMJULR.js";import"./index-EN7b-6_R.js";import"./StandardListItem-srLARCBi.js";import"./ValueState-I_-hGNIb.js";import"./index-Ybh0k--a.js";import"./Input-0gTIU_XC.js";import"./Suggestions.css-yUfmf6_5.js";import"./ResponsivePopoverCommon.css-6WNiAmDC.js";import"./ValueStateMessage.css-eVPOpCbJ.js";import"./navigation-down-arrow-qFKfkt_j.js";import"./navigation-right-arrow-Kb9o2mc2.js";import"./useCurrentTheme-ANv0aFQX.js";import"./index-y6o7bk2p.js";import"./index-8KgJnCYm.js";import"./GlobalStyleClasses-kWTEndz_.js";import"./index-Lk2jD-9T.js";import"./Title-nBPKLywE.js";import"./useIsomorphicId-G0VPUEKO.js";import"./useIsRTL-8cFGcCtf.js";import"./debounce-F9irgL9Y.js";import"./index-xcA5Cs5C.js";import"./Select-OYQfuxjH.js";import"./InvisibleMessage-6ybI_HtB.js";import"./slim-arrow-down-RxdyuLbk.js";import"./ResponsivePopover-voK1PETi.js";import"./Dialog-sWOJmdZ6.js";import"./index-nwkduprM.js";import"./index-pAtSvmIv.js";import"./ToggleButton-vkNePp8i.js";import"./index-qbSx1a4O.js";import"./GroupHeaderListItem-MzkrLOEp.js";import"./Tokenizer-VoUH5ju1.js";import"./ScrollEnablement-_izt5Glm.js";import"./animate-Pj1TncyK.js";import"./Token-9r2QJrxT.js";import"./ComboBoxItem-nuGeBFqX.js";import"./index-IUlUCViF.js";function Oe(i={}){const{wrapper:o}=Object.assign({},m(),i.components);return o?t.jsx(o,Object.assign({},i,{children:t.jsx(r,{})})):r();function r(){const e=Object.assign({h1:"h1",p:"p",code:"code",strong:"strong",h2:"h2",pre:"pre",h4:"h4"},m(),i.components);return t.jsxs(t.Fragment,{children:[t.jsx(p,{title:"Data Display / AnalyticalTable / Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(e.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(n,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,t.jsxs(e.p,{children:["The ",t.jsx(e.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,t.jsx(e.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,t.jsxs(e.p,{children:[t.jsx(e.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,t.jsx(l,{hideCloseButton:!0,children:t.jsxs(t.Fragment,{children:[" The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",t.jsx(e.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,t.jsx(e.h2,{id:"example",children:"Example"}),`
`,t.jsx(a,{sourceState:"none",of:c}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-jsx",children:`<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.MultiSelect}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={[AnalyticalTableHooks.useIndeterminateRowSelection()]}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,t.jsx(e.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,t.jsx(e.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,t.jsxs(e.p,{children:["The callback is fired, every time the internal ",t.jsx(e.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,t.jsx(e.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,t.jsx(s,{})]})}}export{Oe as default};
//# sourceMappingURL=PluginIndeterminateRowSelection-6JbXQlY2.js.map
