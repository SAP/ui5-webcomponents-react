{"version":3,"file":"ResponsiveGridLayout.stories-BRmNFrEm.js","sources":["../../packages/main/src/components/ResponsiveGridLayout/ResponsiveGridLayout.jss.ts","../../packages/main/src/components/ResponsiveGridLayout/index.tsx"],"sourcesContent":["export const ResponsiveGridLayoutStyles = {\n  container: {\n    display: 'grid'\n  },\n  [`@media (max-width: 599px)`]: {\n    container: {\n      gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-s), minmax(0, 1fr))',\n      '& > *': {\n        gridColumn: 'span var(--_ui5wcr-rgl-column-span-s)'\n      }\n    }\n  },\n  [`@media (min-width: 600px) and (max-width: 1023px)`]: {\n    container: {\n      gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-m), minmax(0, 1fr))',\n      '& > *': {\n        gridColumn: 'span var(--_ui5wcr-rgl-column-span-m)'\n      }\n    }\n  },\n  [`@media (min-width: 1024px) and (max-width: 1439px)`]: {\n    container: {\n      gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-l), minmax(0, 1fr))',\n      '& > *': {\n        gridColumn: 'span var(--_ui5wcr-rgl-column-span-l)'\n      }\n    }\n  },\n  [`@media (min-width: 1440px)`]: {\n    container: {\n      gridTemplateColumns: 'repeat(var(--_ui5wcr-rgl-columns-xl), minmax(0, 1fr))',\n      '& > *': {\n        gridColumn: 'span var(--_ui5wcr-rgl-column-span-xl)'\n      }\n    }\n  }\n};\n","'use client';\n\nimport { clsx } from 'clsx';\nimport type { CSSProperties, ReactNode } from 'react';\nimport React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport type { CommonProps } from '../../interfaces/index.js';\nimport { ResponsiveGridLayoutStyles } from './ResponsiveGridLayout.jss.js';\n\nexport interface ResponsiveGridLayoutPropTypes extends CommonProps {\n  /**\n   * Number of columns to show on small screens (`max-width: 599px`)\n   */\n  columnsS?: number;\n\n  /**\n   * Number of columns to show on medium screens (`width >= 600px and width <=1023px`)\n   */\n  columnsM?: number;\n\n  /**\n   * Number of columns to show on large screens (`width >= 1024px and width <=1439px`)\n   */\n  columnsL?: number;\n\n  /**\n   * Number of columns to show on extra large screens (`min-width: 1440px`)\n   */\n  columnsXL?: number;\n\n  /**\n   * Defines how many columns a single child should cover on small screens.\n   */\n  columnSpanS?: number;\n  /**\n   * Defines how many columns a single child should cover on medium screens.\n   */\n  columnSpanM?: number;\n  /**\n   * Defines how many columns a single child should cover on large screens.\n   */\n  columnSpanL?: number;\n  /**\n   * Defines how many columns a single child should cover on extra large.\n   */\n  columnSpanXL?: number;\n  /**\n   * Gap between two columns of the grid\n   */\n  columnGap?: '0.5rem' | '1rem';\n\n  /**\n   * Gap between two rows of the grid\n   */\n  rowGap?: '0.5rem' | '1rem';\n\n  /**\n   * Child elements to be placed inside the grid. In case you want to control the column span of each child independently,\n   * you can add an element style using the [gridColumn shorthand](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column).\n   *\n   * Example: If you want one child to span across 4 columns, you can add this element style to the child element:\n   * `style={{ gridColumn: 'span 4' }}`\n   */\n  children?: ReactNode | ReactNode[];\n}\n\nconst useStyles = createUseStyles(ResponsiveGridLayoutStyles, { name: 'ResponsiveGridLayout' });\n\n/**\n * The Responsive Grid Layout positions UI elements in a multi-column flow layout.\n * They can be configured to display a variable number of columns depending on available screen size.\n * With these controls, it is possible to achieve flexible layouts and line breaks for large, medium,\n * and small-sized screens, such as desktop, tablet, and mobile.\n *\n * @since 0.16.4\n */\nconst ResponsiveGridLayout = forwardRef<HTMLDivElement, ResponsiveGridLayoutPropTypes>((props, ref) => {\n  const {\n    children,\n    columnGap = '0.5rem',\n    rowGap = '0.5rem',\n    columnsS = 4,\n    columnsM = 8,\n    columnsL = 12,\n    columnsXL = 16,\n    columnSpanS = 1,\n    columnSpanM = 1,\n    columnSpanL = 1,\n    columnSpanXL = 1,\n    style,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const finalClassNames = clsx(classes.container, className);\n\n  return (\n    <div\n      ref={ref}\n      className={finalClassNames}\n      style={\n        {\n          gridRowGap: rowGap,\n          gridColumnGap: columnGap,\n          '--_ui5wcr-rgl-columns-s': columnsS,\n          '--_ui5wcr-rgl-columns-m': columnsM,\n          '--_ui5wcr-rgl-columns-l': columnsL,\n          '--_ui5wcr-rgl-columns-xl': columnsXL,\n          '--_ui5wcr-rgl-column-span-s': columnSpanS,\n          '--_ui5wcr-rgl-column-span-m': columnSpanM,\n          '--_ui5wcr-rgl-column-span-l': columnSpanL,\n          '--_ui5wcr-rgl-column-span-xl': columnSpanXL,\n          ...style\n        } as CSSProperties\n      }\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n});\n\nResponsiveGridLayout.displayName = 'ResponsiveGridLayout';\n\nexport { ResponsiveGridLayout };\n"],"names":["ResponsiveGridLayoutStyles","useStyles","createUseStyles","ResponsiveGridLayout","forwardRef","props","ref","children","columnGap","rowGap","columnsS","columnsM","columnsL","columnsXL","columnSpanS","columnSpanM","columnSpanL","columnSpanXL","style","className","rest","classes","finalClassNames","clsx","jsx"],"mappings":"yQAAO,MAAMA,EAA6B,CACxC,UAAW,CACT,QAAS,MACX,EACC,4BAA8B,CAC7B,UAAW,CACT,oBAAqB,uDACrB,QAAS,CACP,WAAY,uCACd,CACF,CACF,EACC,oDAAsD,CACrD,UAAW,CACT,oBAAqB,uDACrB,QAAS,CACP,WAAY,uCACd,CACF,CACF,EACC,qDAAuD,CACtD,UAAW,CACT,oBAAqB,uDACrB,QAAS,CACP,WAAY,uCACd,CACF,CACF,EACC,6BAA+B,CAC9B,UAAW,CACT,oBAAqB,wDACrB,QAAS,CACP,WAAY,wCACd,CACF,CACF,CACF,EC8BAC,EAAAC,EAAAF,EAAA,CAAA,KAAA,sBAAA,CAAA,EAUAG,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACE,KAAA,CAAM,SAAAC,EACJ,UAAAC,EAAA,SACY,OAAAC,EAAA,SACH,SAAAC,EAAA,EACE,SAAAC,EAAA,EACA,SAAAC,EAAA,GACA,UAAAC,EAAA,GACC,YAAAC,EAAA,EACE,YAAAC,EAAA,EACA,YAAAC,EAAA,EACA,aAAAC,EAAA,EACC,MAAAC,EACf,UAAAC,EACA,GAAAC,CACG,EAAAf,EAELgB,EAAApB,IACAqB,EAAAC,EAAAF,EAAA,UAAAF,CAAA,EAEA,OAAAK,EAAA,IACE,MAAC,CAAA,IAAAlB,EACC,UAAAgB,EACW,MAAA,CAET,WAAAb,EACc,cAAAD,EACG,0BAAAE,EACY,0BAAAC,EACA,0BAAAC,EACA,2BAAAC,EACC,8BAAAC,EACG,8BAAAC,EACA,8BAAAC,EACA,+BAAAC,EACC,GAAAC,CAC7B,EACL,GAAAE,EAEE,SAAAb,CAEH,CAAA,CAGP,CAAA,EAEAJ,EAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}