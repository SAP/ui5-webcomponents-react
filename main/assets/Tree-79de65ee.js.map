{"version":3,"file":"Tree-79de65ee.js","sources":["../../packages/main/src/webComponents/TreeItem/TreeItemDescription.md?raw","../../packages/main/src/webComponents/TreeItemCustom/TreeItemCustomDescription.md?raw","../../packages/main/src/webComponents/Tree/TreeDescription.md?raw","../../packages/main/src/webComponents/Tree/Tree.mdx"],"sourcesContent":["export default \"**Since:** 0.10.0\\n\\nThe `TreeItem` represents a node in a tree structure, shown as a `List`.  \\nThis is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items.\\n\\n### CSS Shadow Parts\\n\\n<ui5-link target=\\\"_blank\\\" href=\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\\\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.  \\nThe `TreeItem` exposes the following CSS Shadow Parts:\\n\\n- title - Used to style the title of the tree list item\\n- additionalText - Used to style the additionalText of the tree list item\\n- icon - Used to style the icon of the tree list item\\n\"","export default \"**Since:** 1.7.0\\n\\nThe `TreeItemCustom` represents a node in a tree structure, shown as a `List`.  \\nThis is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items. You can use this item to put any custom content inside the tree item.\\n\\n### CSS Shadow Parts\\n\\n<ui5-link target=\\\"_blank\\\" href=\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\\\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.  \\nThe `TreeItemCustom` exposes the following CSS Shadow Parts:\\n\\n- title - Used to style the title of the tree list item\\n- additionalText - Used to style the additionalText of the tree list item\\n- icon - Used to style the icon of the tree list item\\n\"","export default \"## Usage\\n\\n### When to use:\\n\\n- To display hierarchically structured items.\\n- To select one or more items out of a set of hierarchically structured items.\\n\\n### When not to use:\\n\\n- To display items not hierarchically strcutured. In this case, use the List component.\\n- To select one item from a very small number of non-hierarchical items. Select or ComboBox might be more appropriate.\\n- The hierarchy turns out to have only two levels. In this case, use List with group items.\\n\\n## Keyboard Handling\\n\\nThe `Tree` provides advanced keyboard handling. The user can use the following keyboard shortcuts in order to navigate trough the tree:\\n\\n- \\\\[UP/DOWN\\\\] - Navigates up and down the tree items that are currently visible.\\n- \\\\[RIGHT\\\\] - Drills down the tree by expanding the tree nodes.\\n- \\\\[LEFT\\\\] - Goes up the tree and collapses the tree nodes.\\n\\nThe user can use the following keyboard shortcuts to perform selection, when the `mode` property is in use:\\n\\n- \\\\[SPACE\\\\] - Selects the currently focused item upon keyup.\\n- \\\\[ENTER\\\\] - Selects the currently focused item upon keydown.\\n\"","import { ArgTypesWithNote, ControlsWithNote, DocsHeader, DomRefTable, Footer } from '@sb/components';\nimport SubcomponentsSection from '@sb/docs/SubcomponentsSection.md?raw';\nimport { Canvas, Markdown, Meta } from '@storybook/blocks';\nimport { useState } from 'react';\nimport { TreeItem } from '../TreeItem';\nimport TreeItemDescription from '../TreeItem/TreeItemDescription.md?raw';\nimport { TreeItemCustom } from '../TreeItemCustom';\nimport TreeItemCustomDescription from '../TreeItemCustom/TreeItemCustomDescription.md?raw';\nimport * as ComponentStories from './Tree.stories';\nimport Description from './TreeDescription.md?raw';\nimport TreeDomRef from './TreeDomRef.json';\n\n<Meta of={ComponentStories} />\n\n<DocsHeader since=\"0.10.0\" />\n\n<br />\n\n## Example\n\n<Canvas of={ComponentStories.Default} />\n\n## Properties\n\n<ControlsWithNote of={ComponentStories.Default} />\n\n<Markdown>{Description}</Markdown>\n\n<DomRefTable rows={TreeDomRef} />\n\n# More Examples\n\n<br />\n\n## Lazy Load TreeItems\n\n<Canvas of={ComponentStories.LazyLoading} />\n\n### Code\n\n```jsx\nconst LazyLoadingTree = () => {\n  const [lazyChildren, setLazyChildren] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleItemToggle = (e) => {\n    if (e.detail.item.dataset.id === 'lazychildren' && !lazyChildren) {\n      e.preventDefault();\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setLazyChildren(\n          <>\n            <TreeItem text=\"Tree 3.1\" />\n            <TreeItem text=\"Tree 3.2\" />\n          </>\n        );\n        e.detail.item.toggle();\n      }, 3000);\n    }\n  };\n  return (\n    <BusyIndicator active={loading} style={{ width: '100%' }}>\n      <Tree onItemToggle={handleItemToggle}>\n        <TreeItem text=\"Has pre-loaded children\">\n          <TreeItem text=\"Tree 1.1\" />\n          <TreeItem text=\"Tree 1.2\" />\n        </TreeItem>\n        <TreeItem text=\"Has no children\" />\n        <TreeItem text=\"Has children but not yet loaded\" hasChildren icon={dlCloutIcon} data-id=\"lazychildren\">\n          {lazyChildren}\n        </TreeItem>\n      </Tree>\n    </BusyIndicator>\n  );\n};\n```\n\n<Markdown>{SubcomponentsSection}</Markdown>\n\n## TreeItem\n\n<ArgTypesWithNote of={TreeItem} />\n<Markdown>{TreeItemDescription}</Markdown>\n\n## TreeItemCustom\n\n<ArgTypesWithNote of={TreeItemCustom} />\n<Markdown>{TreeItemCustomDescription}</Markdown>\n\n<Footer />\n"],"names":["TreeItemDescription","TreeItemCustomDescription","Description","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","ComponentStories","DocsHeader","Canvas","ComponentStories.Default","ControlsWithNote","Markdown","DomRefTable","TreeDomRef","ComponentStories.LazyLoading","SubcomponentsSection","ArgTypesWithNote","TreeItem","TreeItemCustom","Footer"],"mappings":"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"}