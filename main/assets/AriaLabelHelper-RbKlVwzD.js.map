{"version":3,"file":"AriaLabelHelper-RbKlVwzD.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/util/AriaLabelHelper.js"],"sourcesContent":["const associatedElements = new WeakMap();\nconst registeredElements = new WeakMap();\nconst observerOptions = {\n    attributes: true,\n    childList: true,\n    characterData: true,\n    subtree: true,\n};\nconst getEffectiveAriaLabelText = (el) => {\n    const accessibleEl = el;\n    if (!accessibleEl.accessibleNameRef) {\n        if (accessibleEl.accessibleName) {\n            return accessibleEl.accessibleName;\n        }\n        return undefined;\n    }\n    return getAllAccessibleNameRefTexts(el);\n};\n/**\n *\n * @param {HTMLElement} el Defines the HTMLElement, for which you need to get all related texts\n */\nconst getAllAccessibleNameRefTexts = (el) => {\n    const ids = el.accessibleNameRef?.split(\" \") ?? [];\n    const owner = el.getRootNode();\n    let result = \"\";\n    ids.forEach((elementId, index) => {\n        const element = owner.querySelector(`[id='${elementId}']`);\n        const text = `${element && element.textContent ? element.textContent : \"\"}`;\n        if (text) {\n            result += text;\n            if (index < ids.length - 1) {\n                result += \" \";\n            }\n        }\n    });\n    return result;\n};\nconst _getAllAssociatedElementsFromDOM = (el) => {\n    const set = new Set();\n    // adding labels with attribute for matching the el.id\n    const labelsForAssociated = _getAssociatedLabels(el);\n    labelsForAssociated.forEach(itm => {\n        set.add(itm);\n    });\n    // adding other elements that id is the same as accessibleNameRef value\n    const value = el[\"accessibleNameRef\"];\n    const ids = value?.split(\" \") ?? [];\n    ids.forEach(id => {\n        const refEl = _getReferencedElementById(el, id);\n        if (refEl) {\n            set.add(refEl);\n        }\n    });\n    return Array.from(set);\n};\nconst _getAssociatedLabels = (el) => {\n    const labels = el.getRootNode().querySelectorAll(`[for=\"${el.id}\"]`);\n    return Array.from(labels);\n};\nconst _getReferencedElementById = (el, elementId) => {\n    return el.getRootNode().querySelector(`[id='${elementId}']`);\n};\n/**\n * @param {HTMLElement} el Defines the HTMLElement, for which you need to get all related \"label for\" texts\n */\nconst getAssociatedLabelForTexts = (el) => {\n    const results = [];\n    const labels = _getAssociatedLabels(el);\n    labels.forEach((label) => {\n        const labelText = label.textContent;\n        labelText && results.push(labelText);\n    });\n    if (results.length) {\n        return results.join(\" \");\n    }\n    return undefined;\n};\nconst _createInvalidationCallback = (el) => {\n    const invalidationCallback = (changeInfo) => {\n        if (!(changeInfo && changeInfo.type === \"property\" && changeInfo.name === \"accessibleNameRef\")) {\n            return;\n        }\n        const registeredElement = registeredElements.get(el);\n        if (!registeredElement) {\n            return;\n        }\n        const oldAssociatedElements = registeredElement.observedElements;\n        const newAssociatedElements = _getAllAssociatedElementsFromDOM(el);\n        oldAssociatedElements.forEach(oldElement => {\n            if (!newAssociatedElements.includes(oldElement)) {\n                _removeObservedElementFromRegisteredElement(registeredElement, oldElement);\n            }\n        });\n        newAssociatedElements.forEach(newElement => {\n            if (!oldAssociatedElements.includes(newElement)) {\n                _addObservedElementToRegisteredElement(registeredElement, newElement);\n                registeredElement.observedElements.push(newElement);\n            }\n        });\n        registeredElement?.callback();\n    };\n    return invalidationCallback;\n};\nconst registerUI5Element = (el, callback) => {\n    if (registeredElements.has(el)) {\n        return;\n    }\n    const allAssociatedElements = _getAllAssociatedElementsFromDOM(el);\n    const invalidationCallback = _createInvalidationCallback(el);\n    const registeredElement = {\n        host: el,\n        observedElements: allAssociatedElements,\n        callback,\n        invalidationCallback,\n    };\n    registeredElements.set(el, registeredElement);\n    el.attachInvalidate(invalidationCallback);\n    allAssociatedElements.forEach((element) => {\n        _addObservedElementToRegisteredElement(registeredElement, element);\n    });\n    callback();\n};\nconst _addObservedElementToRegisteredElement = (registeredElement, element) => {\n    let associatedElement = associatedElements.get(element);\n    if (!associatedElement) {\n        associatedElement = { observer: null, callbacks: [] };\n        const observer = new MutationObserver(() => {\n            const callbacks = associatedElement.callbacks;\n            callbacks.forEach(callback => {\n                callback();\n            });\n            const domEl = document.getElementById(element.id);\n            // if no longer should be observed from this registeredElement, remove it\n            if (!(registeredElement.host.id === element.getAttribute(\"for\") || domEl)) {\n                _removeObservedElementFromRegisteredElement(registeredElement, element);\n            }\n        });\n        associatedElement.observer = observer;\n        observer.observe(element, observerOptions);\n        associatedElements.set(element, associatedElement);\n    }\n    if (!associatedElement.callbacks.includes(registeredElement.callback)) {\n        associatedElement.callbacks.push(registeredElement.callback);\n    }\n};\nconst _removeObservedElementFromRegisteredElement = (registeredElement, element) => {\n    const associatedElement = associatedElements.get(element);\n    if (associatedElement) {\n        associatedElement.callbacks = associatedElement.callbacks.filter(itm => itm !== registeredElement.callback);\n        if (!associatedElement.callbacks.length) {\n            associatedElement.observer?.disconnect();\n            associatedElements.delete(element);\n        }\n    }\n    registeredElement.observedElements = registeredElement.observedElements.filter(itm => itm !== element);\n};\nconst deregisterUI5Element = (el) => {\n    const registeredElement = registeredElements.get(el);\n    if (!registeredElement) {\n        return;\n    }\n    const oldObservedElements = [...registeredElement.observedElements];\n    oldObservedElements.forEach(observedElement => {\n        _removeObservedElementFromRegisteredElement(registeredElement, observedElement);\n    });\n    el.detachInvalidate(registeredElement.invalidationCallback);\n    registeredElements.delete(el);\n};\nexport { getEffectiveAriaLabelText, getAssociatedLabelForTexts, registerUI5Element, deregisterUI5Element, getAllAccessibleNameRefTexts, };\n//# sourceMappingURL=AriaLabelHelper.js.map"],"names":["associatedElements","registeredElements","observerOptions","getEffectiveAriaLabelText","el","accessibleEl","getAllAccessibleNameRefTexts","_a","ids","owner","result","elementId","index","element","text","_getAllAssociatedElementsFromDOM","set","_getAssociatedLabels","itm","value","id","refEl","_getReferencedElementById","labels","getAssociatedLabelForTexts","results","label","labelText","_createInvalidationCallback","changeInfo","registeredElement","oldAssociatedElements","newAssociatedElements","oldElement","_removeObservedElementFromRegisteredElement","newElement","_addObservedElementToRegisteredElement","registerUI5Element","callback","allAssociatedElements","invalidationCallback","associatedElement","observer","domEl","deregisterUI5Element","observedElement"],"mappings":"AAAA,MAAMA,EAAqB,IAAI,QACzBC,EAAqB,IAAI,QACzBC,EAAkB,CACpB,WAAY,GACZ,UAAW,GACX,cAAe,GACf,QAAS,EACb,EACMC,EAA6BC,GAAO,CACtC,MAAMC,EAAeD,EACrB,OAAKC,EAAa,kBAMXC,EAA6BF,CAAE,EAL9BC,EAAa,eACNA,EAAa,eAExB,MAGR,EAKMC,EAAgCF,GAAO,CAtB7C,IAAAG,EAuBI,MAAMC,IAAMD,EAAAH,EAAG,oBAAH,YAAAG,EAAsB,MAAM,OAAQ,GAC1CE,EAAQL,EAAG,cACjB,IAAIM,EAAS,GACb,OAAAF,EAAI,QAAQ,CAACG,EAAWC,IAAU,CAC9B,MAAMC,EAAUJ,EAAM,cAAc,QAAQE,CAAS,IAAI,EACnDG,EAAO,GAAGD,GAAWA,EAAQ,YAAcA,EAAQ,YAAc,EAAE,GACrEC,IACAJ,GAAUI,EACNF,EAAQJ,EAAI,OAAS,IACrBE,GAAU,KAG1B,CAAK,EACMA,CACX,EACMK,EAAoCX,GAAO,CAC7C,MAAMY,EAAM,IAAI,IAEYC,EAAqBb,CAAE,EAC/B,QAAQc,GAAO,CAC/BF,EAAI,IAAIE,CAAG,CACnB,CAAK,EAED,MAAMC,EAAQf,EAAG,kBAEjB,QADYe,GAAA,YAAAA,EAAO,MAAM,OAAQ,CAAA,GAC7B,QAAQC,GAAM,CACd,MAAMC,EAAQC,EAA0BlB,EAAIgB,CAAE,EAC1CC,GACAL,EAAI,IAAIK,CAAK,CAEzB,CAAK,EACM,MAAM,KAAKL,CAAG,CACzB,EACMC,EAAwBb,GAAO,CACjC,MAAMmB,EAASnB,EAAG,YAAW,EAAG,iBAAiB,SAASA,EAAG,EAAE,IAAI,EACnE,OAAO,MAAM,KAAKmB,CAAM,CAC5B,EACMD,EAA4B,CAAClB,EAAIO,IAC5BP,EAAG,YAAW,EAAG,cAAc,QAAQO,CAAS,IAAI,EAKzDa,EAA8BpB,GAAO,CACvC,MAAMqB,EAAU,CAAA,EAMhB,GALeR,EAAqBb,CAAE,EAC/B,QAASsB,GAAU,CACtB,MAAMC,EAAYD,EAAM,YACxBC,GAAaF,EAAQ,KAAKE,CAAS,CAC3C,CAAK,EACGF,EAAQ,OACR,OAAOA,EAAQ,KAAK,GAAG,CAG/B,EACMG,EAA+BxB,GACHyB,GAAe,CACzC,GAAI,EAAEA,GAAcA,EAAW,OAAS,YAAcA,EAAW,OAAS,qBACtE,OAEJ,MAAMC,EAAoB7B,EAAmB,IAAIG,CAAE,EACnD,GAAI,CAAC0B,EACD,OAEJ,MAAMC,EAAwBD,EAAkB,iBAC1CE,EAAwBjB,EAAiCX,CAAE,EACjE2B,EAAsB,QAAQE,GAAc,CACnCD,EAAsB,SAASC,CAAU,GAC1CC,EAA4CJ,EAAmBG,CAAU,CAEzF,CAAS,EACDD,EAAsB,QAAQG,GAAc,CACnCJ,EAAsB,SAASI,CAAU,IAC1CC,EAAuCN,EAAmBK,CAAU,EACpEL,EAAkB,iBAAiB,KAAKK,CAAU,EAElE,CAAS,EACDL,GAAA,MAAAA,EAAmB,UAC3B,EAGMO,EAAqB,CAACjC,EAAIkC,IAAa,CACzC,GAAIrC,EAAmB,IAAIG,CAAE,EACzB,OAEJ,MAAMmC,EAAwBxB,EAAiCX,CAAE,EAC3DoC,EAAuBZ,EAA4BxB,CAAE,EACrD0B,EAAoB,CACtB,KAAM1B,EACN,iBAAkBmC,EAClB,SAAAD,EACA,qBAAAE,CACR,EACIvC,EAAmB,IAAIG,EAAI0B,CAAiB,EAC5C1B,EAAG,iBAAiBoC,CAAoB,EACxCD,EAAsB,QAAS1B,GAAY,CACvCuB,EAAuCN,EAAmBjB,CAAO,CACzE,CAAK,EACDyB,GACJ,EACMF,EAAyC,CAACN,EAAmBjB,IAAY,CAC3E,IAAI4B,EAAoBzC,EAAmB,IAAIa,CAAO,EACtD,GAAI,CAAC4B,EAAmB,CACpBA,EAAoB,CAAE,SAAU,KAAM,UAAW,CAAE,CAAA,EACnD,MAAMC,EAAW,IAAI,iBAAiB,IAAM,CACtBD,EAAkB,UAC1B,QAAQH,GAAY,CAC1BA,GAChB,CAAa,EACD,MAAMK,EAAQ,SAAS,eAAe9B,EAAQ,EAAE,EAE1CiB,EAAkB,KAAK,KAAOjB,EAAQ,aAAa,KAAK,GAAK8B,GAC/DT,EAA4CJ,EAAmBjB,CAAO,CAEtF,CAAS,EACD4B,EAAkB,SAAWC,EAC7BA,EAAS,QAAQ7B,EAASX,CAAe,EACzCF,EAAmB,IAAIa,EAAS4B,CAAiB,CACpD,CACIA,EAAkB,UAAU,SAASX,EAAkB,QAAQ,GAChEW,EAAkB,UAAU,KAAKX,EAAkB,QAAQ,CAEnE,EACMI,EAA8C,CAACJ,EAAmBjB,IAAY,CAlJpF,IAAAN,EAmJI,MAAMkC,EAAoBzC,EAAmB,IAAIa,CAAO,EACpD4B,IACAA,EAAkB,UAAYA,EAAkB,UAAU,OAAOvB,GAAOA,IAAQY,EAAkB,QAAQ,EACrGW,EAAkB,UAAU,UAC7BlC,EAAAkC,EAAkB,WAAlB,MAAAlC,EAA4B,aAC5BP,EAAmB,OAAOa,CAAO,IAGzCiB,EAAkB,iBAAmBA,EAAkB,iBAAiB,OAAOZ,GAAOA,IAAQL,CAAO,CACzG,EACM+B,EAAwBxC,GAAO,CACjC,MAAM0B,EAAoB7B,EAAmB,IAAIG,CAAE,EACnD,GAAI,CAAC0B,EACD,OAEwB,CAAC,GAAGA,EAAkB,gBAAgB,EAC9C,QAAQe,GAAmB,CAC3CX,EAA4CJ,EAAmBe,CAAe,CACtF,CAAK,EACDzC,EAAG,iBAAiB0B,EAAkB,oBAAoB,EAC1D7B,EAAmB,OAAOG,CAAE,CAChC","x_google_ignoreList":[0]}