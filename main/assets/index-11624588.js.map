{"version":3,"mappings":"uIAiHA,MAAAA,EAAAC,EAAe,aACb,wEAC2E,iCAC1C,GAChC,UACO,IAAAC,EAAA,wCAAAC,KAAA,8ZAEV,EAEAH,EAAA,qBAEAA,EAAA,cAAsB,OAAAI,EAAA,QACC,KAAAC,EAAA,MAEvB","names":["Button","withWebComponent","__vitePreload","n","ButtonDesign","ButtonType"],"sources":["../../packages/main/src/webComponents/Button/index.tsx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/Button.js';\nimport type { ReactNode, MouseEventHandler } from 'react';\nimport { ButtonDesign, ButtonType } from '../../enums/index.js';\nimport type { CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\n\ninterface ButtonAttributes {\n  /**\n   * Defines the accessible ARIA name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the component design.\n   *\n   * **The available values are:**\n   *\n   * *   `Default`\n   * *   `Emphasized`\n   * *   `Positive`\n   * *   `Negative`\n   * *   `Transparent`\n   * *   `Attention`\n   */\n  design?: ButtonDesign | keyof typeof ButtonDesign;\n  /**\n   * Defines whether the component is disabled. A disabled component can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon, displayed as graphical element within the component. The SAP-icons font provides numerous options.\n   *\n   * Example: See all the available icons within the <ui5-link target=\"_blank\" href=\"https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines whether the icon should be displayed after the component text.\n   */\n  iconEnd?: boolean;\n  /**\n   * When set to `true`, the component will automatically submit the nearest HTML form element on `press`.\n   *\n   * **Note:** For the `submits` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   *\n   * @deprecated Set the \"type\" property to \"Submit\" to achieve the same result. The \"submits\" property is ignored if \"type\" is set to any value other than \"Button\".\n   */\n  submits?: boolean;\n  /**\n   * Defines the tooltip of the component.\n   * **Note:** A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function.\n   */\n  tooltip?: string;\n  /**\n   * Defines whether the button has special form-related functionality.\n   *\n   * **The available values are:**\n   *\n   * *   `Button`\n   * *   `Submit`\n   * *   `Reset`\n   *\n   *\n   *\n   * **Note:** For the `type` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   */\n  type?: ButtonType | keyof typeof ButtonType;\n}\n\nexport interface ButtonDomRef extends ButtonAttributes, Ui5DomRef {\n  /**\n   * An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields:\n   *\n   * *   `expanded`: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values:\n   *     *   `true`\n   *     *   `false`\n   * *   `hasPopup`: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values:\n   *     *   `Dialog`\n   *     *   `Grid`\n   *     *   `ListBox`\n   *     *   `Menu`\n   *     *   `Tree`\n   * *   `controls`: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.\n   */\n  accessibilityAttributes: Record<string, unknown>;\n}\n\nexport interface ButtonPropTypes extends ButtonAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the component is activated either with a mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event will not be fired if the `disabled` property is set to `true`.\n   */\n  onClick?: MouseEventHandler<ButtonDomRef>;\n}\n\n/**\n * The `Button` component represents a simple push button. It enables users to trigger actions by clicking or tapping the `Button`, or by pressing certain keyboard keys, such as Enter.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Componentsâ€™ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Button)\n */\nconst Button = withWebComponent<ButtonPropTypes, ButtonDomRef>(\n  'ui5-button',\n  ['accessibleName', 'accessibleNameRef', 'design', 'icon', 'tooltip', 'type'],\n  ['disabled', 'iconEnd', 'submits'],\n  [],\n  ['click'],\n  () => import('@ui5/webcomponents/dist/Button.js')\n);\n\nButton.displayName = 'Button';\n\nButton.defaultProps = {\n  design: ButtonDesign.Default,\n  type: ButtonType.Button\n};\n\nexport { Button };\n"],"file":"assets/index-11624588.js"}