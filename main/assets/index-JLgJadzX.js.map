{"version":3,"mappings":"4KAoEA,MAAAA,EAAAC,EAAuB,gBACrB,0BACyB,yBACD,iBACT,iBACA,IAAAC,EAAA,gDAAAC,KAAA,oJAEjB,EAEAH,EAAA,6BAEAA,EAAA,cAA8B,KAAAI,EAAA,MAE9B","names":["CustomListItem","withWebComponent","__vitePreload","n","ListItemType"],"sources":["../../packages/main/src/webComponents/CustomListItem/index.tsx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/CustomListItem.js';\nimport type { ReactNode } from 'react';\nimport { ListItemType } from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\nimport type { UI5WCSlotsNode } from '../../types/index.js';\n\ninterface CustomListItemAttributes {\n  /**\n   * Defines the text alternative of the component. Note: If not provided a default text alternative will be set, if present.\n   */\n  accessibleName?: string;\n  /**\n   * The navigated state of the list item. If set to `true`, a navigation indicator is displayed at the end of the list item.\n   */\n  navigated?: boolean;\n  /**\n   * Defines the visual indication and behavior of the list items. Available options are `Active` (by default), `Inactive`, `Detail` and `Navigation`.\n   *\n   * **Note:** When set to `Active` or `Navigation`, the item will provide visual response upon press and hover, while with type `Inactive` and `Detail` - will not.\n   */\n  type?: ListItemType | keyof typeof ListItemType;\n  /**\n   * Defines the selected state of the `ListItem`.\n   */\n  selected?: boolean;\n}\n\nexport interface CustomListItemDomRef extends CustomListItemAttributes, Ui5DomRef {\n  /**\n   * An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields:\n   *\n   * *   `ariaSetsize`: Defines the number of items in the current set of listitems or treeitems when not all items in the set are present in the DOM. The value of each `aria-setsize` is an integer reflecting number of items in the complete set. **Note:** If the size of the entire set is unknown, set `aria-setsize=\"-1\"`.\n   * *   `ariaPosinset`: Defines an element's number or position in the current set of listitems or treeitems when not all items are present in the DOM. The value of each `aria-posinset` is an integer greater than or equal to 1, and less than or equal to the size of the set when that size is known.\n   */\n  accessibilityAttributes: Record<string, unknown>;\n}\n\nexport interface CustomListItemPropTypes extends CustomListItemAttributes, CommonProps {\n  /**\n   * Defines the content of the component.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the delete button, displayed in \"Delete\" mode. **Note:** While the slot allows custom buttons, to match design guidelines, please use the `Button` component. **Note:** When the slot is not present, a built-in delete button will be displayed.\n   *\n   * __Note:__ The content of the prop will be rendered into a [&lt;slot&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot) by assigning the respective [slot](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot) attribute (`slot=\"deleteButton\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--docs).\n   */\n  deleteButton?: UI5WCSlotsNode;\n  /**\n   * Fired when the user clicks on the detail button when type is `Detail`.\n   */\n  onDetailClick?: (event: Ui5CustomEvent<CustomListItemDomRef>) => void;\n}\n\n/**\n * A component to be used as custom list item within the `List` the same way as the standard `StandardListItem`. The component accepts arbitrary HTML content to allow full customization.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Componentsâ€™ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-List)\n */\nconst CustomListItem = withWebComponent<CustomListItemPropTypes, CustomListItemDomRef>(\n  'ui5-li-custom',\n  ['accessibleName', 'type'],\n  ['navigated', 'selected'],\n  ['deleteButton'],\n  ['detail-click'],\n  () => import('@ui5/webcomponents/dist/CustomListItem.js')\n);\n\nCustomListItem.displayName = 'CustomListItem';\n\nCustomListItem.defaultProps = {\n  type: ListItemType.Active\n};\n\nexport { CustomListItem };\n"],"file":"assets/index-JLgJadzX.js"}