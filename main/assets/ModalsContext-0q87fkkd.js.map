{"version":3,"file":"ModalsContext-0q87fkkd.js","sources":["../../packages/main/src/internal/ModalsContext.ts"],"sourcesContent":["import type { ComponentType, ContextType, Dispatch, RefCallback, RefObject } from 'react';\nimport { createContext, useContext } from 'react';\n\nexport interface UpdateModalStateAction<Props, DomRef, ContainerElement = HTMLElement> {\n  type: 'set' | 'reset';\n  payload?: ModalState<Props, DomRef, ContainerElement> | { id: string };\n}\n\nexport interface ModalState<Props, DomRef, ContainerElement> {\n  Component: ComponentType;\n  props: Props;\n  ref: RefObject<DomRef> | RefCallback<DomRef>;\n  container: ContainerElement;\n  id: string;\n}\n\ninterface IModalsContext<Props, DomRef> {\n  setModal?: Dispatch<UpdateModalStateAction<Props, DomRef>>;\n}\n\nexport const ModalsContext = createContext<IModalsContext<Record<string, any>, HTMLElement>>({\n  setModal: null\n});\n\nexport const useModalsContext = (): ContextType<typeof ModalsContext> => {\n  let context = ModalsContext;\n  if (typeof window !== 'undefined' && window['@ui5/webcomponents-react']?.ModalsContext) {\n    context = window['@ui5/webcomponents-react'].ModalsContext;\n  }\n  return useContext(context);\n};\n"],"names":["ModalsContext","createContext","useModalsContext","context","_a","useContext"],"mappings":"wCAoBO,MAAMA,EAAgBC,EAAAA,cAAgE,CAC3F,SAAU,IACZ,CAAC,EAEYC,EAAmB,IAAyC,OACvE,IAAIC,EAAUH,EACd,OAAI,OAAO,OAAW,OAAeI,EAAA,OAAO,0BAA0B,IAAjC,MAAAA,EAAoC,iBAC7DD,EAAA,OAAO,0BAA0B,EAAE,eAExCE,EAAAA,WAAWF,CAAO,CAC3B"}