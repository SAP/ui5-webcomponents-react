import{j as o}from"./jsx-runtime-d079401a.js";import{I as p}from"./DomRefTable.module-cd88e22f.js";import{M as n,C as s}from"./chunk-S4VUQJ4A-c5407bd6.js";import"./index-f1f2c4b1.js";import{F as l}from"./Footer-b9a32d3d.js";import{a}from"./AnalyticalTable.stories-d3053849.js";import{u as m}from"./index-59d6410c.js";import"./react-jss.esm-2e5f50f2.js";import"./index-9a516270.js";import"./iframe-5cd535d3.js";import"../sb-preview/runtime.js";import"./UI5Element-e590cd60.js";import"./CustomElementsScopeUtils-264b8a39.js";import"./withWebComponent-b4c67a1a.js";import"./utils-e9940b93.js";import"./useIsomorphicLayoutEffect-c49de97d.js";import"./slot-76e48863.js";import"./Icon-b897d66f.js";import"./Icons-65b34360.js";import"./decline-2f6198d2.js";import"./i18n-defaults-bdef1cce.js";import"./information-e97f915a.js";import"./alert-7494fabe.js";import"./class-map-e1b423a4.js";import"./Button-4505b9f6.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-d5195a49.js";import"./index-743fc8f1.js";import"./clsx-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-203b56de.js";import"./index-72e8d69a.js";import"./Integer-f7f172c9.js";import"./index-ca430e6b.js";import"./Avatar-60d18bb8.js";import"./ResizeHandler-34ecee99.js";import"./employee-78fe46d2.js";import"./index-2ad120ef.js";import"./index-fd35c169.js";import"./Link-a373b451.js";import"./WrappingType-b81e595a.js";import"./index-92d824d3.js";import"./index-c74c9f7f.js";import"./mapValues-57c90777.js";import"./_baseForOwn-2252ef3e.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./_getPrototype-73159a4c.js";import"./_baseUniq-61c59340.js";import"./index-356e4a49.js";import"./index-81cf76a5.js";import"./index-a87ff44a.js";import"./Label-69062358.js";import"./index-714ccf61.js";import"./index-f36e7cfc.js";import"./Popover-742c9988.js";import"./PopupUtils-f407c5e4.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-97942203.js";import"./FocusableElements-d024bb16.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-ecc46a93.js";import"./BrowserScrollbar.css-4a87524a.js";import"./delete-ddd33e93.js";import"./ListItem-65b5ee84.js";import"./ListItemBase-e8a1d82b.js";import"./ItemNavigation-52fe434f.js";import"./TabbableElements-8e49b367.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-7cb729ee.js";import"./RadioButton-bfff4944.js";import"./ValueState-2c5e5904.js";import"./CheckBox-c32e2a79.js";import"./accept-92104380.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-7a309837.js";import"./settings-b07ad1e4.js";import"./index-99d317a4.js";import"./i18n-defaults-c3ad23f6.js";import"./I18nContext-dd74d568.js";import"./CssSizeVariables-596b7aba.js";import"./CustomVariables-f4d4caba.js";import"./filter-4303c230.js";import"./group-2-47c0f4ec.js";import"./index-81f31df1.js";import"./stopPropagation-da74d54e.js";import"./index-a396f37e.js";import"./CustomListItem-c46c3838.js";import"./index-c75a7481.js";import"./index-d59a001b.js";import"./StandardListItem-32d37e59.js";import"./ValueState-ab6838cc.js";import"./index-12b82fcf.js";import"./Input-4e4191f2.js";import"./Suggestions.css-91a648c4.js";import"./ResponsivePopoverCommon.css-5a4ca537.js";import"./ValueStateMessage.css-ca082762.js";import"./navigation-down-arrow-63006c7b.js";import"./navigation-right-arrow-82c786da.js";import"./useCurrentTheme-599658b9.js";import"./index-aeb67831.js";import"./index-6c24db7e.js";import"./GlobalStyleClasses-7209358d.js";import"./index-46cf3d8f.js";import"./Title-0fb688d3.js";import"./useIsomorphicId-ed1d334d.js";import"./useIsRTL-9db2a057.js";import"./debounce-5c77766a.js";import"./index-c0ca0d9d.js";import"./Select-bafc0df3.js";import"./InvisibleMessage-71605293.js";import"./slim-arrow-down-16231f47.js";import"./ResponsivePopover-ffa286b7.js";import"./Dialog-cf714d6a.js";import"./index-5274d661.js";import"./index-39b6d491.js";import"./ToggleButton-c0a19ccb.js";import"./index-7d4e3d67.js";import"./GroupHeaderListItem-667d01bb.js";import"./Tokenizer-506d47fc.js";import"./ScrollEnablement-a13736e5.js";import"./animate-1a16ba20.js";import"./Token-a3e125e7.js";import"./ComboBoxItem-15509914.js";import"./index-fb0f54cf.js";function Mi(t={}){const{wrapper:r}=Object.assign({},m(),t.components);return r?o.jsx(r,Object.assign({},t,{children:o.jsx(e,{})})):e();function e(){const i=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre"},m(),t.components);return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin: useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(s,{sourceState:"none",of:a}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(l,{})]})}}export{Mi as default};
//# sourceMappingURL=PluginOnColumnResize-59e45123.js.map
