{"version":3,"file":"ColumnChartWithTrend.stories-96bf213f.js","sources":["../../packages/charts/src/hooks/usePrepareTrendMeasures.ts","../../packages/charts/src/components/ColumnChartWithTrend/Placeholder.tsx","../../packages/charts/src/components/ColumnChartWithTrend/ColumnChartWithTrend.tsx"],"sourcesContent":["import { useMemo } from 'react';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils.js';\nimport type { IChartMeasure } from '../interfaces/IChartMeasure.js';\nimport { defaultFormatter } from '../internal/defaults.js';\n\ninterface ITrendChartMeasure extends IChartMeasure {\n  type: 'line' | 'bar';\n}\n\nexport const usePrepareTrendMeasures = (measures: ITrendChartMeasure[], dataset: Record<string, unknown>[]) =>\n  useMemo(() => {\n    const lineMeasures = [];\n    const columnMeasures = [];\n    const columnDataset = [];\n\n    measures?.forEach((measure, index) => {\n      if (measure.type === 'bar') {\n        lineMeasures.push({\n          ...measure,\n          opacity: 0,\n          hide: true,\n          hideDataLabel: true,\n          showDot: false,\n          formatter: defaultFormatter\n        });\n        columnMeasures.push({\n          color: measure.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`,\n          formatter: defaultFormatter,\n          ...measure\n        });\n      }\n\n      if (measure.type === 'line') {\n        lineMeasures.push({\n          color: measure.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`,\n          formatter: defaultFormatter,\n          ...measure\n        });\n        columnMeasures.push({\n          ...measure,\n          opacity: 0,\n          hideDataLabel: true,\n          showDot: false,\n          formatter: defaultFormatter\n        });\n      }\n    });\n\n    dataset?.forEach((data) => {\n      const reducedLineValues = {};\n\n      lineMeasures.forEach((line) => {\n        if (line.type === 'line') {\n          reducedLineValues[`__${line.accessor}`] = getValueByDataKey(data, line.accessor);\n          reducedLineValues[line.accessor] = 1;\n        }\n      });\n\n      columnDataset.push({\n        ...data,\n        ...reducedLineValues\n      });\n    });\n\n    return { lineMeasures, columnMeasures, columnDataset };\n  }, [measures, dataset]);\n","import { ThemingParameters } from '@ui5/webcomponents-react-base';\nimport React from 'react';\nimport ContentLoader from 'react-content-loader/dist/react-content-loader.es.js';\n\nexport const ColumnChartWithTrendPlaceholder = (props) => {\n  return (\n    <ContentLoader\n      viewBox=\"0 0 165 145\"\n      preserveAspectRatio=\"xMidYMid meet\"\n      width=\"100%\"\n      height=\"100%\"\n      speed={2}\n      backgroundColor={ThemingParameters.sapContent_ImagePlaceholderBackground}\n      foregroundColor={ThemingParameters.sapContent_ImagePlaceholderForegroundColor}\n      backgroundOpacity={ThemingParameters.sapContent_DisabledOpacity as any}\n      {...props}\n    >\n      <path\n        d=\"M 20 56 L 39 33 L 57 25 L 77 5 L 99 25 L 125 31 L 139 25 L 125 32 L 98 27 L 77 10 L 58 27 L 39 35 L 20 56 Z\"\n        fill=\"none\"\n        strokeWidth=\"2\"\n      />\n      <rect x=\"10\" y=\"135\" width=\"135\" height=\"1\" />\n      <rect x=\"20\" y=\"65\" width=\"15\" height=\"70\" />\n      <rect x=\"40\" y=\"58\" width=\"15\" height=\"77\" />\n      <rect x=\"60\" y=\"68\" width=\"15\" height=\"67\" />\n      <rect x=\"80\" y=\"60\" width=\"15\" height=\"75\" />\n      <rect x=\"100\" y=\"35\" width=\"15\" height=\"100\" />\n      <rect x=\"120\" y=\"75\" width=\"15\" height=\"60\" />\n    </ContentLoader>\n  );\n};\n","'use client';\n\nimport { ThemingParameters, useIsomorphicId } from '@ui5/webcomponents-react-base';\nimport type { CSSProperties } from 'react';\nimport React, { forwardRef } from 'react';\nimport type { TooltipProps } from 'recharts';\nimport { useLongestYAxisLabel } from '../../hooks/useLongestYAxisLabel.js';\nimport { usePrepareDimensionsAndMeasures } from '../../hooks/usePrepareDimensionsAndMeasures.js';\nimport { usePrepareTrendMeasures } from '../../hooks/usePrepareTrendMeasures.js';\nimport type { ICartesianChartConfig } from '../../interfaces/ICartesianChartConfig.js';\nimport type { IChartBaseProps } from '../../interfaces/IChartBaseProps.js';\nimport type { IChartDimension } from '../../interfaces/IChartDimension.js';\nimport type { IChartMeasure } from '../../interfaces/IChartMeasure.js';\nimport { defaultFormatter } from '../../internal/defaults.js';\nimport { ComposedChart } from '../ComposedChart/index.js';\nimport { ColumnChartWithTrendPlaceholder } from './Placeholder.js';\n\ninterface MeasureConfig extends IChartMeasure {\n  /**\n   * Column Width\n   */\n  width?: number;\n  /**\n   * Column Opacity\n   */\n  opacity?: number;\n  /**\n   * Chart type\n   */\n  type: AvailableChartTypes;\n  /**\n   * column Stack ID\n   */\n  stackId?: string;\n  /**\n   * Highlight color of defined elements\n   * @param value {string | number} Current value of the highlighted measure\n   * @param measure {IChartMeasure} Current measure object\n   * @param dataElement {object} Current data element\n   */\n  highlightColor?: (value: number, measure: MeasureConfig, dataElement: Record<string, any>) => CSSProperties['color'];\n}\n\ninterface DimensionConfig extends IChartDimension {\n  /**\n   * Interval of axis label which defines the number that controls how many ticks are rendered on the x axis\n   * @default 0\n   */\n  interval?: number;\n}\n\nexport interface ColumnChartWithTrendProps\n  extends Omit<IChartBaseProps<Omit<ICartesianChartConfig, 'secondYAxis' | 'secondYAxisConfig'>>, 'syncId'> {\n  /**\n   * An array of config objects. Each object will define one dimension of the chart.\n   *\n   * **Required Properties**\n   * - `accessor`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * **Optional Properties**\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `interval`: number that controls how many ticks are rendered on the x axis\n   *\n   */\n  dimensions: DimensionConfig[];\n  /**\n   * An array of config objects. Each object is defining one column in the chart.\n   *\n   * **Required properties**\n   * - `accessor`: string containing the path to the dataset key this column should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * **Optional properties**\n   *\n   * - `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n   * - `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this column.\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `width`: column width, defaults to `auto`\n   * - `opacity`: column opacity, defaults to `1`\n   * - `stackId`: columns with the same stackId will be stacked\n   * - `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   *    defined condition. Overwrites code>color</code> of the element.\n   *\n   */\n  measures: MeasureConfig[];\n}\n\nconst dimensionDefaults = {\n  formatter: defaultFormatter\n};\n\nconst measureDefaults = {\n  formatter: defaultFormatter,\n  opacity: 1\n};\n\nconst lineTooltipConfig = { wrapperStyle: { visibility: 'hidden' } } as TooltipProps<any, any>;\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\ntype AvailableChartTypes = 'line' | 'bar' | string;\n/**\n * A `ColumnChartWithTrend` is a data visualization where each category is represented by a rectangle, with the height of the rectangle being proportional to the values being plotted amd a trend line which is displayed above the column chart.\n */\nconst ColumnChartWithTrend = forwardRef<HTMLDivElement, ColumnChartWithTrendProps>((props, ref) => {\n  const {\n    loading,\n    dataset,\n    style,\n    className,\n    slot,\n    onClick,\n    noLegend,\n    noAnimation,\n    onDataPointClick,\n    onLegendClick,\n    ChartPlaceholder,\n    ...rest\n  } = props;\n\n  const syncId = useIsomorphicId();\n\n  const chartConfig = {\n    yAxisVisible: false,\n    xAxisVisible: true,\n    gridStroke: ThemingParameters.sapList_BorderColor,\n    gridHorizontal: true,\n    gridVertical: false,\n    legendPosition: 'bottom',\n    legendHorizontalAlign: 'left',\n    barGap: 3,\n    zoomingTool: false,\n    resizeDebounce: 250,\n    ...props.chartConfig\n  };\n\n  const { dimensions, measures } = usePrepareDimensionsAndMeasures(\n    props.dimensions,\n    props.measures,\n    dimensionDefaults,\n    measureDefaults\n  );\n\n  const { lineMeasures, columnMeasures, columnDataset } = usePrepareTrendMeasures(measures, dataset);\n  const [yAxisWidth] = useLongestYAxisLabel(columnDataset, columnMeasures, chartConfig.legendPosition);\n\n  const columnTooltipConfig = {\n    formatter: (value, name, tooltipProps) => {\n      const line = lineMeasures.find(\n        (currLine) => currLine.type === 'line' && currLine.accessor === tooltipProps.dataKey\n      );\n      if (line) {\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        return line.formatter(tooltipProps.payload[`__${line.accessor}`]);\n      }\n      const column = columnMeasures.find((currLine) => currLine.accessor === tooltipProps.dataKey);\n      return column.formatter(value, name, tooltipProps);\n    }\n  } as TooltipProps<any, any>;\n\n  const { chartConfig: _0, dimensions: _1, measures: _2, tooltipConfig: _3, ...propsWithoutOmitted } = rest;\n\n  return (\n    <div\n      ref={ref}\n      style={{ display: 'flex', flexDirection: 'column', height: style?.height, width: style?.width, ...style }}\n      className={className}\n      slot={slot}\n      {...propsWithoutOmitted}\n    >\n      {dataset?.length !== 0 && (\n        <ComposedChart\n          className={\n            typeof onDataPointClick === 'function' || typeof onClick === 'function' ? 'has-click-handler' : undefined\n          }\n          tooltipConfig={lineTooltipConfig}\n          noAnimation={noAnimation}\n          loading={loading}\n          onClick={onClick}\n          syncId={syncId}\n          style={{ ...style, height: `calc(${style?.height} * 0.2)` }}\n          dataset={dataset}\n          measures={lineMeasures}\n          dimensions={dimensions}\n          noLegend\n          onDataPointClick={onDataPointClick}\n          chartConfig={{\n            xAxisVisible: false,\n            yAxisVisible: false,\n            yAxisTicksVisible: false,\n            gridHorizontal: false,\n            yAxisLabelsVisible: false,\n            yAxisWidth\n          }}\n        />\n      )}\n      <ComposedChart\n        onLegendClick={onLegendClick}\n        tooltipConfig={columnTooltipConfig}\n        noAnimation={noAnimation}\n        noLegend={noLegend}\n        loading={loading}\n        onClick={onClick}\n        onDataPointClick={onDataPointClick}\n        syncId={syncId}\n        ChartPlaceholder={ChartPlaceholder ?? ColumnChartWithTrendPlaceholder}\n        dataset={columnDataset}\n        measures={columnMeasures}\n        dimensions={dimensions}\n        chartConfig={chartConfig}\n        style={{ ...style, height: `calc(${style?.height} * ${dataset?.length !== 0 ? 0.8 : 1})` }}\n        className={\n          typeof onDataPointClick === 'function' || typeof onClick === 'function' ? 'has-click-handler' : undefined\n        }\n      />\n    </div>\n  );\n});\n\nColumnChartWithTrend.defaultProps = {\n  noLegend: false,\n  noAnimation: false\n};\n\nColumnChartWithTrend.displayName = 'ColumnChartWithTrend';\n\nexport { ColumnChartWithTrend };\n"],"names":["usePrepareTrendMeasures","measures","dataset","useMemo","lineMeasures","columnMeasures","columnDataset","measure","index","defaultFormatter","data","reducedLineValues","line","getValueByDataKey","ColumnChartWithTrendPlaceholder","props","jsxs","ContentLoader","ThemingParameters","jsx","dimensionDefaults","measureDefaults","lineTooltipConfig","ColumnChartWithTrend","forwardRef","ref","loading","style","className","slot","onClick","noLegend","noAnimation","onDataPointClick","onLegendClick","ChartPlaceholder","rest","syncId","useIsomorphicId","chartConfig","dimensions","usePrepareDimensionsAndMeasures","yAxisWidth","useLongestYAxisLabel","columnTooltipConfig","value","name","tooltipProps","currLine","_0","_1","_2","_3","propsWithoutOmitted","ComposedChart"],"mappings":"yeASO,MAAMA,EAA0B,CAACC,EAAgCC,IACtEC,UAAQ,IAAM,CACZ,MAAMC,EAAe,CAAA,EACfC,EAAiB,CAAA,EACjBC,EAAgB,CAAA,EAEZ,OAAAL,GAAA,MAAAA,EAAA,QAAQ,CAACM,EAASC,IAAU,CAChCD,EAAQ,OAAS,QACnBH,EAAa,KAAK,CAChB,GAAGG,EACH,QAAS,EACT,KAAM,GACN,cAAe,GACf,QAAS,GACT,UAAWE,CAAA,CACZ,EACDJ,EAAe,KAAK,CAClB,MAAOE,EAAQ,OAAS,+BAAgCC,EAAQ,GAAM,CAAC,IACvE,UAAWC,EACX,GAAGF,CAAA,CACJ,GAGCA,EAAQ,OAAS,SACnBH,EAAa,KAAK,CAChB,MAAOG,EAAQ,OAAS,+BAAgCC,EAAQ,GAAM,CAAC,IACvE,UAAWC,EACX,GAAGF,CAAA,CACJ,EACDF,EAAe,KAAK,CAClB,GAAGE,EACH,QAAS,EACT,cAAe,GACf,QAAS,GACT,UAAWE,CAAA,CACZ,EACH,GAGOP,GAAA,MAAAA,EAAA,QAASQ,GAAS,CACzB,MAAMC,EAAoB,CAAA,EAEbP,EAAA,QAASQ,GAAS,CACzBA,EAAK,OAAS,SACED,EAAA,KAAKC,EAAK,QAAQ,EAAE,EAAIC,EAAAA,kBAAkBH,EAAME,EAAK,QAAQ,EAC7DD,EAAAC,EAAK,QAAQ,EAAI,EACrC,CACD,EAEDN,EAAc,KAAK,CACjB,GAAGI,EACH,GAAGC,CAAA,CACJ,CAAA,GAGI,CAAE,aAAAP,EAAc,eAAAC,EAAgB,cAAAC,EACzC,EAAG,CAACL,EAAUC,CAAO,CAAC,EC7DjBY,EAAAC,GACLC,EAAA,KACEC,EAAC,CAAA,QAAA,cACS,oBAAA,gBACY,MAAA,OACd,OAAA,OACC,MAAA,EACA,gBAAAC,EAAA,sCAC4B,gBAAAA,EAAA,2CACA,kBAAAA,EAAA,2BACE,GAAAH,EACjC,SAAA,CAEJI,EAAA,IAAA,OAAC,CAAA,EAAA,8GACG,KAAA,OACG,YAAA,GACO,CAAA,EACdA,EAAAA,IAAA,OAAA,CAAA,EAAA,KAAA,EAAA,MAAA,MAAA,MAAA,OAAA,GAAA,CAAA,EAC4CA,EAAAA,IAAA,OAAA,CAAA,EAAA,KAAA,EAAA,KAAA,MAAA,KAAA,OAAA,IAAA,CAAA,EACDA,EAAAA,IAAA,OAAA,CAAA,EAAA,KAAA,EAAA,KAAA,MAAA,KAAA,OAAA,IAAA,CAAA,EACAA,EAAAA,IAAA,OAAA,CAAA,EAAA,KAAA,EAAA,KAAA,MAAA,KAAA,OAAA,IAAA,CAAA,EACAA,EAAAA,IAAA,OAAA,CAAA,EAAA,KAAA,EAAA,KAAA,MAAA,KAAA,OAAA,IAAA,CAAA,EACAA,EAAAA,IAAA,OAAA,CAAA,EAAA,MAAA,EAAA,KAAA,MAAA,KAAA,OAAA,KAAA,CAAA,EACEA,EAAAA,IAAA,OAAA,CAAA,EAAA,MAAA,EAAA,KAAA,MAAA,KAAA,OAAA,IAAA,CAAA,CACD,CAAA,CAAA,oJC8DlD,MAAAC,EAAA,CAA0B,UAAAX,CAE1B,EAEAY,EAAA,CAAwB,UAAAZ,EACX,QAAA,CAEb,EAEAa,EAAA,CAAA,aAAA,CAAA,WAAA,QAAA,CAAA,EAOAC,EAAAC,EAAA,WAAA,CAAAT,EAAAU,IAAA,CACE,KAAA,CAAM,QAAAC,EACJ,QAAAxB,EACA,MAAAyB,EACA,UAAAC,EACA,KAAAC,EACA,QAAAC,EACA,SAAAC,EACA,YAAAC,EACA,iBAAAC,EACA,cAAAC,EACA,iBAAAC,EACA,GAAAC,CACG,EAAArB,EAGLsB,EAAAC,IAEAC,EAAA,CAAoB,aAAA,GACJ,aAAA,GACA,WAAArB,EAAA,oBACgB,eAAA,GACd,aAAA,GACF,eAAA,SACE,sBAAA,OACO,OAAA,EACf,YAAA,GACK,eAAA,IACG,GAAAH,EAAA,WACP,EAGX,CAAA,WAAAyB,EAAA,SAAAvC,CAAA,EAAAwC,EAAiC1B,EAAA,WACzBA,EAAA,SACAK,EACNC,CACA,EAGF,CAAA,aAAAjB,EAAA,eAAAC,EAAA,cAAAC,CAAA,EAAAN,EAAAC,EAAAC,CAAA,EACA,CAAAwC,CAAA,EAAAC,EAAArC,EAAAD,EAAAkC,EAAA,cAAA,EAEAK,EAAA,CAA4B,UAAA,CAAAC,EAAAC,EAAAC,IAAA,CAExB,MAAAnC,EAAAR,EAAA,KAA0B4C,GAAAA,EAAA,OAAA,QAAAA,EAAA,WAAAD,EAAA,OACqD,EAE/E,OAAAnC,EAEEA,EAAA,UAAAmC,EAAA,QAAA,KAAAnC,EAAA,QAAA,EAAA,CAAA,EAEFP,EAAA,KAAA2C,GAAAA,EAAA,WAAAD,EAAA,OAAA,EACA,UAAAF,EAAAC,EAAAC,CAAA,CAAiD,CACnD,EAGF,CAAA,YAAAE,GAAA,WAAAC,GAAA,SAAAC,GAAA,cAAAC,GAAA,GAAAC,CAAA,EAAAjB,EAEA,OAAApB,EAAA,KACE,MAAC,CAAA,IAAAS,EACC,MAAA,CAAA,QAAA,OAAA,cAAA,SAAA,OAAAE,GAAA,YAAAA,EAAA,OAAA,MAAAA,GAAA,YAAAA,EAAA,MAAA,GAAAA,CAAA,EACwG,UAAAC,EACxG,KAAAC,EACA,GAAAwB,EACI,SAAA,EAEHnD,GAAA,YAAAA,EAAA,UAAA,GAAAiB,EAAA,IACCmC,EAAC,CAAA,UAAA,OAAArB,GAAA,YAAA,OAAAH,GAAA,WAAA,oBAAA,OAEmG,cAAAR,EAEnF,YAAAU,EACf,QAAAN,EACA,QAAAI,EACA,OAAAO,EACA,MAAA,CAAA,GAAAV,EAAA,OAAA,QAAAA,GAAA,YAAAA,EAAA,MAAA,SAAA,EAC0D,QAAAzB,EAC1D,SAAAE,EACU,WAAAoC,EACV,SAAA,GACQ,iBAAAP,EACR,YAAA,CACa,aAAA,GACG,aAAA,GACA,kBAAA,GACK,eAAA,GACH,mBAAA,GACI,WAAAS,CACpB,CACF,CAAA,EACFvB,EAAA,IAEFmC,EAAC,CAAA,cAAApB,EACC,cAAAU,EACe,YAAAZ,EACf,SAAAD,EACA,QAAAL,EACA,QAAAI,EACA,iBAAAG,EACA,OAAAI,EACA,iBAAAF,GAAArB,EACsC,QAAAR,EAC7B,SAAAD,EACC,WAAAmC,EACV,YAAAD,EACA,MAAA,CAAA,GAAAZ,EAAA,OAAA,QAAAA,GAAA,YAAAA,EAAA,MAAA,OAAAzB,GAAA,YAAAA,EAAA,UAAA,EAAA,GAAA,CAAA,GAAA,EACyF,UAAA,OAAA+B,GAAA,YAAA,OAAAH,GAAA,WAAA,oBAAA,MAES,CAAA,CAEpG,CAAA,CAAA,CAGN,CAAA,EAEAP,EAAA,aAAA,CAAoC,SAAA,GACxB,YAAA,EAEZ,EAEAA,EAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;"}