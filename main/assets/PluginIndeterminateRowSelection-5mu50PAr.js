import{j as t}from"./jsx-runtime-DtaoT6pD.js";import{I as n}from"./DomRefTable.module-Ypd9NL38.js";import{M as p,C as a}from"./chunk-HLWAVYOI-RTjlF1p8.js";import"./index-OjgoNOWw.js";import{F as s}from"./Footer-E10QvGmV.js";import{M as l}from"./index-WOksHfz7.js";import{c}from"./AnalyticalTable.stories-NUcLtndb.js";import{u as m}from"./index-RwE9nQVW.js";import"./react-jss.esm-tmBtHfec.js";import"./index-A5agBEX2.js";import"./clsx-c3LcQGjR.js";import"./i18n-defaults-cIbBWf4j.js";import"./i18nBundle-Crssojm_.js";import"./VersionInfo-hBCHoyLi.js";import"./I18nContext-VUOpdMoH.js";import"./useIsomorphicLayoutEffect-s31TYDr7.js";import"./ThemingParameters-UghqSl-x.js";import"./addCustomCSSWithScoping-_6wxL5DG.js";import"./UI5Element-Y0uzLFOr.js";import"./CustomElementsScopeUtils-5j4ES8UU.js";import"./utils-NoXYr8Q_.js";import"./index-yHPcl7dx.js";import"./iframe-LnjFU1Gc.js";import"../sb-preview/runtime.js";import"./withWebComponent-l-jCeTa1.js";import"./slot-HSrR9XJ-.js";import"./Icon-bdsWWJur.js";import"./Icons-WRZ8WMWs.js";import"./Integer-kog98579.js";import"./class-map-kmjzTHDs.js";import"./i18n-defaults-RBzcmDt8.js";import"./index-sO5EjPrk.js";import"./Avatar-iPKVYLtK.js";import"./ResizeHandler-YlQCt_sN.js";import"./employee-fYGGLuhG.js";import"./alert-hH0G14f_.js";import"./index-dTG2BJNO.js";import"./AriaLabelHelper-RbKlVwzD.js";import"./index-g9IXCd2p.js";import"./Link-tRmLKUhK.js";import"./MarkedEvents-aYv14vsS.js";import"./WrappingType-avPrqc94.js";import"./index-GL4gBoyB.js";import"./index-QYh6idnL.js";import"./mapValues-HzTlT2lF.js";import"./_baseForOwn-UZJwRxDU.js";import"./_baseUniq-JVyScZ-n.js";import"./index-PPLHz8o0.js";import"./index-q8oiNN3v.js";import"./index-twFNdV4Q.js";import"./Label-ZVCbnRu4.js";import"./index-HCXEAFb2.js";import"./Button-2q6zbrjb.js";import"./index-obeH4WGW.js";import"./Popover-F3UgQy3P.js";import"./PopupUtils-7oRQuqE1.js";import"./getActiveElement-IIKAy3xo.js";import"./PopupsCommon.css-QWf1zPQp.js";import"./FocusableElements-SaTJsZH1.js";import"./isElementHidden-d3-Fo4V6.js";import"./decline-tcMkvtbY.js";import"./i18n-defaults-n2A5pq_J.js";import"./MediaRange-sEMt71Ve.js";import"./style-map-IagzN5gT.js";import"./BrowserScrollbar.css-aoBbOOT0.js";import"./information-bLrgXyhK.js";import"./delete-yYwI50XT.js";import"./ListItem-jYoROocM.js";import"./ListItemBase-bpRWPkiV.js";import"./ItemNavigation-KSoe0GH9.js";import"./TabbableElements-aYIPY3zp.js";import"./debounce-8VpZswfd.js";import"./BusyIndicator-qZ0KGBIz.js";import"./RadioButton-UJTh3ZVD.js";import"./ValueState-zUcANXoY.js";import"./CheckBox-0JSYmzBX.js";import"./accept-QwIZktij.js";import"./HasPopup-9BAMrqbD.js";import"./slim-arrow-right-SUiVGFkg.js";import"./settings-5h965XwP.js";import"./index-Jm2lAFsC.js";import"./CssSizeVariables-IMpNFjIe.js";import"./CustomVariables-jcpx1a4M.js";import"./filter-pCaYNZtc.js";import"./group-2-ydsTmsl_.js";import"./index-toQBinH5.js";import"./stopPropagation-dV8jBYUw.js";import"./index-Ndqkandc.js";import"./CustomListItem-Hud7mBC_.js";import"./index-_WDScRSb.js";import"./index-QFdgil6Y.js";import"./StandardListItem-yowcTzq2.js";import"./ValueState-I_-hGNIb.js";import"./index-xu1SBV_D.js";import"./Input-w0RPGTV7.js";import"./Suggestions.css-gWk1MJ99.js";import"./ResponsivePopoverCommon.css-qnvKwXX1.js";import"./ValueStateMessage.css-AHMe5yzO.js";import"./navigation-down-arrow-C2NzBYEr.js";import"./navigation-right-arrow-_KVki8t8.js";import"./useCurrentTheme-2c04FTLc.js";import"./index-OUjDzkdm.js";import"./index-BGdPQ6Zh.js";import"./GlobalStyleClasses-kWTEndz_.js";import"./index-DYJ7A_hr.js";import"./Title-QMeEqdxD.js";import"./useIsomorphicId-G0VPUEKO.js";import"./useIsRTL-8rEKWLsl.js";import"./debounce-F9irgL9Y.js";import"./index-77ZBcpbd.js";import"./Select-gPlLiyBN.js";import"./InvisibleMessage-yI1s4DPy.js";import"./slim-arrow-down-kCxSOfJs.js";import"./ResponsivePopover-7YN-L6kM.js";import"./Dialog-m8Vv8OUX.js";import"./index-0L8tH-rW.js";import"./index-1jmlZYIQ.js";import"./ToggleButton-6T4q8UOk.js";import"./index-InuaoODi.js";import"./GroupHeaderListItem-Fs_-kdy5.js";import"./Tokenizer-AeUGvOLW.js";import"./ScrollEnablement-Zd_Qg15H.js";import"./animate-Pj1TncyK.js";import"./Token-tARUtx_F.js";import"./ComboBoxItem-9oRnMI8f.js";import"./index-dvKCIc-U.js";function Oe(i={}){const{wrapper:o}=Object.assign({},m(),i.components);return o?t.jsx(o,Object.assign({},i,{children:t.jsx(r,{})})):r();function r(){const e=Object.assign({h1:"h1",p:"p",code:"code",strong:"strong",h2:"h2",pre:"pre",h4:"h4"},m(),i.components);return t.jsxs(t.Fragment,{children:[t.jsx(p,{title:"Data Display / AnalyticalTable / Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(e.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,t.jsx(n,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,t.jsxs(e.p,{children:["The ",t.jsx(e.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,t.jsx(e.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,t.jsxs(e.p,{children:[t.jsx(e.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,t.jsx(l,{hideCloseButton:!0,children:t.jsxs(t.Fragment,{children:[" The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",t.jsx(e.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,t.jsx(e.h2,{id:"example",children:"Example"}),`
`,t.jsx(a,{sourceState:"none",of:c}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-jsx",children:`<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.MultiSelect}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={[AnalyticalTableHooks.useIndeterminateRowSelection()]}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,t.jsx(e.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,t.jsx(e.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,t.jsx(e.pre,{children:t.jsx(e.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,t.jsxs(e.p,{children:["The callback is fired, every time the internal ",t.jsx(e.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,t.jsx(e.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,t.jsx(s,{})]})}}export{Oe as default};
//# sourceMappingURL=PluginIndeterminateRowSelection-5mu50PAr.js.map
