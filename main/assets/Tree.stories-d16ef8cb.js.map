{"version":3,"mappings":"ioBAqHA,MAAAA,EAAAC,EAAa,WACX,qFACwF,GACvF,WACQ,+FACyF,IAAAC,EAAA,krCAEpG,EAEAF,EAAA,mBAEAA,EAAA,cAAoB,KAAAG,EAAA,IAEpB;;;;;;;;;;;;;;;;2HChBA,MAAAC,EAAAH,EAAiB,gBACf,+EACkF,kEACd,iBACrD,iBACA,IAAAC,EAAA,krCAEjB,EAEAE,EAAA,uBAEAA,EAAA,cAAwB,oBAAAC,EAAA,KACU,KAAAC,EAAA,MAElC;;;;;;;;;;2HCRA,MAAAC,EAAAN,EAAuB,uBACrB,uDACwD,yFACoC,2BAClE,iBACX,IAAAC,EAAA,krCAEjB,EAEAK,EAAA,6BAEAA,EAAA,cAA8B,oBAAAF,EAAA,KACI,KAAAC,EAAA,MAElC;;;;;;;;;;;;;;;;2HCpIA,MAAME,EAAO,OACPC,EAAW,0XACXC,EAAM,GAENC,EAAa,eACbC,EAAc,2BAEpBC,EAAaL,EAAM,UAAEC,EAAQ,IAAEC,EAAG,WAAEC,EAAU,YAAEC,CAAW,CAAE,ECP7D,MAAMJ,EAAO,OACPC,EAAW,sfACXC,EAAM,GAENC,EAAa,eACbC,EAAc,2BAEpBC,EAAaL,EAAM,UAAEC,EAAQ,IAAEC,EAAG,WAAEC,EAAU,YAAEC,CAAW,CAAE,ECL5CE,EAAqB,EAEtC,MAAAC,EAAe,OCJTP,EAAO,sBACPC,EAAW,mhDACXC,EAAM,GAENC,EAAa,eACbC,EAAc,2BAEpBC,EAAaL,EAAM,UAAEC,EAAQ,IAAEC,EAAG,WAAEC,EAAU,YAAEC,CAAW,CAAE,ECP7D,MAAMJ,EAAO,sBACPC,EAAW,ugBACXC,EAAM,GAENC,EAAa,eACbC,GAAc,2BAEpBC,EAAaL,EAAM,UAAEC,EAAQ,IAAEC,EAAG,WAAEC,EAAU,YAAEC,EAAW,CAAE,ECL5CE,EAAqB,EAEtC,MAAAE,GAAe,sBCJTR,GAAO,QACPC,EAAW,8lBACXC,GAAM,GAENC,GAAa,eACbC,GAAc,2BAEpBC,EAAaL,GAAM,UAAEC,EAAQ,IAAEC,GAAG,WAAEC,GAAU,YAAEC,EAAW,CAAE,ECP7D,MAAMJ,GAAO,QACPC,EAAW,qpBACXC,GAAM,GAENC,GAAa,eACbC,GAAc,2BAEpBC,EAAaL,GAAM,CAAE,SAAAC,EAAU,IAAAC,GAAK,WAAAC,GAAY,YAAAC,EAAW,CAAE,ECL5CE,EAAqB,EAEtC,MAAAG,GAAe","names":["Tree","withWebComponent","__vitePreload","ListMode","TreeItem","ValueState","ListItemType","TreeItemCustom","name","pathData","ltr","collection","packageName","registerIcon","isLegacyThemeFamily","copyIcon","dlCloutIcon","pasteIcon"],"sources":["../../packages/main/src/webComponents/Tree/index.tsx","../../packages/main/src/webComponents/TreeItem/index.tsx","../../packages/main/src/webComponents/TreeItemCustom/index.tsx","../../node_modules/@ui5/webcomponents-icons/dist/v4/copy.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/copy.js","../../node_modules/@ui5/webcomponents-icons/dist/copy.js","../../node_modules/@ui5/webcomponents-icons/dist/v4/download-from-cloud.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/download-from-cloud.js","../../node_modules/@ui5/webcomponents-icons/dist/download-from-cloud.js","../../node_modules/@ui5/webcomponents-icons/dist/v4/paste.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/paste.js","../../node_modules/@ui5/webcomponents-icons/dist/paste.js"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/Tree.js';\nimport type {\n  TreeItemClickEventDetail,\n  TreeItemDeleteEventDetail,\n  TreeItemMouseoutEventDetail,\n  TreeItemMouseoverEventDetail,\n  TreeItemToggleEventDetail,\n  TreeSelectionChangeEventDetail\n} from '@ui5/webcomponents/dist/Tree.js';\nimport type { ReactNode } from 'react';\nimport { ListMode } from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\nimport type { UI5WCSlotsNode } from '../../types/index.js';\n\ninterface TreeAttributes {\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the IDs of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the component footer text.\n   */\n  footerText?: string;\n  /**\n   * Defines the component header text.\n   *\n   * **Note:** If the `header` slot is set, this property is ignored.\n   */\n  headerText?: string;\n  /**\n   * Defines the mode of the component. Since the tree uses a `List` to display its structure, the tree modes are exactly the same as the list modes, and are all applicable.\n   *\n   * **Note:**\n   *\n   * *   `None`\n   * *   `SingleSelect`\n   * *   `SingleSelectBegin`\n   * *   `SingleSelectEnd`\n   * *   `MultiSelect`\n   * *   `Delete`\n   */\n  mode?: ListMode | keyof typeof ListMode;\n  /**\n   * Defines the text that is displayed when the component contains no items.\n   */\n  noDataText?: string;\n}\n\nexport interface TreeDomRef extends TreeAttributes, Ui5DomRef {\n  /**\n   * Perform Depth-First-Search walk on the tree and run a callback on each node\n   * @param {(treeNode: HTMLElement, level: number) => void} callback - function to execute on each node of the tree with 3 arguments: the node, the level and the index\n   */\n  walk: (callback: (treeNode: HTMLElement, level: number) => void) => void;\n}\n\nexport interface TreePropTypes extends TreeAttributes, CommonProps {\n  /**\n   * Defines the items of the component. Tree items may have other tree items as children.\n   *\n   * **Note:** Use `TreeItem` for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the component header.\n   *\n   * **Note:** When the `header` slot is set, the `headerText` property is ignored.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"header\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--docs).\n   */\n  header?: UI5WCSlotsNode | UI5WCSlotsNode[];\n  /**\n   * Fired when a tree item is activated.\n   */\n  onItemClick?: (event: Ui5CustomEvent<TreeDomRef, TreeItemClickEventDetail>) => void;\n  /**\n   * Fired when the Delete button of any tree item is pressed.\n   *\n   * **Note:** A Delete button is displayed on each item, when the component `mode` property is set to `Delete`.\n   */\n  onItemDelete?: (event: Ui5CustomEvent<TreeDomRef, TreeItemDeleteEventDetail>) => void;\n  /**\n   * Fired when the mouse cursor leaves the tree item borders.\n   */\n  onItemMouseout?: (event: Ui5CustomEvent<TreeDomRef, TreeItemMouseoutEventDetail>) => void;\n  /**\n   * Fired when the mouse cursor enters the tree item borders.\n   */\n  onItemMouseover?: (event: Ui5CustomEvent<TreeDomRef, TreeItemMouseoverEventDetail>) => void;\n  /**\n   * Fired when a tree item is expanded or collapsed. _Note:_ You can call `preventDefault()` on the event object to suppress the event, if needed. This may be handy for example if you want to dynamically load tree items upon the user expanding a node. Even if you prevented the event's default behavior, you can always manually call `toggle()` on a tree item.\n   */\n  onItemToggle?: (event: Ui5CustomEvent<TreeDomRef, TreeItemToggleEventDetail>) => void;\n  /**\n   * Fired when selection is changed by user interaction in `SingleSelect`, `SingleSelectBegin`, `SingleSelectEnd` and `MultiSelect` modes.\n   */\n  onSelectionChange?: (event: Ui5CustomEvent<TreeDomRef, TreeSelectionChangeEventDetail>) => void;\n}\n\n/**\n * The `Tree` component provides a tree structure for displaying data in a hierarchy.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Tree)\n */\nconst Tree = withWebComponent<TreePropTypes, TreeDomRef>(\n  'ui5-tree',\n  ['accessibleName', 'accessibleNameRef', 'footerText', 'headerText', 'mode', 'noDataText'],\n  [],\n  ['header'],\n  ['item-click', 'item-delete', 'item-mouseout', 'item-mouseover', 'item-toggle', 'selection-change'],\n  () => import('@ui5/webcomponents/dist/Tree.js')\n);\n\nTree.displayName = 'Tree';\n\nTree.defaultProps = {\n  mode: ListMode.None\n};\n\nexport { Tree };\n","'use client';\n\nimport '@ui5/webcomponents/dist/TreeItem.js';\nimport type { ReactNode } from 'react';\nimport { ValueState, ListItemType } from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\nimport type { UI5WCSlotsNode } from '../../types/index.js';\n\ninterface TreeItemAttributes {\n  /**\n   * Defines the `additionalText`, displayed in the end of the tree item.\n   */\n  additionalText?: string;\n  /**\n   * Defines the state of the `additionalText`.\n   * Available options are: `\"None\"` (by default), `\"Success\"`, `\"Warning\"`, `\"Information\"` and `\"Error\"`.\n   */\n  additionalTextState?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines the text of the tree item.\n   */\n  text?: string;\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines whether the tree list item will show a collapse or expand icon inside its toggle button.\n   */\n  expanded?: boolean;\n  /**\n   * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n   * _Note:_ This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to `true` for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n   */\n  hasChildren?: boolean;\n  /**\n   * If set, an icon will be displayed before the text of the tree list item.\n   */\n  icon?: string;\n  /**\n   * Defines whether the selection of a tree node is displayed as partially selected.\n   *\n   * **Note:** The indeterminate state can be set only programmatically and can’t be achieved by user interaction, meaning that the resulting visual state depends on the values of the `indeterminate` and `selected` properties:\n   *\n   * *   If a tree node has both `selected` and `indeterminate` set to `true`, it is displayed as partially selected.\n   * *   If a tree node has `selected` set to `true` and `indeterminate` set to `false`, it is displayed as selected.\n   * *   If a tree node has `selected` set to `false`, it is displayed as not selected regardless of the value of the `indeterminate` property.\n   *\n   *\n   * **Note:** This property takes effect only when the `Tree` is in `MultiSelect` mode.\n   */\n  indeterminate?: boolean;\n  /**\n   * The navigated state of the list item. If set to `true`, a navigation indicator is displayed at the end of the list item.\n   */\n  navigated?: boolean;\n  /**\n   * Defines the visual indication and behavior of the list items. Available options are `Active` (by default), `Inactive`, `Detail` and `Navigation`.\n   *\n   * **Note:** When set to `Active` or `Navigation`, the item will provide visual response upon press and hover, while with type `Inactive` and `Detail` - will not.\n   */\n  type?: ListItemType | keyof typeof ListItemType;\n  /**\n   * Defines the selected state of the `ListItem`.\n   */\n  selected?: boolean;\n}\n\nexport interface TreeItemDomRef extends TreeItemAttributes, Ui5DomRef {\n  /**\n   * An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields:\n   *\n   * *   `ariaSetsize`: Defines the number of items in the current set of listitems or treeitems when not all items in the set are present in the DOM. The value of each `aria-setsize` is an integer reflecting number of items in the complete set. **Note:** If the size of the entire set is unknown, set `aria-setsize=\"-1\"`.\n   * *   `ariaPosinset`: Defines an element's number or position in the current set of listitems or treeitems when not all items are present in the DOM. The value of each `aria-posinset` is an integer greater than or equal to 1, and less than or equal to the size of the set when that size is known.\n   */\n  accessibilityAttributes: Record<string, unknown>;\n  /**\n   * Call this method to manually switch the `expanded` state of a tree item.\n   */\n  toggle: () => void;\n}\n\nexport interface TreeItemPropTypes extends TreeItemAttributes, CommonProps {\n  /**\n   * Defines the items of the component.\n   *\n   * **Note:** Use `TreeItem` or `TreeItemCustom`\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the delete button, displayed in \"Delete\" mode. **Note:** While the slot allows custom buttons, to match design guidelines, please use the `Button` component. **Note:** When the slot is not present, a built-in delete button will be displayed.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"deleteButton\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--docs).\n   */\n  deleteButton?: UI5WCSlotsNode;\n  /**\n   * Fired when the user clicks on the detail button when type is `Detail`.\n   */\n  onDetailClick?: (event: Ui5CustomEvent<TreeItemDomRef>) => void;\n}\n\n/**\n * The `TreeItem` represents a node in a tree structure, shown as a `List`.\n * This is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Tree)\n */\nconst TreeItem = withWebComponent<TreeItemPropTypes, TreeItemDomRef>(\n  'ui5-tree-item',\n  ['additionalText', 'additionalTextState', 'text', 'accessibleName', 'icon', 'type'],\n  ['expanded', 'hasChildren', 'indeterminate', 'navigated', 'selected'],\n  ['deleteButton'],\n  ['detail-click'],\n  () => import('@ui5/webcomponents/dist/TreeItem.js')\n);\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.defaultProps = {\n  additionalTextState: ValueState.None,\n  type: ListItemType.Active\n};\n\nexport { TreeItem };\n","'use client';\n\nimport '@ui5/webcomponents/dist/TreeItemCustom.js';\nimport type { ReactNode } from 'react';\nimport { ValueState, ListItemType } from '../../enums/index.js';\nimport type { Ui5CustomEvent, CommonProps, Ui5DomRef } from '../../interfaces/index.js';\nimport { withWebComponent } from '../../internal/withWebComponent.js';\nimport type { UI5WCSlotsNode } from '../../types/index.js';\n\ninterface TreeItemCustomAttributes {\n  /**\n   * Defines whether the tree list item should display the selection element.\n   */\n  hideSelectionElement?: boolean;\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the state of the `additionalText`.\n   * Available options are: `\"None\"` (by default), `\"Success\"`, `\"Warning\"`, `\"Information\"` and `\"Error\"`.\n   */\n  additionalTextState?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines whether the tree list item will show a collapse or expand icon inside its toggle button.\n   */\n  expanded?: boolean;\n  /**\n   * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n   * _Note:_ This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to `true` for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n   */\n  hasChildren?: boolean;\n  /**\n   * If set, an icon will be displayed before the text of the tree list item.\n   */\n  icon?: string;\n  /**\n   * Defines whether the selection of a tree node is displayed as partially selected.\n   *\n   * **Note:** The indeterminate state can be set only programmatically and can’t be achieved by user interaction, meaning that the resulting visual state depends on the values of the `indeterminate` and `selected` properties:\n   *\n   * *   If a tree node has both `selected` and `indeterminate` set to `true`, it is displayed as partially selected.\n   * *   If a tree node has `selected` set to `true` and `indeterminate` set to `false`, it is displayed as selected.\n   * *   If a tree node has `selected` set to `false`, it is displayed as not selected regardless of the value of the `indeterminate` property.\n   *\n   *\n   * **Note:** This property takes effect only when the `Tree` is in `MultiSelect` mode.\n   */\n  indeterminate?: boolean;\n  /**\n   * The navigated state of the list item. If set to `true`, a navigation indicator is displayed at the end of the list item.\n   */\n  navigated?: boolean;\n  /**\n   * Defines the visual indication and behavior of the list items. Available options are `Active` (by default), `Inactive`, `Detail` and `Navigation`.\n   *\n   * **Note:** When set to `Active` or `Navigation`, the item will provide visual response upon press and hover, while with type `Inactive` and `Detail` - will not.\n   */\n  type?: ListItemType | keyof typeof ListItemType;\n  /**\n   * Defines the selected state of the `ListItem`.\n   */\n  selected?: boolean;\n}\n\nexport interface TreeItemCustomDomRef extends TreeItemCustomAttributes, Ui5DomRef {\n  /**\n   * An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields:\n   *\n   * *   `ariaSetsize`: Defines the number of items in the current set of listitems or treeitems when not all items in the set are present in the DOM. The value of each `aria-setsize` is an integer reflecting number of items in the complete set. **Note:** If the size of the entire set is unknown, set `aria-setsize=\"-1\"`.\n   * *   `ariaPosinset`: Defines an element's number or position in the current set of listitems or treeitems when not all items are present in the DOM. The value of each `aria-posinset` is an integer greater than or equal to 1, and less than or equal to the size of the set when that size is known.\n   */\n  accessibilityAttributes: Record<string, unknown>;\n  /**\n   * Call this method to manually switch the `expanded` state of a tree item.\n   */\n  toggle: () => void;\n}\n\nexport interface TreeItemCustomPropTypes extends TreeItemCustomAttributes, Omit<CommonProps, 'content'> {\n  /**\n   * Defines the content of the `TreeItem`.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"content\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--docs).\n   */\n  content?: UI5WCSlotsNode | UI5WCSlotsNode[];\n  /**\n   * Defines the items of the component.\n   *\n   * **Note:** Use `TreeItem` or `TreeItemCustom`\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the delete button, displayed in \"Delete\" mode. **Note:** While the slot allows custom buttons, to match design guidelines, please use the `Button` component. **Note:** When the slot is not present, a built-in delete button will be displayed.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"deleteButton\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--docs).\n   */\n  deleteButton?: UI5WCSlotsNode;\n  /**\n   * Fired when the user clicks on the detail button when type is `Detail`.\n   */\n  onDetailClick?: (event: Ui5CustomEvent<TreeItemCustomDomRef>) => void;\n}\n\n/**\n * The `TreeItemCustom` represents a node in a tree structure, shown as a `List`.\n * This is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items. You can use this item to put any custom content inside the tree item.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Tree)\n */\nconst TreeItemCustom = withWebComponent<TreeItemCustomPropTypes, TreeItemCustomDomRef>(\n  'ui5-tree-item-custom',\n  ['accessibleName', 'additionalTextState', 'icon', 'type'],\n  ['hideSelectionElement', 'expanded', 'hasChildren', 'indeterminate', 'navigated', 'selected'],\n  ['content', 'deleteButton'],\n  ['detail-click'],\n  () => import('@ui5/webcomponents/dist/TreeItemCustom.js')\n);\n\nTreeItemCustom.displayName = 'TreeItemCustom';\n\nTreeItemCustom.defaultProps = {\n  additionalTextState: ValueState.None,\n  type: ListItemType.Active\n};\n\nexport { TreeItemCustom };\n","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"copy\";\nconst pathData = \"M32 192l96-96h224q13 0 22.5 9t9.5 23v352q0 14-9 23t-23 9H65q-14 0-23.5-9T32 480V192zm320 288V128H160v64q0 14-9.5 23t-23.5 9H65v256h287zM159 64l65-64h224q12 0 22 9t10 23v352q0 14-9 23t-23 9h-32v-32h32V32H256v32h-97zm-15 256h128q16 0 16 16 0 6-4.5 11t-11.5 5H144q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5zm-16 80q0-7 5-11.5t11-4.5h128q16 0 16 16 0 6-4.5 11t-11.5 5H144q-6 0-11-5t-5-11z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/copy\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"copy\";\nconst pathData = \"M384 26q0 11-7.5 18T358 51H122q-17 0-28 11T83 90v268q0 11-7 18.5T58 384t-18.5-7.5T32 358V90q0-38 26-64t64-26h236q11 0 18.5 7.5T384 26zm6 70q38 0 64 26t26 64v236q0 38-26 64t-64 26H218q-38 0-64-26t-26-64V186q0-38 26-64t64-26h172zm39 90q0-17-11-28t-28-11H218q-17 0-28 11t-11 28v236q0 17 11 28t28 11h172q17 0 28-11t11-28V186zm-71 83q11 0 18.5 7.5T384 295t-7.5 18-18.5 7H250q-11 0-18.5-7t-7.5-18 7.5-18.5T250 269h108zm0 96q11 0 18.5 7t7.5 18-7.5 18.5T358 416H250q-11 0-18.5-7.5T224 390t7.5-18 18.5-7h108z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/copy\";\nexport { pathData, ltr, accData };","import { isLegacyThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/copy.js\";\nimport { pathData as pathDatav5 } from \"./v5/copy.js\";\n\nconst pathData = isLegacyThemeFamily() ? pathDatav4 : pathDatav5;\n\nexport default \"copy\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"download-from-cloud\";\nconst pathData = \"M493.037 211.587q17.965 22.955 17.965 55.89 0 17.965-6.986 30.94-2.995 7.985-7.985 14.97l-9.98 13.974q-5.989 6.986-10.48 9.98t-12.475 5.988q-18.963 7.985-33.934 7.985h-13.973v-31.938h13.973q6.986 0 21.957-4.99 4.99-1.996 6.487-2.994t4.491-3.992q3.993-4.99 6.987-9.98t4.99-9.981l1.996-3.993q2.994-5.988 2.994-15.968 0-23.954-10.978-35.93-8.983-11.977-29.942-17.965l-40.92-10.979 21.957-35.93q3.992-6.986 3.992-17.964 0-24.952-16.966-40.92-15.97-15.97-41.919-15.97-20.959 0-35.93 11.977l-32.935 28.944-16.967-39.922q-12.975-27.946-36.928-43.915-22.955-16.966-57.887-16.966-12.974 0-31.937 7.984-16.967 7.984-33.934 22.955-10.979 9.98-20.96 30.94-6.985 13.972-6.985 34.932 0 18.963 8.982 33.933l21.957 36.928-41.918 9.98q-21.957 5.989-32.936 19.962l-.998.998v.998q-12.974 14.97-12.974 35.93 0 8.982 4.99 18.963.998 1.996 4.99 7.984t16.967 16.967q1.996 1.996 12.975 4.99t39.922 2.994v31.938q-22.955 0-42.917-2.994t-30.94-12.975q-23.952-20.959-30.939-35.93T0 267.478q0-34.932 20.96-57.887 18.962-22.956 49.902-30.94-12.975-21.957-12.975-49.902 0-28.944 9.98-48.905 10.979-23.953 27.946-40.92 17.965-16.967 41.918-27.945T183.641 0q44.913 0 75.852 21.957 31.938 21.957 47.907 57.887 22.955-19.961 56.888-19.961 38.924 0 63.876 24.951 26.947 25.95 26.947 63.876 0 18.963-8.982 33.933 27.945 6.987 46.908 28.944zM279.454 502.019Q269.474 512 256.5 512t-21.957-9.98L132.74 401.215q-11.977-11.976 0-22.955 4.99-4.99 10.978-4.99t10.979 4.99l84.834 84.835V192.624q0-15.969 15.969-15.969t15.969 15.969v272.468l86.83-86.83q10.979-10.98 22.955 0 10.979 10.978 0 22.954z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/download-from-cloud\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"download-from-cloud\";\nconst pathData = \"M264 236q-8-8-8-18 0-11 7.5-18.5T282 192t18 7l33 34V90q0-11 7-18.5t18-7.5 18.5 7.5T384 90v143l33-34q7-7 18-7t18.5 7.5T461 218q0 10-8 18l-76 76q-8 8-19 8-10 0-18-8zm222 52q11 0 18.5 7.5T512 314q0 27-10 51.5t-27 43-41 29-52 10.5H109q-22 0-42-9t-35-24-23.5-35.5T0 336t8.5-43 23-35 34-24 41.5-9q4-25 16-47.5t29-40 39.5-28.5T239 96h4q10-1 17.5 6t8.5 17v2q1 10-7 17.5t-25 9.5q-16 1-30.5 10t-26 22-18 29-6.5 32q0 18-7.5 26.5T130 276h-21q-24 0-41 17.5T51 336q0 26 17 43.5t41 17.5h273q33 0 56-24.5t23-58.5q0-11 7-18.5t18-7.5z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/download-from-cloud\";\nexport { pathData, ltr, accData };","import { isLegacyThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/download-from-cloud.js\";\nimport { pathData as pathDatav5 } from \"./v5/download-from-cloud.js\";\n\nconst pathData = isLegacyThemeFamily() ? pathDatav4 : pathDatav5;\n\nexport default \"download-from-cloud\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"paste\";\nconst pathData = \"M192 224q0-14 9-23t23-9h224q13 0 22.5 9t9.5 23v256q0 13-9.5 22.5T448 512H224q-14 0-23-9.5t-9-22.5V224zm32 256h224V224H224v256zM32 96q0-14 9.5-23T65 64h65q11-28 38-32 8-14 23-23t33-9q17 0 32 9t23 23q27 4 38 32h67q13 0 22 9t9 23v64h-31V96h-68q-5 12-12.5 22T281 128H166q-15 0-22.5-10T131 96H65v384h95v32H65q-14 0-23.5-9.5T32 480V96zm143 0h96q7 0 11.5-5t4.5-11q0-16-16-16h-15q0-14-9.5-23T224 32q-14 0-23 9t-9 23h-17q-6 0-11 4.5T159 80q0 6 5 11t11 5zm97 224h128q16 0 16 16 0 6-4.5 11t-11.5 5H272q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5zm0 63h128q16 0 16 16 0 6-4.5 11t-11.5 5H272q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/paste\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"paste\";\nconst pathData = \"M319 115q-5 20-20.5 32.5T262 160h-76q-21 0-36.5-12.5T130 115H90q-7 0-7 7v332q0 7 7 7h12q11 0 18.5 7t7.5 18-7.5 18.5T102 512H90q-24 0-41-17t-17-41V122q0-24 17-41t41-17h38v-6q0-24 17-41t41-17h76q24 0 41 17t17 41v6h38q24 0 41 17t17 41v12q0 11-7.5 18.5T390 160t-18-7.5-7-18.5v-12q0-7-7-7h-39zm-140-13q0 7 7 7h76q7 0 7-7V58q0-7-7-7h-76q-7 0-7 7v44zm275 122q11 0 18.5 7.5T480 250v236q0 11-7.5 18.5T454 512H218q-11 0-18.5-7.5T192 486V250q0-11 7.5-18.5T218 224h236zm-25 51H243v186h186V275zm-115 81q-11 0-18.5-7.5T288 330t7.5-18 18.5-7h44q11 0 18.5 7t7.5 18-7.5 18.5T358 356h-44zm0 75q-11 0-18.5-7t-7.5-18 7.5-18.5T314 380h44q11 0 18.5 7.5T384 406t-7.5 18-18.5 7h-44z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/paste\";\nexport { pathData, ltr, accData };","import { isLegacyThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/paste.js\";\nimport { pathData as pathDatav5 } from \"./v5/paste.js\";\n\nconst pathData = isLegacyThemeFamily() ? pathDatav4 : pathDatav5;\n\nexport default \"paste\";\nexport { pathData, ltr, accData };"],"file":"assets/Tree.stories-d16ef8cb.js"}