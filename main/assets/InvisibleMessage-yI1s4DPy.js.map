{"version":3,"file":"InvisibleMessage-yI1s4DPy.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/types/InvisibleMessageMode.js","../../node_modules/@ui5/webcomponents-base/dist/util/InvisibleMessage.js"],"sourcesContent":["/**\n * Enumeration for different mode behaviors of the InvisibleMessage.\n *\n * @readonly\n * @enum {string}\n * @public\n * @author SAP SE\n * @alias sap.ui.webc.base.types.InvisibleMessageMode\n */\nvar InvisibleMessageMode;\n(function (InvisibleMessageMode) {\n    /**\n     * Indicates that updates to the region should be presented at the next graceful opportunity,\n     * such as at the end of reading the current sentence, or when the user pauses typing.\n     * @public\n     * @type {Polite}\n     */\n    InvisibleMessageMode[\"Polite\"] = \"Polite\";\n    /**\n     * Indicates that updates to the region have the highest priority and should be presented to the user immediately.\n     * @public\n     * @type {Assertive}\n     */\n    InvisibleMessageMode[\"Assertive\"] = \"Assertive\";\n})(InvisibleMessageMode || (InvisibleMessageMode = {}));\nexport default InvisibleMessageMode;\n//# sourceMappingURL=InvisibleMessageMode.js.map","import InvisibleMessageMode from \"../types/InvisibleMessageMode.js\";\nimport getSingletonElementInstance from \"./getSingletonElementInstance.js\";\nimport { attachBoot } from \"../Boot.js\";\nlet politeSpan;\nlet assertiveSpan;\nconst setOutOfViewportStyles = (el) => {\n    el.style.position = \"absolute\";\n    el.style.clip = \"rect(1px,1px,1px,1px)\";\n    el.style.userSelect = \"none\";\n    el.style.left = \"-1000px\";\n    el.style.top = \"-1000px\";\n    el.style.pointerEvents = \"none\";\n};\nattachBoot(() => {\n    if (politeSpan && assertiveSpan) {\n        return;\n    }\n    politeSpan = document.createElement(\"span\");\n    assertiveSpan = document.createElement(\"span\");\n    politeSpan.classList.add(\"ui5-invisiblemessage-polite\");\n    assertiveSpan.classList.add(\"ui5-invisiblemessage-assertive\");\n    politeSpan.setAttribute(\"aria-live\", \"polite\");\n    assertiveSpan.setAttribute(\"aria-live\", \"assertive\");\n    politeSpan.setAttribute(\"role\", \"alert\");\n    assertiveSpan.setAttribute(\"role\", \"alert\");\n    setOutOfViewportStyles(politeSpan);\n    setOutOfViewportStyles(assertiveSpan);\n    getSingletonElementInstance(\"ui5-static-area\").appendChild(politeSpan);\n    getSingletonElementInstance(\"ui5-static-area\").appendChild(assertiveSpan);\n});\n/**\n * Inserts the string into the respective span, depending on the mode provided.\n *\n * @param { string } message String to be announced by the screen reader.\n * @param { InvisibleMessageMode } mode The mode to be inserted in the aria-live attribute.\n * @public\n */\nconst announce = (message, mode) => {\n    // If no type is presented, fallback to polite announcement.\n    const span = mode === InvisibleMessageMode.Assertive ? assertiveSpan : politeSpan;\n    // Set textContent to empty string in order to trigger screen reader's announcement.\n    span.textContent = \"\";\n    span.textContent = message;\n    if (mode !== InvisibleMessageMode.Assertive && mode !== InvisibleMessageMode.Polite) {\n        console.warn(`You have entered an invalid mode. Valid values are: \"Polite\" and \"Assertive\". The framework will automatically set the mode to \"Polite\".`); // eslint-disable-line\n    }\n    // clear the span in order to avoid reading it out while in JAWS reading node\n    setTimeout(() => {\n        // ensure that we clear the text node only if no announce is made in the meantime\n        if (span.textContent === message) {\n            span.textContent = \"\";\n        }\n    }, 3000);\n};\nexport default announce;\n//# sourceMappingURL=InvisibleMessage.js.map"],"names":["InvisibleMessageMode","InvisibleMessageMode$1","politeSpan","assertiveSpan","setOutOfViewportStyles","el","attachBoot","getSingletonElementInstance","announce","message","mode","span"],"mappings":"0FASA,IAAIA,GACH,SAAUA,EAAsB,CAO7BA,EAAqB,OAAY,SAMjCA,EAAqB,UAAe,WACxC,GAAGA,IAAyBA,EAAuB,CAAE,EAAC,EACtD,MAAAC,EAAeD,ECtBf,IAAIE,EACAC,EACJ,MAAMC,EAA0BC,GAAO,CACnCA,EAAG,MAAM,SAAW,WACpBA,EAAG,MAAM,KAAO,wBAChBA,EAAG,MAAM,WAAa,OACtBA,EAAG,MAAM,KAAO,UAChBA,EAAG,MAAM,IAAM,UACfA,EAAG,MAAM,cAAgB,MAC7B,EACAC,EAAW,IAAM,CACTJ,GAAcC,IAGlBD,EAAa,SAAS,cAAc,MAAM,EAC1CC,EAAgB,SAAS,cAAc,MAAM,EAC7CD,EAAW,UAAU,IAAI,6BAA6B,EACtDC,EAAc,UAAU,IAAI,gCAAgC,EAC5DD,EAAW,aAAa,YAAa,QAAQ,EAC7CC,EAAc,aAAa,YAAa,WAAW,EACnDD,EAAW,aAAa,OAAQ,OAAO,EACvCC,EAAc,aAAa,OAAQ,OAAO,EAC1CC,EAAuBF,CAAU,EACjCE,EAAuBD,CAAa,EACpCI,EAA4B,iBAAiB,EAAE,YAAYL,CAAU,EACrEK,EAA4B,iBAAiB,EAAE,YAAYJ,CAAa,EAC5E,CAAC,EAQI,MAACK,EAAW,CAACC,EAASC,IAAS,CAEhC,MAAMC,EAAOD,IAASV,EAAqB,UAAYG,EAAgBD,EAEvES,EAAK,YAAc,GACnBA,EAAK,YAAcF,EACfC,IAASV,EAAqB,WAAaU,IAASV,EAAqB,QACzE,QAAQ,KAAK,0IAA0I,EAG3J,WAAW,IAAM,CAETW,EAAK,cAAgBF,IACrBE,EAAK,YAAc,GAE1B,EAAE,GAAI,CACX","x_google_ignoreList":[0,1]}