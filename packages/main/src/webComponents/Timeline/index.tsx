'use client';

import '@ui5/webcomponents-fiori/dist/Timeline.js';
import type TimelineGrowingMode from '@ui5/webcomponents-fiori/dist/types/TimelineGrowingMode.js';
import type TimelineLayout from '@ui5/webcomponents-fiori/dist/types/TimelineLayout.js';
import type { ReactNode } from 'react';
import { withWebComponent } from '../../internal/withWebComponent.js';
import type { CommonProps, Ui5CustomEvent, Ui5DomRef } from '../../types/index.js';

interface TimelineAttributes {
  /**
   * Defines the accessible ARIA name of the component.
   *
   * **Note:** Available since [v1.2.0](https://github.com/SAP/ui5-webcomponents/releases/tag/v1.2.0) of **@ui5/webcomponents-fiori**.
   * @default undefined
   */
  accessibleName?: string | undefined;

  /**
   * Defines whether the Timeline will have growing capability either by pressing a "More" button,
   * or via user scroll. In both cases a `load-more` event is fired.
   *
   * Available options:
   *
   * `Button` - Displays a button at the end of the Timeline, which when pressed triggers the `load-more` event.
   *
   * `Scroll` -Triggers the `load-more` event when the user scrolls to the end of the Timeline.
   *
   * `None` (default) - The growing functionality is off.
   *
   * **Note:** Available since [v2.7.0](https://github.com/SAP/ui5-webcomponents/releases/tag/v2.7.0) of **@ui5/webcomponents-fiori**.
   * @default "None"
   */
  growing?: TimelineGrowingMode | keyof typeof TimelineGrowingMode;

  /**
   * Defines the items orientation.
   * @default "Vertical"
   */
  layout?: TimelineLayout | keyof typeof TimelineLayout;

  /**
   * Defines if the component should display a loading indicator over the Timeline.
   *
   * **Note:** Available since [v2.7.0](https://github.com/SAP/ui5-webcomponents/releases/tag/v2.7.0) of **@ui5/webcomponents-fiori**.
   * @default false
   */
  loading?: boolean;

  /**
   * Defines the delay in milliseconds, after which the loading indicator will show up for this component.
   * @default 1000
   */
  loadingDelay?: number;
}

interface TimelineDomRef extends Required<TimelineAttributes>, Ui5DomRef {}

interface TimelinePropTypes
  extends TimelineAttributes,
    Omit<CommonProps, keyof TimelineAttributes | 'children' | 'onLoadMore'> {
  /**
   * Determines the content of the `Timeline`.
   */
  children?: ReactNode | ReactNode[];
  /**
   * Fired when the user presses the `More` button or scrolls to the Timeline's end.
   *
   * **Note:** The event will be fired if `growing` is set to `Button` or `Scroll`.
   *
   * **Note:** Available since [v2.7.0](https://github.com/SAP/ui5-webcomponents/releases/tag/v2.7.0) of **@ui5/webcomponents-fiori**.
   *
   * | cancelable | bubbles |
   * | :--------: | :-----: |
   * | ❌|✅|
   */
  onLoadMore?: (event: Ui5CustomEvent<TimelineDomRef>) => void;
}

/**
 * The `Timeline` component shows entries (such as objects, events, or posts) in chronological order.
 * A common use case is to provide information about changes to an object, or events related to an object.
 * These entries can be generated by the system (for example, value XY changed from A to B), or added manually.
 * There are two distinct variants of the timeline: basic and social. The basic timeline is read-only,
 * while the social timeline offers a high level of interaction and collaboration, and is integrated within SAP Jam.
 *
 * __Note__: This is a UI5 Web Component! [Repository](https://github.com/SAP/ui5-webcomponents) | [Documentation](https://sap.github.io/ui5-webcomponents/)
 */
const Timeline = withWebComponent<TimelinePropTypes, TimelineDomRef>(
  'ui5-timeline',
  ['accessibleName', 'growing', 'layout', 'loadingDelay'],
  ['loading'],
  [],
  ['load-more']
);

Timeline.displayName = 'Timeline';

export { Timeline };
export type { TimelineDomRef, TimelinePropTypes };
