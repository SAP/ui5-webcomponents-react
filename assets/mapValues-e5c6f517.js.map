{"version":3,"file":"mapValues-e5c6f517.js","sources":["../../node_modules/lodash/_baseAssignValue.js","../../node_modules/lodash/mapValues.js"],"sourcesContent":["var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"],"names":["defineProperty","require$$0","baseAssignValue","object","key","value","_baseAssignValue","baseForOwn","require$$1","baseIteratee","require$$2","mapValues","iteratee","result","mapValues_1"],"mappings":"oGAAA,IAAIA,EAAiBC,EAWrB,SAASC,EAAgBC,EAAQC,EAAKC,EAAO,CACvCD,GAAO,aAAeJ,EACxBA,EAAeG,EAAQC,EAAK,CAC1B,aAAgB,GAChB,WAAc,GACd,MAASC,EACT,SAAY,EAClB,CAAK,EAEDF,EAAOC,CAAG,EAAIC,CAElB,CAEA,IAAAC,EAAiBJ,ECxBbA,EAAkBD,EAClBM,EAAaC,EACbC,EAAeC,EA8BnB,SAASC,EAAUR,EAAQS,EAAU,CACnC,IAAIC,EAAS,CAAA,EACb,OAAAD,EAAWH,EAAaG,CAAW,EAEnCL,EAAWJ,EAAQ,SAASE,EAAOD,EAAKD,EAAQ,CAC9CD,EAAgBW,EAAQT,EAAKQ,EAASP,EAAOD,EAAKD,CAAM,CAAC,CAC7D,CAAG,EACMU,CACT,CAEA,IAAAC,EAAiBH","x_google_ignoreList":[0,1]}