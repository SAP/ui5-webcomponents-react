import{M as c,C as d,e as u}from"./chunk-HLWAVYOI-a4b955a7.js";import{T as o}from"./index-4081f399.js";import{B as m}from"./Button-f20bbbdf.js";import"./employee-0930782f.js";import{A as g}from"./DomRefTable.module-bc7b4857.js";import{D as f}from"./DocsHeader-4c6bcf20.js";import{F as h}from"./Footer-fe53c2f4.js";import{j as t}from"./jsx-runtime-d079401a.js";import"./index-f1f2c4b1.js";import{D as x}from"./DomRefTable-6ca25799.js";import{u as p}from"./index-59d6410c.js";import"./iframe-b036ff2f.js";import"../sb-preview/runtime.js";import"./index-f82c8853.js";import"./index-c74c9f7f.js";import"./mapValues-6da481dc.js";import"./_baseForOwn-62af832b.js";import"./_baseUniq-27dbdc21.js";import"./index-356e4a49.js";import"./ToggleButton-999ad82c.js";import"./withWebComponent-f146e44d.js";import"./utils-85c0effb.js";import"./CustomElementsScopeUtils-90546106.js";import"./useIsomorphicLayoutEffect-c49de97d.js";import"./Icons-d115de21.js";import"./UI5Element-d089e658.js";import"./Icon-dc979b51.js";import"./slot-76e48863.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-a1ecaff4.js";import"./react-jss.esm-2e5f50f2.js";import"./index-154118cf.js";import"./decline-a017ea5c.js";import"./i18n-defaults-bdef1cce.js";import"./information-ff75d6c3.js";import"./alert-fa33aca2.js";import"./class-map-5b190712.js";import"./index-743fc8f1.js";import"./clsx-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-b7e0672b.js";import"./index-e91cc8b7.js";import"./Integer-f7f172c9.js";import"./index-b5255d7c.js";import"./Avatar-d6a8bd34.js";import"./ResizeHandler-36d5a74c.js";import"./index-c14b7931.js";import"./index-c5d911cc.js";import"./Link-0dce4afc.js";import"./WrappingType-b81e595a.js";import"./index-12e0da73.js";import"./TableOfContent-2326fc93.js";import"./index-46470d3f.js";import"./Label-025b0296.js";import"./index-ca949d93.js";import"./index-31293b2a.js";import"./Popover-84fe14ea.js";import"./PopupUtils-caf3caee.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-070f9d59.js";import"./FocusableElements-320054f2.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-2f7624b7.js";import"./BrowserScrollbar.css-e63eefff.js";const b=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function j(e={}){const{wrapper:i}=Object.assign({},p(),e.components);return i?t.jsx(i,{...e,children:t.jsx(n,{})}):n();function n(){const s=Object.assign({h2:"h2"},p(),e.components);return t.jsxs(t.Fragment,{children:[t.jsx(c,{title:"Inputs / ToggleButton",component:o,argTypes:{children:{control:"text"}},args:{design:m.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t.jsx(f,{}),`
`,t.jsx("br",{}),`
`,t.jsx(s.h2,{id:"example",children:"Example"}),`
`,t.jsx(d,{children:t.jsx(u,{name:"Default",children:a=>t.jsx(o,{...a})})}),`
`,t.jsx(s.h2,{id:"properties",children:"Properties"}),`
`,t.jsx(g,{story:"Default"}),`
`,t.jsx(x,{rows:b}),`
`,t.jsx(h,{})]})}}const l=e=>t.jsx(o,{...e});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:o,args:{design:m.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:j};const Et=["defaultStory"];export{Et as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-122a09b9.js.map
