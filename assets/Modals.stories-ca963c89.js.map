{"version":3,"file":"Modals.stories-ca963c89.js","sources":["../../packages/main/src/internal/getRandomId.ts","../../packages/main/src/components/Modals/index.tsx"],"sourcesContent":["export const getRandomId = () => {\n  if ('randomUUID' in crypto) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return crypto.randomUUID();\n  }\n  const uint32 = window.crypto.getRandomValues(new Uint32Array(1))[0];\n  return uint32.toString(16);\n};\n","'use client';\n\nimport type { Dispatch, MutableRefObject, RefObject } from 'react';\nimport { createRef, useCallback } from 'react';\nimport { getRandomId } from '../../internal/getRandomId.js';\nimport type { UpdateModalStateAction } from '../../internal/ModalsContext.js';\nimport { useModalsContext } from '../../internal/ModalsContext.js';\nimport type {\n  DialogDomRef,\n  DialogPropTypes,\n  MenuDomRef,\n  MenuPropTypes,\n  PopoverDomRef,\n  PopoverPropTypes,\n  ResponsivePopoverDomRef,\n  ResponsivePopoverPropTypes,\n  ToastDomRef,\n  ToastPropTypes\n} from '../../webComponents/index.js';\nimport { Dialog, Menu, Popover, ResponsivePopover, Toast } from '../../webComponents/index.js';\nimport type { MessageBoxPropTypes } from '../MessageBox/index.js';\nimport { MessageBox } from '../MessageBox/index.js';\n\ntype ModalReturnType<DomRef> = {\n  ref: RefObject<DomRef>;\n};\n\ntype ClosableModalReturnType<DomRef> = ModalReturnType<DomRef> & {\n  close: () => void;\n};\n\ntype ModalHookReturnType<Props, DomRef, ContainerElement = HTMLElement> = (\n  props: Props,\n  container?: ContainerElement\n) => ModalReturnType<DomRef>;\ntype CloseableModalHookReturnType<Props, DomRef, ContainerElement = HTMLElement> = (\n  props: Props,\n  container?: ContainerElement\n) => ClosableModalReturnType<DomRef>;\n\nconst checkContext = (context: any): void => {\n  if (!context) {\n    // eslint-disable-next-line no-console\n    console.error(`Please make sure that your application is wrapped in the '<ThemeProvider />' component.`);\n  }\n};\n\nfunction showDialog<ContainerElement>(\n  props: DialogPropTypes,\n  setModal: Dispatch<UpdateModalStateAction<DialogPropTypes, DialogDomRef, ContainerElement>>,\n  container?: ContainerElement\n) {\n  checkContext(setModal);\n  const id = getRandomId();\n  const ref = createRef<DialogDomRef>();\n  setModal?.({\n    type: 'set',\n    payload: {\n      Component: Dialog,\n      props: {\n        ...props,\n        open: true,\n        onAfterClose: (event) => {\n          if (typeof props.onAfterClose === 'function') {\n            props.onAfterClose(event);\n          }\n          setModal({\n            type: 'reset',\n            payload: { id }\n          });\n        }\n      },\n      ref,\n      container,\n      id\n    }\n  });\n\n  return { ref };\n}\n\nfunction showPopover<ContainerElement>(\n  props: PopoverPropTypes,\n  setModal: Dispatch<UpdateModalStateAction<PopoverPropTypes, PopoverDomRef, ContainerElement>>,\n  container?: ContainerElement\n) {\n  checkContext(setModal);\n  const id = getRandomId();\n  const ref = createRef<PopoverDomRef>();\n  setModal?.({\n    type: 'set',\n    payload: {\n      Component: Popover,\n      props: {\n        ...props,\n\n        open: true,\n        onAfterClose: (event) => {\n          if (typeof props.onAfterClose === 'function') {\n            props.onAfterClose(event);\n          }\n          setModal({\n            type: 'reset',\n            payload: { id }\n          });\n        }\n      },\n      ref,\n      container,\n      id\n    }\n  });\n  return { ref };\n}\n\nfunction showResponsivePopover<ContainerElement>(\n  props: ResponsivePopoverPropTypes,\n  setModal: Dispatch<UpdateModalStateAction<ResponsivePopoverPropTypes, ResponsivePopoverDomRef, ContainerElement>>,\n  container?: ContainerElement\n) {\n  checkContext(setModal);\n  const id = getRandomId();\n  const ref = createRef<ResponsivePopoverDomRef>();\n  setModal?.({\n    type: 'set',\n    payload: {\n      Component: ResponsivePopover,\n      props: {\n        ...props,\n        open: true,\n        onAfterClose: (event) => {\n          if (typeof props.onAfterClose === 'function') {\n            props.onAfterClose(event);\n          }\n          setModal({\n            type: 'reset',\n            payload: { id }\n          });\n        }\n      },\n      ref,\n      container,\n      id\n    }\n  });\n  return { ref };\n}\n\nfunction showMenu<ContainerElement>(\n  props: MenuPropTypes,\n  setModal: Dispatch<UpdateModalStateAction<MenuPropTypes, MenuDomRef, ContainerElement>>,\n  container?: ContainerElement\n) {\n  checkContext(setModal);\n  const id = getRandomId();\n  const ref = createRef<MenuDomRef>();\n  setModal?.({\n    type: 'set',\n    payload: {\n      Component: Menu,\n      props: {\n        ...props,\n        open: true,\n        onAfterClose: (event) => {\n          if (typeof props.onAfterClose === 'function') {\n            props.onAfterClose(event);\n          }\n          setModal({\n            type: 'reset',\n            payload: { id }\n          });\n        }\n      },\n      ref,\n      container,\n      id\n    }\n  });\n  return { ref };\n}\n\nfunction showMessageBox<ContainerElement>(\n  props: MessageBoxPropTypes,\n  setModal: Dispatch<UpdateModalStateAction<MessageBoxPropTypes, DialogDomRef, ContainerElement>>,\n  container?: ContainerElement\n) {\n  checkContext(setModal);\n  const id = getRandomId();\n  const ref = createRef<DialogDomRef>();\n  setModal?.({\n    type: 'set',\n    payload: {\n      // @ts-expect-error: props type safety is covered by the `props` property\n      Component: MessageBox,\n      props: {\n        ...props,\n        open: true,\n        onClose: (event) => {\n          if (typeof props.onClose === 'function') {\n            props.onClose(event);\n          }\n          setModal({\n            type: 'reset',\n            payload: { id }\n          });\n        }\n      },\n      ref,\n      container,\n      id\n    }\n  });\n  return { ref };\n}\n\nfunction showToast<ContainerElement>(\n  props: ToastPropTypes,\n  setModal: Dispatch<UpdateModalStateAction<ToastPropTypes, ToastDomRef, ContainerElement>>,\n  container?: ContainerElement\n) {\n  const ref = createRef<ToastDomRef>() as MutableRefObject<ToastDomRef>;\n  checkContext(setModal);\n  const id = getRandomId();\n  setModal?.({\n    type: 'set',\n    payload: {\n      Component: Toast,\n      props: {\n        ...props\n      },\n      ref: (el: ToastDomRef & { open: boolean }) => {\n        ref.current = el;\n        if (el && !el.open) {\n          el.show();\n          setTimeout(() => {\n            setModal({\n              type: 'reset',\n              payload: { id }\n            });\n          }, props.duration ?? Toast.defaultProps.duration);\n        }\n      },\n      container,\n      id\n    }\n  });\n  return { ref };\n}\n\nfunction showDialogFn<ContainerElement = HTMLElement>(\n  props: DialogPropTypes,\n  container?: ContainerElement\n): ClosableModalReturnType<DialogDomRef> {\n  const setModal = window['@ui5/webcomponents-react']?.setModal;\n\n  const { ref } = showDialog<ContainerElement>(props, setModal, container);\n\n  return {\n    ref,\n    close: () => {\n      ref.current?.close();\n    }\n  };\n}\n\nfunction useShowDialogHook<ContainerElement>(): CloseableModalHookReturnType<\n  DialogPropTypes,\n  DialogDomRef,\n  ContainerElement\n> {\n  const { setModal } = useModalsContext();\n\n  return useCallback(\n    (props, container) => {\n      const { ref } = showDialog<ContainerElement>(props, setModal, container);\n\n      return {\n        ref,\n        close: () => {\n          ref.current?.close();\n        }\n      };\n    },\n    [setModal]\n  );\n}\n\nfunction showPopoverFn<ContainerElement>(\n  props: PopoverPropTypes,\n  container?: ContainerElement\n): ClosableModalReturnType<PopoverDomRef> {\n  const setModal = window['@ui5/webcomponents-react']?.setModal;\n  const { ref } = showPopover(props, setModal, container);\n\n  return {\n    ref,\n    close: () => {\n      ref.current?.close();\n    }\n  };\n}\n\nfunction useShowPopoverHook<ContainerElement>(): CloseableModalHookReturnType<\n  PopoverPropTypes,\n  PopoverDomRef,\n  ContainerElement\n> {\n  const { setModal } = useModalsContext();\n  return useCallback(\n    (props, container) => {\n      const { ref } = showPopover<ContainerElement>(props, setModal, container);\n\n      return {\n        ref,\n        close: () => {\n          ref.current?.close();\n        }\n      };\n    },\n    [setModal]\n  );\n}\n\nfunction showResponsivePopoverFn<ContainerElement>(\n  props: ResponsivePopoverPropTypes,\n  container?: ContainerElement\n): ClosableModalReturnType<ResponsivePopoverDomRef> {\n  const setModal = window['@ui5/webcomponents-react']?.setModal;\n  const { ref } = showResponsivePopover<ContainerElement>(props, setModal, container);\n\n  return {\n    ref,\n    close: () => {\n      ref.current?.close();\n    }\n  };\n}\n\nfunction useShowResponsivePopoverHook<ContainerElement>(): CloseableModalHookReturnType<\n  ResponsivePopoverPropTypes,\n  ResponsivePopoverDomRef,\n  ContainerElement\n> {\n  const { setModal } = useModalsContext();\n  return useCallback(\n    (props, container) => {\n      const { ref } = showResponsivePopover<ContainerElement>(props, setModal, container);\n\n      return {\n        ref,\n        close: () => {\n          ref.current?.close();\n        }\n      };\n    },\n    [setModal]\n  );\n}\n\nfunction showMenuFn<ContainerElement>(\n  props: MenuPropTypes,\n  container?: ContainerElement\n): ClosableModalReturnType<MenuDomRef> {\n  const setModal = window['@ui5/webcomponents-react']?.setModal;\n  const { ref } = showMenu<ContainerElement>(props, setModal, container);\n\n  return {\n    ref,\n    close: () => {\n      ref.current?.close();\n    }\n  };\n}\n\nfunction useShowMenuHook<ContainerElement>(): CloseableModalHookReturnType<\n  MenuPropTypes,\n  MenuDomRef,\n  ContainerElement\n> {\n  const { setModal } = useModalsContext();\n  return useCallback(\n    (props, container) => {\n      const { ref } = showMenu<ContainerElement>(props, setModal, container);\n\n      return {\n        ref,\n        close: () => {\n          ref.current?.close();\n        }\n      };\n    },\n    [setModal]\n  );\n}\n\nfunction showMessageBoxFn<ContainerElement>(\n  props: MessageBoxPropTypes,\n  container?: ContainerElement\n): ClosableModalReturnType<DialogDomRef> {\n  const setModal = window['@ui5/webcomponents-react']?.setModal;\n  const { ref } = showMessageBox<ContainerElement>(props, setModal, container);\n\n  return {\n    ref,\n    close: () => {\n      ref.current?.close();\n    }\n  };\n}\nfunction useShowMessageBox<ContainerElement>(): CloseableModalHookReturnType<\n  MessageBoxPropTypes,\n  DialogDomRef,\n  ContainerElement\n> {\n  const { setModal } = useModalsContext();\n  return useCallback(\n    (props, container) => {\n      const { ref } = showMessageBox<ContainerElement>(props, setModal, container);\n\n      return {\n        ref,\n        close: () => {\n          ref.current?.close();\n        }\n      };\n    },\n    [setModal]\n  );\n}\n\nfunction showToastFn<ContainerElement>(\n  props: ToastPropTypes,\n  container?: ContainerElement\n): ModalReturnType<ToastDomRef> {\n  const setModal = window['@ui5/webcomponents-react']?.setModal;\n  const { ref } = showToast<ContainerElement>(props, setModal, container);\n\n  return {\n    ref\n  };\n}\n\nfunction useShowToastHook<ContainerElement>(): ModalHookReturnType<ToastPropTypes, ToastDomRef, ContainerElement> {\n  const { setModal } = useModalsContext();\n\n  return useCallback(\n    (props: ToastPropTypes, container?) => {\n      const { ref } = showToast<ContainerElement>(props, setModal, container);\n      return {\n        ref\n      };\n    },\n    [setModal]\n  );\n}\n\n/**\n * Utility class for opening modals in an imperative way.\n *\n * These static helper methods might be useful for showing e.g. Toasts or MessageBoxes after successful or failed\n * network calls.\n *\n * @since 0.22.2\n */\nexport const Modals = {\n  showDialog: showDialogFn,\n  useShowDialog: useShowDialogHook,\n  showPopover: showPopoverFn,\n  useShowPopover: useShowPopoverHook,\n  showResponsivePopover: showResponsivePopoverFn,\n  useShowResponsivePopover: useShowResponsivePopoverHook,\n  /**\n   * @since 1.8.0\n   */\n  showMenu: showMenuFn,\n  /**\n   * @since 1.8.0\n   */\n  useShowMenu: useShowMenuHook,\n  showMessageBox: showMessageBoxFn,\n  useShowMessageBox: useShowMessageBox,\n  showToast: showToastFn,\n  useShowToast: useShowToastHook\n};\n"],"names":["getRandomId","checkContext","context","showDialog","props","setModal","container","id","ref","createRef","Dialog","event","showPopover","Popover","showResponsivePopover","ResponsivePopover","showMenu","Menu","showMessageBox","MessageBox","showToast","Toast","el","showDialogFn","_a","useShowDialogHook","useModalsContext","useCallback","showPopoverFn","useShowPopoverHook","showResponsivePopoverFn","useShowResponsivePopoverHook","showMenuFn","useShowMenuHook","showMessageBoxFn","useShowMessageBox","showToastFn","useShowToastHook","Modals"],"mappings":"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"}