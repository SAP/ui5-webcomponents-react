import{j as e}from"./iframe-Dxtd3Za_.js";import{useMDXComponents as r}from"./index-DCsMWBUP.js";import{I as n,F as a}from"./CommandsAndQueries-Bz3F9tKI.js";import{M as s,C as m}from"./blocks-CGoS-OC2.js";import"./Tag-2V4Q7cMJ.js";import{M as p}from"./index-DFbKywCe.js";import"./copy-BvP7Hkk1.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-ws7CvZMJ.js";import"./preload-helper-D9Z9MdNV.js";import"./index-BLmvSYxU.js";import"./index-BJ_zprMk.js";import"./index-C_oxkJx9.js";import"./Link-BJCTkcGT.js";import"./addCustomCSSWithScoping-DDKOktfB.js";import"./index-Ul1D90OH.js";import"./index-V59EODhb.js";import"./index-Cb1r7zf9.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-B_3v8Ndp.js";import"./index-DCNonR1q.js";import"./information-DIBbce7d.js";import"./sys-enter-2-G2_64HTd.js";import"./alert-DwCbeozZ.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-cGyrzAN1.js";import"./delete-CEbQnwVY.js";import"./settings-0sZ4vR_e.js";import"./NoData-AIWXEfE_.js";import"./IllustratedMessage--GJcosdL.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-hCMtoJ2P.js";import"./index-C86E5BTJ.js";import"./slim-arrow-down-BjQZQ0VY.js";import"./Input-CZb4w-Dm.js";import"./ResponsivePopoverCommon.css-IrjJke8_.js";import"./ValueStateMessage.css-Dy_ka0k-.js";import"./Suggestions.css-BdLTlAML.js";import"./ListBoxItemGroupTemplate-Hdt3xH6E.js";import"./ComboBoxItemGroup-bCOIMKds.js";import"./ListItemBaseTemplate-BTk6gcZh.js";import"./Token-B4PghaA6.js";import"./ScrollEnablement-B7k2YzpG.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-CKQU_WCZ.js";import"./ToggleButton-h3hY1eXi.js";import"./SuggestionItem-CQ_pYiq6.js";import"./index-Bxa3CdJQ.js";import"./Option-D9K8emav.js";import"./index-I1slxKzD.js";import"./SegmentedButton-CLk2pLzg.js";import"./index-CpXacsPc.js";import"./Select-CQh2SqHq.js";import"./InvisibleMessage-CCKau1XL.js";import"./slim-arrow-down-CqSn_OKe.js";import"./useIsRTL-CnnkiTdh.js";import"./index-DyEvwlhn.js";import"./IconDesign-DXd8PPVF.js";import"./filter-BlXJbmnx.js";import"./group-2-D9iR7vnq.js";import"./sort-descending-BmXh_-bG.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BdK0W1ZZ.js";import"./utils-FgBaDTia.js";import"./index-DOWDpSnq.js";import"./index-Bz2uwFg5.js";import"./index-DEKh2kth.js";import"./navigation-down-arrow-DibqTE1y.js";import"./navigation-right-arrow-j4FtsvBh.js";import"./navigation-right-arrow-BmUGBCmb.js";import"./useCurrentTheme-BM5p9Se-.js";import"./IndicationColor-DVw-fSM_.js";import"./index-DF7tvuzv.js";import"./debounce-D7W5PopO.js";import"./paper-plane-BMiZOuWZ.js";import"./index-DwxEAMZ0.js";import"./less-DsihYSx8.js";import"./index-BuPb2eok.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
