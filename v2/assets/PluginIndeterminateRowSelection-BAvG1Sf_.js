import{j as e}from"./iframe-CGUWa3l5.js";import{useMDXComponents as r}from"./index-Cg9cAKJC.js";import{I as n,F as a}from"./CommandsAndQueries-D9MoTrLH.js";import{M as s,C as m}from"./blocks-C0vLrpaE.js";import"./Tag-BIHZtDOF.js";import{M as p}from"./index-CL_zuYv3.js";import"./copy-WtCMvp6x.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-BDgC6LVf.js";import"./preload-helper-D9Z9MdNV.js";import"./index-BsFrl4mG.js";import"./index-Dagge6tW.js";import"./index-Be3QtdR7.js";import"./Link-0YCTvvlv.js";import"./addCustomCSSWithScoping-C_LLLVaV.js";import"./index-M2L2LSTo.js";import"./index-G9i70mAv.js";import"./index-CqG7yhFq.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-Dmz3vIHQ.js";import"./index-DVv4DYKP.js";import"./information-gqQAsN3Y.js";import"./sys-enter-2-CDAeFjyO.js";import"./alert-ClZlqLU4.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-CIn0EWmH.js";import"./delete-D8iOVq_P.js";import"./settings-BrU77TJz.js";import"./NoData-BtKw36NF.js";import"./IllustratedMessage-roO0aRXn.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-pvKKlwIQ.js";import"./index-DdzUybfc.js";import"./slim-arrow-down-DTV0qdqM.js";import"./Input-D6uk9j64.js";import"./ResponsivePopoverCommon.css-BEg546Rm.js";import"./ValueStateMessage.css-2dCo7gv0.js";import"./Suggestions.css-BzuWn3c7.js";import"./ListBoxItemGroupTemplate-T5G4LspN.js";import"./ComboBoxItemGroup-rYdUb0dx.js";import"./ListItemBaseTemplate-DPo3rTK0.js";import"./Token-CM0KuYKd.js";import"./ScrollEnablement-CQEkGSE4.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-ZmC8AzlV.js";import"./ToggleButton-B7IDpjil.js";import"./SuggestionItem-B72aMk-1.js";import"./index-D3Q4XSrj.js";import"./Option-KkRC9zkJ.js";import"./index-BDLjw3vw.js";import"./SegmentedButton-BZuewes2.js";import"./index-16LEbUKu.js";import"./Select-DqU7IOqL.js";import"./InvisibleMessage-DsoM_md7.js";import"./slim-arrow-down-C2D4hy1c.js";import"./useIsRTL-CiTgDNnq.js";import"./index-DxY5n6Uu.js";import"./IconDesign-DXd8PPVF.js";import"./filter-D2pujT4z.js";import"./group-2-Bsz1MTSG.js";import"./sort-descending-B95Vwq5b.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-DQRmvIfO.js";import"./utils-Bvg3-Eiz.js";import"./index-DiFhnHjc.js";import"./index-DQtuH_ue.js";import"./index-DPKePRb-.js";import"./navigation-down-arrow-DEG608S3.js";import"./navigation-right-arrow-FljkMUDF.js";import"./navigation-right-arrow-DNwcZSXb.js";import"./useCurrentTheme-_W43-YnM.js";import"./IndicationColor-DVw-fSM_.js";import"./index-B4ApArmi.js";import"./debounce-D7W5PopO.js";import"./paper-plane-CbfSQR9D.js";import"./index-buTEIynB.js";import"./less-CKtxa6cj.js";import"./index-R6CpitaJ.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
