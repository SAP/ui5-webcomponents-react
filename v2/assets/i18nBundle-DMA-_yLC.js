import{J as u,b as C,K as P,L as _,M as R,N as V,r as o}from"./withWebComponent-DUIvHLMA.js";import{i as M}from"./utils-CKNAmS37.js";const T=typeof document>"u",N=()=>{if(T)return u;const t=navigator.languages,e=()=>navigator.language;return t&&t[0]||e()||u},f=new M,w="languageChange",z=t=>{f.attachEvent(w,t)},st=t=>{f.detachEvent(w,t)},I=t=>f.fireEventAsync(w,t);let c,h;C(()=>{c=void 0,h=void 0});const W=()=>(c===void 0&&(c=R()),c),nt=async t=>{c!==t&&(c=t,P()&&(await I(t),await _({languageAware:!0})))},j=()=>(h===void 0&&(h=V()),h),K=/^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;let E=class{constructor(e){const s=K.exec(e.replace(/_/g,"-"));if(s===null)throw new Error(`The given language ${e} does not adhere to BCP-47.`);this.sLocaleId=e,this.sLanguage=s[1]||u,this.sScript=s[2]||"",this.sRegion=s[3]||"",this.sVariant=s[4]&&s[4].slice(1)||null,this.sExtension=s[5]&&s[5].slice(1)||null,this.sPrivateUse=s[6]||null,this.sLanguage&&(this.sLanguage=this.sLanguage.toLowerCase()),this.sScript&&(this.sScript=this.sScript.toLowerCase().replace(/^[a-z]/,n=>n.toUpperCase())),this.sRegion&&(this.sRegion=this.sRegion.toUpperCase())}getLanguage(){return this.sLanguage}getScript(){return this.sScript}getRegion(){return this.sRegion}getVariant(){return this.sVariant}getVariantSubtags(){return this.sVariant?this.sVariant.split("-"):[]}getExtension(){return this.sExtension}getExtensionSubtags(){return this.sExtension?this.sExtension.slice(2).split("-"):[]}getPrivateUse(){return this.sPrivateUse}getPrivateUseSubtags(){return this.sPrivateUse?this.sPrivateUse.slice(2).split("-"):[]}hasPrivateUseSubtag(e){return this.getPrivateUseSubtags().indexOf(e)>=0}toString(){const e=[this.sLanguage];return this.sScript&&e.push(this.sScript),this.sRegion&&e.push(this.sRegion),this.sVariant&&e.push(this.sVariant),this.sExtension&&e.push(this.sExtension),this.sPrivateUse&&e.push(this.sPrivateUse),e.join("-")}};const l=new Map,U=t=>(l.has(t)||l.set(t,new E(t)),l.get(t)),v=t=>{try{if(t&&typeof t=="string")return U(t)}catch{}return new E(o)},p=t=>{if(t)return v(t);const e=W();return e?U(e):v(N())},O=/^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i,Z=/(?:^|-)(saptrc|sappsd)(?:-|$)/i,B={he:"iw",yi:"ji",nb:"no",sr:"sh"},F=t=>{let e;if(!t)return o;if(typeof t=="string"&&(e=O.exec(t.replace(/_/g,"-")))){let s=e[1].toLowerCase(),n=e[3]?e[3].toUpperCase():void 0;const r=e[2]?e[2].toLowerCase():void 0,a=e[4]?e[4].slice(1):void 0,i=e[6];return s=B[s]||s,i&&(e=Z.exec(i))||a&&(e=Z.exec(a))?`en_US_${e[1].toLowerCase()}`:(s==="zh"&&!n&&(r==="hans"?n="CN":r==="hant"&&(n="TW")),s+(n?"_"+n+(a?"_"+a.replace("-","_"):""):""))}return o},J=t=>{if(!t)return o;if(t==="zh_HK")return"zh_TW";const e=t.lastIndexOf("_");return e>=0?t.slice(0,e):t!==o?o:""},m=new Set,x=new Set,A=new Map,$=new Map,y=new Map,at=(t,e,s)=>{const n=`${t}/${e}`;y.set(n,s)},S=(t,e)=>{A.set(t,e)},X=t=>A.get(t),b=(t,e)=>{const s=`${t}/${e}`;return y.has(s)},Y=(t,e)=>{const s=`${t}/${e}`,n=y.get(s);return n&&!$.get(s)&&$.set(s,n(e)),$.get(s)},H=t=>{m.has(t)||(console.warn(`[${t}]: Message bundle assets are not configured. Falling back to English texts.`,` Add \`import "${t}/dist/Assets.js"\` in your bundle and make sure your build tool supports dynamic imports and JSON imports. See section "Assets" in the documentation for more information.`),m.add(t))},L=(t,e)=>e!==u&&!b(t,e),k=async t=>{const e=p().getLanguage(),s=p().getRegion(),n=p().getVariant();let r=e+(s?`-${s}`:"")+(n?`-${n}`:"");if(L(t,r))for(r=F(r);L(t,r);)r=J(r);const a=j();if(r===u&&!a){S(t,null);return}if(!b(t,r)){H(t);return}try{const i=await Y(t,r);S(t,i)}catch(i){const g=i;x.has(g.message)||(x.add(g.message),console.error(g.message))}};z(t=>{const e=[...A.keys()];return Promise.all(e.map(k))});const q=/('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g,D=(t,e)=>(e=e||[],t.replace(q,(s,n,r,a,i)=>{if(n)return"'";if(r)return r.replace(/''/g,"'");if(a){const g=typeof a=="string"?parseInt(a):a;return String(e[g])}throw new Error(`[i18n]: pattern syntax error at pos ${i}`)})),d=new Map;class G{constructor(e){this.packageName=e}getText(e,...s){if(typeof e=="string"&&(e={key:e,defaultText:e}),!e||!e.key)return"";const n=X(this.packageName);n&&!n[e.key]&&console.warn(`Key ${e.key} not found in the i18n bundle, the default text will be used`);const r=n&&n[e.key]?n[e.key]:e.defaultText||e.key;return D(r,s)}}const Q=t=>{if(d.has(t))return d.get(t);const e=new G(t);return d.set(t,e),e},it=async t=>(await k(t),Q(t));export{at as $,nt as a,W as d,it as f,st as r,p as s,z as t,G as u};
