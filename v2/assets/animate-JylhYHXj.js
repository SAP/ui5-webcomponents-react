const n=new WeakMap;class s{static get tasks(){return n}static enqueue(t,e){n.has(t)||n.set(t,[]),n.get(t).push(e)}static run(t,e){return n.has(t)||n.set(t,[]),e().then(()=>{const a=n.get(t);if(a.length>0)return s.run(t,a.shift());n.delete(t)})}static push(t,e){n.get(t)?s.enqueue(t,e):s.run(t,e)}}const d=r=>{let t=null,e=!1,a,u,i;const c=new Promise((o,h)=>{i=m=>{t=t||m;const l=m-t,p=r.duration-l;if(l<=r.duration){const f=1-p/r.duration;r.advance(f),e||(a=requestAnimationFrame(i))}else r.advance(1),o()},u=()=>{e=!0,cancelAnimationFrame(a),h(new Error("animation stopped"))}}).catch(o=>o);return s.push(r.element,()=>(typeof r.beforeStart=="function"&&r.beforeStart(),requestAnimationFrame(i),new Promise(o=>{c.then(()=>o())}))),{promise:()=>c,stop:()=>u}},g=400;export{d as f,g as v};
