import{j as e}from"./iframe-DB1hZqAv.js";import{useMDXComponents as r}from"./index-C7G5dSmF.js";import{I as n,F as a}from"./CommandsAndQueries-Btb1kQnC.js";import{M as s,C as m}from"./blocks-cg9LC1rI.js";import"./Tag-BS7zj2yL.js";import{M as p}from"./index-C5JoWyXC.js";import"./copy-C9f0Ezzi.js";import{b as l}from"./AnalyticalTableHooks.stories-BUext0Gv.js";import"./preload-helper-Ct5FWWRu.js";import"./index-BbxSTqwp.js";import"./index-DfpSA-Ue.js";import"./index-AyDKBAO2.js";import"./Link-CMn1MwX0.js";import"./addCustomCSSWithScoping-aeW1jsnX.js";import"./index-C0ik2STR.js";import"./index-CDotLVrR.js";import"./index-BvRvvaxi.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-CMluZ7rf.js";import"./index-Dq64mUvA.js";import"./information-CQEWuKvd.js";import"./sys-enter-2-CKXMqpTE.js";import"./alert-ttvcaVxO.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-DTJbIMyK.js";import"./delete-iBmDTKmT.js";import"./settings-CXX2toD-.js";import"./NoData-DrngtIPE.js";import"./IllustratedMessage-C6zf5HsA.js";import"./i18n-defaults-dyGKyNAh.js";import"./parameters-bundle.css-B8Lg4lbk.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-DuVbn_Av.js";import"./index-jjwte1j7.js";import"./slim-arrow-down-B9C8_DlV.js";import"./Input-Co1Ncam9.js";import"./ResponsivePopoverCommon.css-DTbOAvZ8.js";import"./ValueStateMessage.css-DyRqN3Zi.js";import"./Suggestions.css-CfU8jDIe.js";import"./ListBoxItemGroupTemplate-Ch9CdS-e.js";import"./ComboBoxItemGroup-DccqzNyb.js";import"./ListItemBaseTemplate-CCky6bk9.js";import"./Token-CPPasJTL.js";import"./ScrollEnablement-DPTLFCJR.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-BudRgS4c.js";import"./ToggleButton-BjCoIICR.js";import"./SuggestionItem-Bpp7nMj3.js";import"./index-CvaoPo7F.js";import"./Option-B4gtaKyw.js";import"./index-CydNmgP-.js";import"./SegmentedButton-CQj9NEcE.js";import"./index-BKk9Wf2M.js";import"./Select-C5E5Vmyc.js";import"./InvisibleMessage-DXb0t9Au.js";import"./slim-arrow-down-C4Fh43q_.js";import"./useIsRTL-C-GxNVoX.js";import"./index-B_yjfbdI.js";import"./IconDesign-DXd8PPVF.js";import"./filter-DmM8q-0P.js";import"./group-2-Cwo9fREl.js";import"./sort-descending-D7mmF3VT.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BZY4Y34l.js";import"./utils-C7ou7Pk8.js";import"./index-v0oEg3Lc.js";import"./index-C4fDg-mx.js";import"./index-CfmFa_MC.js";import"./navigation-down-arrow-BeFKVpxI.js";import"./navigation-right-arrow-DMOktS7m.js";import"./navigation-right-arrow-CJKsR_Mb.js";import"./useCurrentTheme-xBPSbLDD.js";import"./IndicationColor-DVw-fSM_.js";import"./index-D04vslG3.js";import"./debounce-D7W5PopO.js";import"./index-due6Tg_c.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Xe(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Xe as default};
