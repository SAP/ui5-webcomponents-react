---
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaFeatures:
    jsx: true
  project: tsconfig.json
env:
  browser: true
extends:
  - plugin:react/recommended
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:prettier/recommended
  - plugin:storybook/recommended
plugins:
  - prefer-arrow
  - react-hooks
settings:
  react:
    version: detect
rules:
  camelcase:
    - error
    - allow:
        - sap_fiori_3
        - sap_fiori_3_dark
        - sap_belize
        - sap_belize_hcb
        - sap_belize_hcw
        - sap_horizon
        - sap_horizon_dark
  import/order:
    - error
    - newlines-between: never
      alphabetize:
        order: asc
        caseInsensitive: true
  import/no-duplicates: 'error'
overrides:
  - files:
      - '*.ts'
      - '*.tsx'
    plugins:
      - '@typescript-eslint'
    extends:
      - 'plugin:@typescript-eslint/recommended'
      - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
    rules:
      # disabled recommended rules
      '@typescript-eslint/no-empty-function': 'off'

      # set type any rules to warning
      '@typescript-eslint/no-unsafe-member-access': 'warn'
      '@typescript-eslint/no-unsafe-argument': 'warn'
      '@typescript-eslint/no-unsafe-return': 'warn'
      '@typescript-eslint/no-unsafe-assignment': 'warn'
      '@typescript-eslint/no-unsafe-call': 'warn'
      '@typescript-eslint/restrict-plus-operands': 'warn'
      '@typescript-eslint/restrict-template-expressions': 'warn'

      # lots of UI5 Web Components API are promised based but 'fire and forget' is sufficient for us
      '@typescript-eslint/no-floating-promises': 'warn'

  # Generated Web Component Wrappers might contain empty interfaces
  - files:
      - 'packages/main/src/webComponents/*/index.tsx'
    rules:
      '@typescript-eslint/no-empty-interface': 'off'
