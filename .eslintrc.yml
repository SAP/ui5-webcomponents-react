---
root: true
parser: '@typescript-eslint/parser'
parserOptions:
  sourceType: module
  ecmaFeatures:
    jsx: true
env:
  browser: true
  es2022: true
extends:
  - plugin:react/recommended
  - plugin:react-hooks/recommended
  - plugin:import/recommended
  - plugin:prettier/recommended
plugins:
  - prefer-arrow
settings:
  react:
    version: detect
rules:
  camelcase:
    - 'error'
    - allow:
        - sap_fiori_3
        - sap_fiori_3_dark
        - sap_fiori_3_hcb
        - sap_fiori_3_hcw
        - sap_belize
        - sap_belize_hcb
        - sap_belize_hcw
        - sap_horizon
        - sap_horizon_dark
        - sap_horizon_hcb
        - sap_horizon_hcw
  import/order:
    - 'error'
    - newlines-between: never
      alphabetize:
        order: asc
        caseInsensitive: true
  import/no-duplicates: 'error'
  import/no-unresolved: 'error'
overrides:
  # add config for all TypeScript files
  - files:
      - '*.ts'
      - '*.tsx'
    parserOptions:
      project:
        - './tsconfig.spec.json'
        - './tsconfig.node.json'
        - './packages/*/tsconfig.json'
    plugins:
      - '@typescript-eslint'
    extends:
      - 'plugin:@typescript-eslint/recommended'
      - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
      - 'plugin:import/typescript'
    settings:
      import/resolver:
        typescript: true
    rules:
      # disabled some rules from the recommended preset
      '@typescript-eslint/no-empty-function': 'off'
      '@typescript-eslint/no-unsafe-member-access': 'off'
      '@typescript-eslint/no-unsafe-argument': 'off'
      '@typescript-eslint/no-unsafe-return': 'off'
      '@typescript-eslint/no-unsafe-assignment': 'off'
      '@typescript-eslint/no-unsafe-call': 'off'
      '@typescript-eslint/restrict-plus-operands': 'off'
      '@typescript-eslint/restrict-template-expressions': 'off'

      # lots of UI5 Web Components API are promised based but 'fire and forget' is sufficient for us
      '@typescript-eslint/no-floating-promises': 'warn'

      '@typescript-eslint/no-unused-vars':
        - 'error'
        - varsIgnorePattern: '^_'

      # Performance Improvements: https://typescript-eslint.io/linting/troubleshooting/performance-troubleshooting#eslint-plugin-import
      'import/named': 'off'
      'import/namespace': 'off'
      'import/default': 'off'
      'import/no-named-as-default-member': 'off'

  # Generated Web Component Wrappers might contain empty interfaces
  - files:
      - 'packages/main/src/webComponents/*/index.tsx'
    rules:
      '@typescript-eslint/no-empty-interface': 'off'

  # disable prop types check for Analytical Table Defaults (TODO might change for react-table v8)
  - files:
      - 'packages/main/src/components/AnalyticalTable/defaults/**/*.tsx'
      - 'packages/main/src/components/AnalyticalTable/hooks/*.ts'
      - 'packages/main/src/components/AnalyticalTable/hooks/*.tsx'
      - 'packages/main/src/components/AnalyticalTable/TableBody/VirtualTableBodyContainer.tsx'
    rules:
      'react/prop-types': 'off'

  - files:
      - 'cypress/**/*'
    extends:
      - 'plugin:react/jsx-runtime'
    rules:
      '@typescript-eslint/no-namespace': 'off'

  - files:
      - '*.cy.ts'
      - '*.cy.tsx'
    plugins:
      - no-only-tests
    rules:
      '@typescript-eslint/no-empty-function': 'off'
      'react/react-in-jsx-scope': 'off'
      'import/order': 'warn'
      'import/no-unresolved': 'off'
      'react/no-unescaped-entities': 'off'
      '@typescript-eslint/unbound-method': 'warn'
      'react/display-name': 'off'
      no-only-tests/no-only-tests: 'error'

  - files:
      - '*.stories.tsx'
    extends:
      - 'plugin:react/jsx-runtime'
      - 'plugin:storybook/recommended'
    rules:
      'react/prop-types': 'off' # inline custom components within stories don't need prop types
      '@typescript-eslint/no-unused-vars': 'warn' # some samples can include unused vars to show the API / signature
      'react/no-unescaped-entities': 'off'
      'react-hooks/rules-of-hooks': 'off' # the CSF-3 render() functions are not detected as react components
