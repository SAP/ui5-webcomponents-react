import{j as e}from"./iframe-Ci8pj7yy.js";import{useMDXComponents as r}from"./index-DO7eBN2z.js";import{I as n,F as a}from"./CommandsAndQueries-5z2JhX-x.js";import{M as s,C as m}from"./blocks-BOIftN09.js";import"./Tag-CtmOHQqs.js";import{M as p}from"./index-XXTJ5qGa.js";import"./copy-DM6AHN8T.js";import{b as l}from"./AnalyticalTableHooks.stories-CIgjSOik.js";import"./preload-helper-D9Z9MdNV.js";import"./index-D-FVVHHi.js";import"./index-B8N1oKPj.js";import"./index-DWr3iboX.js";import"./Link-CAZ1TUGZ.js";import"./addCustomCSSWithScoping-X0FVjaGM.js";import"./index-DNhpGeE9.js";import"./index-DX67Vy3i.js";import"./index-D32YSGyq.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-BXlYEAwh.js";import"./index-C7Xj3GeW.js";import"./information-DSfftGlH.js";import"./sys-enter-2-C76hk90F.js";import"./alert-DYFZMbbA.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-DqJrgc-x.js";import"./delete-CUXM36Gm.js";import"./settings-g1NOXTFX.js";import"./NoData-BfSz2Jb4.js";import"./IllustratedMessage-Bo2-9Wgw.js";import"./i18n-defaults-Cjp7arcT.js";import"./parameters-bundle.css-34zgZIqy.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-1TM8C73E.js";import"./index-DXcpIB8q.js";import"./slim-arrow-down-lM8f-Uz6.js";import"./Input-D5iz8gVF.js";import"./ResponsivePopoverCommon.css-BfjHIntt.js";import"./ValueStateMessage.css-BrUNqWph.js";import"./Suggestions.css-C4ig1fd6.js";import"./ListBoxItemGroupTemplate-DxlwIkTb.js";import"./ComboBoxItemGroup-zSoS-Ov_.js";import"./ListItemBaseTemplate-CAugTCWT.js";import"./Token-D49MTHA_.js";import"./ScrollEnablement-DMp5qR-R.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-D6LGiTVa.js";import"./ToggleButton-BLZC0g81.js";import"./SuggestionItem-92M1Ikia.js";import"./index-Br4cY6Qw.js";import"./Option-DI25J3kC.js";import"./index-BbuGn4PW.js";import"./SegmentedButton-FzhhcgQ0.js";import"./index-BWFbO-Lg.js";import"./Select-Iz40cZG_.js";import"./InvisibleMessage-CU9-lL93.js";import"./slim-arrow-down-2towEIQe.js";import"./useIsRTL-C1trBNR6.js";import"./index-BX3qDpDF.js";import"./IconDesign-DXd8PPVF.js";import"./filter-CawSky8K.js";import"./group-2-dpD3se9c.js";import"./sort-descending-Dmsih093.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-CGtZMLio.js";import"./utils-BhcSyhLQ.js";import"./index-DFx_hLRP.js";import"./index-BGOVEiSw.js";import"./index-ChMRRx5d.js";import"./navigation-down-arrow-BiDKnIlg.js";import"./navigation-right-arrow-AjROisR1.js";import"./navigation-right-arrow-Cn7J3EaV.js";import"./useCurrentTheme-CfVTJDKN.js";import"./IndicationColor-DVw-fSM_.js";import"./index-CgTw5VBS.js";import"./debounce-D7W5PopO.js";import"./index-DvTGRhis.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Xe(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Xe as default};
