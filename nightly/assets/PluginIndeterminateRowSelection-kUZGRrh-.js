import{j as e}from"./iframe-DQlP_6Qv.js";import{useMDXComponents as r}from"./index-BXhipMBG.js";import{I as n,F as a}from"./CommandsAndQueries-CYuC6yI9.js";import{M as s,C as m}from"./blocks-B5a3gZGW.js";import"./Tag-BSiRJmHh.js";import{M as p}from"./index-DhT04Xs9.js";import"./copy-DA6pIWgW.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-CQH8SH2V.js";import"./preload-helper-D9Z9MdNV.js";import"./index-hxdHCcXn.js";import"./index-6SE_GYer.js";import"./index-DztBgCxB.js";import"./Link-CIr5Lw-F.js";import"./addCustomCSSWithScoping-DaYz7Ef_.js";import"./index-5WDw669T.js";import"./index-s0msSqUd.js";import"./index-CAD4wHAa.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-C-Sr5qI6.js";import"./index-DMuVL8ZX.js";import"./information-D9TZ110a.js";import"./sys-enter-2-DbOIPJDN.js";import"./alert-Boy3zLsV.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-Cg-36jCJ.js";import"./delete-CaVxvXJa.js";import"./settings-B1bN6gcG.js";import"./NoData-muKAeLMq.js";import"./IllustratedMessage-CYlCH6F8.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-B40cHQKs.js";import"./index-BK0EaxBy.js";import"./slim-arrow-down-CQHD_BrB.js";import"./Input-BsxLpfsK.js";import"./ResponsivePopoverCommon.css-DATz21Vs.js";import"./ValueStateMessage.css-CWvBG_nx.js";import"./Suggestions.css-BXPHU2eP.js";import"./ListBoxItemGroupTemplate-DZUU3Xv_.js";import"./ComboBoxItemGroup-73LiHIaA.js";import"./ListItemBaseTemplate-CTjAjayV.js";import"./Token-Z5IU-j9x.js";import"./ScrollEnablement-6VGfabhp.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-CGwXcYIH.js";import"./ToggleButton-DlSwnN6b.js";import"./SuggestionItem-D1wzJv1s.js";import"./index-rC-K7l_B.js";import"./Option-BNwYbhXx.js";import"./index-DorD7nUV.js";import"./SegmentedButton-BBymgHch.js";import"./index-D7ZHlrhm.js";import"./Select-BMnD9RhX.js";import"./InvisibleMessage-DX5nnJX3.js";import"./slim-arrow-down-Cwx3eZbB.js";import"./useIsRTL-0JvlMTKu.js";import"./index-sbxtCj2e.js";import"./IconDesign-DXd8PPVF.js";import"./filter-C-UXJ6vS.js";import"./group-2-BDo86s0K.js";import"./sort-descending-_vLqc138.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-CxTyPwah.js";import"./utils-C-s4mjI-.js";import"./index-BXfFluxG.js";import"./index-CYRJoMmx.js";import"./index-ChezfNZe.js";import"./navigation-down-arrow-DArtWA0U.js";import"./navigation-right-arrow-BqiGYNmk.js";import"./navigation-right-arrow-BWmOXN6t.js";import"./useCurrentTheme-C89Am9JT.js";import"./IndicationColor-DVw-fSM_.js";import"./index-5gEQmBVM.js";import"./debounce-D7W5PopO.js";import"./paper-plane-BjsxesMZ.js";import"./index-B7bck6f6.js";import"./less-I7yd6AVT.js";import"./index-BwUsRFpl.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
