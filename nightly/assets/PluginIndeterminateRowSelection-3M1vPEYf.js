import{j as e}from"./iframe-ir6pYnmz.js";import{useMDXComponents as r}from"./index-41o0Td7A.js";import{I as n,F as a}from"./CommandsAndQueries-b6zt1eWd.js";import{M as s,C as m}from"./blocks-D_tGmZuN.js";import"./Tag-DRGeWEus.js";import{M as p}from"./index-e4AcpL9G.js";import"./copy-BlUsduAp.js";import{b as l}from"./AnalyticalTableHooks.stories-BgNDbnYG.js";import"./preload-helper-Ct5FWWRu.js";import"./index-CH7s07mV.js";import"./index-1Mik_Y5f.js";import"./index-BTss8I7u.js";import"./Link-Be2dbLkV.js";import"./addCustomCSSWithScoping-DMyl69E9.js";import"./index-CZ16GD7U.js";import"./index-CKTjdAAk.js";import"./index-8VSCVlQX.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-D5OnWZgu.js";import"./index-BbtZuvgL.js";import"./information-B8K6izqM.js";import"./sys-enter-2-CYPsCOvo.js";import"./alert-DQylSe-I.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-DwMJwtSz.js";import"./delete-CmyvenUA.js";import"./settings-Bl6bQc6H.js";import"./NoData-DxhmC_91.js";import"./IllustratedMessage-BTBpKBnW.js";import"./i18n-defaults-Cjp7arcT.js";import"./parameters-bundle.css-34zgZIqy.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-sllTisPT.js";import"./index-Chn6LRAy.js";import"./slim-arrow-down-DIhPSUlE.js";import"./Input-CT2v4mLF.js";import"./ResponsivePopoverCommon.css-CAhax-LW.js";import"./ValueStateMessage.css-DXEXnL2N.js";import"./Suggestions.css-DVkCnc2y.js";import"./ListBoxItemGroupTemplate-BxUFdl0w.js";import"./ComboBoxItemGroup-CdScSe_V.js";import"./ListItemBaseTemplate-GBw0Nk1X.js";import"./Token-B1N_8NmE.js";import"./ScrollEnablement-DaGY4Jm-.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-CDRG7U85.js";import"./ToggleButton-f5GCJkmp.js";import"./SuggestionItem-CuzhU48j.js";import"./index-DZ8NIWLE.js";import"./Option-CT-dyvBc.js";import"./index-aBA0PLh-.js";import"./SegmentedButton-C6EyhWUa.js";import"./index-CXc2Eu8C.js";import"./Select-De9RNiJH.js";import"./InvisibleMessage-q2TaioBA.js";import"./slim-arrow-down-DtlJr3sY.js";import"./useIsRTL-Da2zSY1x.js";import"./index-DAsbl867.js";import"./IconDesign-DXd8PPVF.js";import"./filter-CPo0n3ee.js";import"./group-2-MQdYi-0x.js";import"./sort-descending-D2xxVNEk.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BvZ0UPF0.js";import"./utils-D-cGwZG0.js";import"./index-hBVsNMVz.js";import"./index-C1scF0QK.js";import"./index-aiDUSRvd.js";import"./navigation-down-arrow-Cwg074OW.js";import"./navigation-right-arrow-IPve_ban.js";import"./navigation-right-arrow-vWKMw0EP.js";import"./useCurrentTheme-DTjaKwLS.js";import"./IndicationColor-DVw-fSM_.js";import"./index-WEKLa-kK.js";import"./debounce-D7W5PopO.js";import"./index-1jK9MjSz.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Xe(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Xe as default};
