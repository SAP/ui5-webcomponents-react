import{j as e}from"./iframe-BVTjwwa8.js";import{useMDXComponents as r}from"./index-B7X7f4OL.js";import{I as n,F as a}from"./CommandsAndQueries-BxY3Aj9d.js";import{M as s,C as m}from"./blocks-eGiRc96Y.js";import"./Tag-Dd2A7Fyt.js";import{M as p}from"./index-CMlRFogN.js";import"./copy-B0_44_hm.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-CGXLTMGM.js";import"./preload-helper-D9Z9MdNV.js";import"./index-DP8RXEYN.js";import"./index-BvWmgkkb.js";import"./index-BsaRVQdN.js";import"./Link-B7kPjB45.js";import"./addCustomCSSWithScoping-CzL_B1eM.js";import"./index-ytwNl_Zj.js";import"./index-IhKV7aiN.js";import"./index-BQCzDji_.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-yJLdt4rK.js";import"./index-B1gqswNl.js";import"./information-DblDnfTa.js";import"./sys-enter-2-w3Gdy4bH.js";import"./alert-DS_YR08B.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-Dc-12NMD.js";import"./delete-CGtcDoe_.js";import"./settings-hVUhtZ6y.js";import"./NoData-DS35pzTF.js";import"./IllustratedMessage-x4VOj4Pw.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-CNPrt5Xv.js";import"./index-BgpeKNsm.js";import"./slim-arrow-down-q0ei8TSg.js";import"./Input-co8T_wRa.js";import"./ResponsivePopoverCommon.css-CTpWDnyD.js";import"./ValueStateMessage.css-CklfWixh.js";import"./Suggestions.css-BFFNt1YV.js";import"./ListBoxItemGroupTemplate-BOi0kYXq.js";import"./ComboBoxItemGroup-DZ2t_1kl.js";import"./ListItemBaseTemplate-00D3SYn4.js";import"./Token-BTANNLIp.js";import"./ScrollEnablement-X9DTHKIv.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-BAXagnCs.js";import"./ToggleButton-B5voNYUw.js";import"./SuggestionItem-B50m8Gyh.js";import"./index-Jz8t2dvI.js";import"./Option-C1Pj2e5b.js";import"./index-D6BPa1_b.js";import"./SegmentedButton-CTr1olLB.js";import"./index-BhAe3Aw_.js";import"./Select-B4alDdu-.js";import"./InvisibleMessage-CETvZCdD.js";import"./slim-arrow-down-CbdcQMCz.js";import"./useIsRTL-D_4xzLEe.js";import"./index-DPurakIR.js";import"./IconDesign-DXd8PPVF.js";import"./filter-YUeSfDda.js";import"./group-2-B2FfwC3o.js";import"./sort-descending-DrsjlcI9.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BR2ycD-b.js";import"./utils-CHjabxlG.js";import"./index-ugx_8wyU.js";import"./index-CFjQC8Rl.js";import"./index-wRcNlb_M.js";import"./navigation-down-arrow-TGu9KNhG.js";import"./navigation-right-arrow-CvYYllXN.js";import"./navigation-right-arrow-CiN3ZT4_.js";import"./useCurrentTheme-DACJQMB7.js";import"./IndicationColor-DVw-fSM_.js";import"./index-Scuc8kwA.js";import"./debounce-D7W5PopO.js";import"./paper-plane-BE9i310R.js";import"./index-DQgqs36o.js";import"./less-DrAJ6UF0.js";import"./index-CAZ62WrL.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
