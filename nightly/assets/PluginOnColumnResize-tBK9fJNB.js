import{j as o}from"./jsx-runtime-D_zvdyIk.js";import{useMDXComponents as m}from"./index-DpYXPI8c.js";import{I as e,F as p}from"./CommandsAndQueries-CW1MEpc5.js";import{M as n,C as l}from"./index-BFNrp1s0.js";import"./index-BPgdWBHk.js";import"./index-DO9uR8_1.js";import"./TagDesign-Ga50IS6u.js";import"./index-ChI72X44.js";import"./index-DnYn5RTv.js";import"./Button-BhJpItN3.js";import"./jsx-runtime-DITkwERB.js";import"./copy-BjWKS8Rq.js";import"./WrappingType-BBpR8qCJ.js";import"./Title-DKHf5Ic-.js";import{d as s}from"./AnalyticalTableHooks.stories-D-ZfL-c3.js";import"./preview-DY_fzwdD.js";import"./iframe-pzVTtieK.js";import"./DocsRenderer-CFRXHY34-C_vi3ORt.js";import"./react-18-B55prW7j.js";import"./index-BS9IDQLN.js";import"./Popover-C53QSKRD.js";import"./slot-_4yKMUwC.js";import"./PopupsCommon.css-BG-751as.js";import"./event-strict-DgQLNDEV.js";import"./FocusableElements-noNskoYV.js";import"./isElementHidden-B4HqmI2E.js";import"./AccessibilityTextsHelper-4hgGqLyb.js";import"./CustomElementsScope-CRlaEhjH.js";import"./Keys-B3oBAe0t.js";import"./getActiveElement-kltGt_DR.js";import"./ResizeHandler-Cex6U3jO.js";import"./MediaRange-Bnzt26Xb.js";import"./toLowercaseEnumValue-C_8o5td_.js";import"./parameters-bundle.css-DHLNbl9v.js";import"./getEffectiveScrollbarStyle-C9nZ6DfS.js";import"./index-BvV6NyTG.js";import"./clsx-B-dksMZM.js";import"./useStylesheet-BYtqX5T7.js";import"./index-D3cwvX0i.js";import"./Label-Cw3xmdjW.js";import"./i18n-CjR4HGlq.js";import"./i18n-defaults-BXUwkpCs.js";import"./index-D5gqvCq0.js";import"./index-Bina6Rws.js";import"./Link-C_1Qeegk.js";import"./Icon-g4jJGwIi.js";import"./index-vVWMke_Z.js";import"./index-BZypq4CF.js";import"./Text-BBBHwYsI.js";import"./willShowContent-CZcfsNXp.js";import"./addCustomCSSWithScoping-bWjUKP8X.js";import"./index-CbnmVlWA.js";import"./BusyIndicator-DTHwLaG3.js";import"./index-c5_gOmO2.js";import"./index-II2KQk7A.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-DyHFsBXc.js";import"./index-CHSraWsj.js";import"./I18nStore-BBWtp4Wg.js";import"./index-CXQShRbs.js";import"./index-DrFu-skq.js";import"./decline-Bk6V92qv.js";import"./i18n-defaults-BJtDw6Mf.js";import"./information-B1L_xjDU.js";import"./information-BQmhacxY.js";import"./sys-enter-2-3Y2FtBDI.js";import"./sys-enter-2-DnGfeGAh.js";import"./Tooltips-CtkDPpba.js";import"./EventProvider-ChtD9rRX.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-99sN9t_1.js";import"./delete-DGsNL-6V.js";import"./edit-CSRQM9Zi.js";import"./settings-DUSTv_tf.js";import"./index-DM09Yw9A.js";import"./ValueState-Bg0UWejw.js";import"./slim-arrow-down-Cgrd8zOH.js";import"./ListBoxItemGroupTemplate-BITHQlUl.js";import"./ListItemGroup-ghsuw5ZR.js";import"./DropIndicator-Cu7AtIKy.js";import"./TabbableElements-XzXYKyvZ.js";import"./ListItemBaseTemplate-Bj6bNleE.js";import"./ComboBoxItemGroup-B009yzUE.js";import"./Token-DHKcpX6z.js";import"./ItemNavigation-DKmCjzmX.js";import"./ScrollEnablement-CKJWdxrT.js";import"./animate-JylhYHXj.js";import"./List-hzHRypsE.js";import"./handleDrop-DpfFniv0.js";import"./getNormalizedTarget-C4mxORXI.js";import"./debounce-TTkz9ISH.js";import"./ListItemStandard-DJ76zjeJ.js";import"./ListItemTemplate-CJUKWeYS.js";import"./ListItemAdditionalText.css-_rrKfffM.js";import"./slim-arrow-right-CeL61nQX.js";import"./RadioButton-mPAIpEot.js";import"./CheckBox-BFFJa24b.js";import"./accept-DP3JdRgF.js";import"./ResponsivePopover-VLmN0bUg.js";import"./Dialog-CxuAGvin.js";import"./ResponsivePopoverCommon.css-BI2J7kmG.js";import"./Suggestions.css-BhnFB41q.js";import"./ToggleButton-CRbcKt_z.js";import"./Input-BxBUfFcy.js";import"./ValueStateMessage.css-BaVdPDXq.js";import"./index-D_HAOodG.js";import"./Option-CkubFf6o.js";import"./index-z6qxdbWu.js";import"./Select-DaRwnepf.js";import"./InvisibleMessage-BcvJS3H3.js";import"./slim-arrow-down-CVAm3oXH.js";import"./index-C0ciRrKU.js";import"./Tag-DJG7ubt1.js";import"./sys-help-2-WHz-04ii.js";import"./i18n-defaults-d97UCXvF.js";import"./useIsRTL-Dfhfug7K.js";import"./directionChange-BzugKGnv.js";import"./index-czeG7uL_.js";import"./IconDesign-DXd8PPVF.js";import"./filter-B_j_WdjZ.js";import"./group-2-D6bYL_Ec.js";import"./sort-descending-BzalmywD.js";import"./ThemingParameters-le4wpk1U.js";import"./index-DNec9Trg.js";import"./stopPropagation-BJWsenK5.js";import"./index-E2ywxVCY.js";import"./utils-C5-ShS2w.js";import"./index-DYqvoVQr.js";import"./index-Cy0WNDvJ.js";import"./ListItemCustom-3B9kxNan.js";import"./index-D8qQxVVT.js";import"./navigation-down-arrow-C3tQ2QCI.js";import"./navigation-right-arrow-DA2UrUH2.js";import"./navigation-right-arrow-DYtEiZ7d.js";import"./useCurrentTheme-rFg1BvgO.js";import"./IndicationColor-LRWnbNUo.js";import"./index-BFuBRYLx.js";import"./index-CNJ0cjk8.js";import"./debounce-D7W5PopO.js";import"./index-DGg3OUUs.js";function r(t){const i={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...m(),...t.components};return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin Hooks / useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(e,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(l,{sourceState:"none",of:s}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(p,{})]})}function Li(t={}){const{wrapper:i}={...m(),...t.components};return i?o.jsx(i,{...t,children:o.jsx(r,{...t})}):r(t)}export{Li as default};
