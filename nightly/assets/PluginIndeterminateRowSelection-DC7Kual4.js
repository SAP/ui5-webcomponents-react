import{j as e}from"./iframe-nPyk7Pli.js";import{useMDXComponents as r}from"./index-CtkrgsHZ.js";import{I as n,F as a}from"./CommandsAndQueries-BH3LWIrk.js";import{M as s,C as m}from"./blocks-kpZj3_CU.js";import"./Tag-DE1zjgne.js";import{M as p}from"./index-Db4ElCLi.js";import"./copy-YekArnCd.js";import{b as l}from"./AnalyticalTableHooks.stories-DOkPKrpz.js";import"./preload-helper-Ct5FWWRu.js";import"./index-B-9nmnKT.js";import"./index-4UD2mlLT.js";import"./index-DuhaT3ww.js";import"./Link-DLcMVbxe.js";import"./addCustomCSSWithScoping-98xqr_q6.js";import"./index-BsO78O3m.js";import"./index-QcasdNWm.js";import"./index-CrWnOU7h.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-Cqyy-sBZ.js";import"./index-Bf4gw30l.js";import"./information-BO_mntst.js";import"./sys-enter-2-DaFu4CEs.js";import"./alert-UB53-VFT.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-Ty-gGthJ.js";import"./delete-B8WU0zBU.js";import"./settings-ahtvM9f0.js";import"./NoData-DmwrNGBB.js";import"./IllustratedMessage-CcqtXOwA.js";import"./i18n-defaults-dyGKyNAh.js";import"./parameters-bundle.css-B8Lg4lbk.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-Dt6BDesQ.js";import"./index-By_y6r94.js";import"./slim-arrow-down-BcON-Wjl.js";import"./Input-BE7iMtB8.js";import"./ResponsivePopoverCommon.css-DCRzDw4o.js";import"./ValueStateMessage.css-5GikroWi.js";import"./Suggestions.css-BKHPD-ad.js";import"./ListBoxItemGroupTemplate-CCr0Rncx.js";import"./ComboBoxItemGroup-CJbgxf-C.js";import"./ListItemBaseTemplate-BHadPsZP.js";import"./Token-C9bVd98N.js";import"./ScrollEnablement-u7JmO1XQ.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-DlWJ6O71.js";import"./ToggleButton-DvPplgtZ.js";import"./SuggestionItem-ChjoWPxK.js";import"./index-Cx6mx0cC.js";import"./Option-glJsPgx-.js";import"./index-DqOKj-U3.js";import"./SegmentedButton-CNBN2YvV.js";import"./index-ZYyIsLUD.js";import"./Select-RQ6rgJWT.js";import"./InvisibleMessage-CP2XxzVV.js";import"./slim-arrow-down-B-fe4k97.js";import"./useIsRTL-DgP77H3z.js";import"./index-CZMRCvhw.js";import"./IconDesign-DXd8PPVF.js";import"./filter-Cop_iv5v.js";import"./group-2-ZPJw_y-G.js";import"./sort-descending-CXALsaRF.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BoZbY8eq.js";import"./utils-DiknCXVA.js";import"./index-BJQU4DCG.js";import"./index-CGMKS6Sn.js";import"./index-BtpbMWx5.js";import"./navigation-down-arrow-DEfnuviE.js";import"./navigation-right-arrow-s3baHVI1.js";import"./navigation-right-arrow-Cl_8zST2.js";import"./useCurrentTheme-DEridXQJ.js";import"./IndicationColor-DVw-fSM_.js";import"./index-BxYyMEin.js";import"./debounce-D7W5PopO.js";import"./index-Df0OHWRS.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Xe(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Xe as default};
