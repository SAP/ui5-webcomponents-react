import{j as e}from"./iframe-BxEu-xci.js";import{useMDXComponents as r}from"./index-DIpNHUFd.js";import{I as n,F as a}from"./CommandsAndQueries-BL1k5Lab.js";import{M as s,C as m}from"./blocks-DPfoGqoC.js";import"./Tag-BNi2hR4G.js";import{M as p}from"./index-BorC4J59.js";import"./copy-byxAjSE6.js";import{b as l}from"./AnalyticalTableHooks.stories-HWmY7zip.js";import"./preload-helper-Ct5FWWRu.js";import"./index-CFj32LYi.js";import"./index-CL8FjSwM.js";import"./index-CnHUdtnF.js";import"./Link-CkCyRMbi.js";import"./addCustomCSSWithScoping-C3RRJQPN.js";import"./index-DSeLD822.js";import"./index-Dzht26Rp.js";import"./index-BV37wPbr.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-dYhLm2AL.js";import"./index-zhC6_est.js";import"./information-BKw42Lxc.js";import"./sys-enter-2-BkwngAtf.js";import"./alert-DQ3naR-W.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-BH93_Lsj.js";import"./delete-CYGtkaxN.js";import"./settings-eZTEBWqi.js";import"./NoData-CPb97MZw.js";import"./IllustratedMessage-Cxzzm7cA.js";import"./i18n-defaults-Cjp7arcT.js";import"./parameters-bundle.css-B8Lg4lbk.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-CrDGa_wI.js";import"./index-zRLag29-.js";import"./slim-arrow-down-UD2Q1IDE.js";import"./Input-CgWZ-qAo.js";import"./ResponsivePopoverCommon.css-CWKaQ37A.js";import"./ValueStateMessage.css-BD9264Ua.js";import"./Suggestions.css-PvISQ8RB.js";import"./ListBoxItemGroupTemplate-B7TcVOYF.js";import"./ComboBoxItemGroup-CPr8tLri.js";import"./ListItemBaseTemplate-B-1oyib3.js";import"./Token-967xuEKh.js";import"./ScrollEnablement-B0qFQ7DX.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-DDZZwHz8.js";import"./ToggleButton-BnmaRB9r.js";import"./SuggestionItem-DrN6FdPk.js";import"./index-BZeUxVa-.js";import"./Option-C7146fjq.js";import"./index-YaJgyAqd.js";import"./SegmentedButton-Dc-edv9U.js";import"./index-COSAVkse.js";import"./Select-B5DeL5zX.js";import"./InvisibleMessage-CwUOjoUf.js";import"./slim-arrow-down-poKh_hcw.js";import"./useIsRTL-BpqbY7M4.js";import"./index-DSA_Eb7Y.js";import"./IconDesign-DXd8PPVF.js";import"./filter-QgylPsvJ.js";import"./group-2-Bluuis61.js";import"./sort-descending-CFm0YXL_.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-D68zLiR-.js";import"./utils-BDjXc7bK.js";import"./index-Bv-tSzmM.js";import"./index-D63mSLbN.js";import"./index-D7M3tNXI.js";import"./navigation-down-arrow-DVVrIqSy.js";import"./navigation-right-arrow-9X3lJ24P.js";import"./navigation-right-arrow-Ch2GBoCa.js";import"./useCurrentTheme-DFuvxmk_.js";import"./IndicationColor-DVw-fSM_.js";import"./index-DHucAflH.js";import"./debounce-D7W5PopO.js";import"./index-DT2P5I7N.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Xe(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Xe as default};
