import{c as ve,s as Ce,t as Pe,l as we}from"./DemoProps-eeGsiXID.js";import{v as u,x as G,eM as Ae,r as L,o as te,j as w}from"./iframe-D9TrNBgU.js";import{T as Oe}from"./ThemingParameters-pyhX3s39.js";import{u as je,C as _e}from"./ChartDataLabel-CV2PzT4t.js";import{u as De,a as Se,b as xe,e as Ee}from"./staticProps-KNMsBToN.js";import{u as Le,a as ke}from"./useTooltipFormatter-C2CClpPR.js";import{a as D,z as $,i as B,D as Re,L as Z,A as Te,b as K,c as Ne,e as qe,G as Ie,g as ne,X as Ve,d as ae,k as $e,M as ze,m as Fe,T as We,n as Me}from"./ChartContainer-Cn48YoqZ.js";import{c as Be,P as ce,a as de,b as Ke}from"./Placeholder-bjKD27VA.js";var Ge=["cx","cy","innerRadius","outerRadius","gridType","radialLines"];function z(t){"@babel/helpers - typeof";return z=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},z(t)}function He(t,e){if(t==null)return{};var a=Ue(t,e),n,r;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],!(e.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}function Ue(t,e){if(t==null)return{};var a={};for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){if(e.indexOf(n)>=0)continue;a[n]=t[n]}return a}function O(){return O=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},O.apply(this,arguments)}function re(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable})),a.push.apply(a,n)}return a}function F(t){for(var e=1;e<arguments.length;e++){var a=arguments[e]!=null?arguments[e]:{};e%2?re(Object(a),!0).forEach(function(n){Ye(t,n,a[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):re(Object(a)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(a,n))})}return t}function Ye(t,e,a){return e=Xe(e),e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function Xe(t){var e=Ze(t,"string");return z(e)=="symbol"?e:e+""}function Ze(t,e){if(z(t)!="object"||!t)return t;var a=t[Symbol.toPrimitive];if(a!==void 0){var n=a.call(t,e);if(z(n)!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}var Je=function(e,a,n,r){var o="";return r.forEach(function(i,s){var l=$(a,n,e,i);s?o+="L ".concat(l.x,",").concat(l.y):o+="M ".concat(l.x,",").concat(l.y)}),o+="Z",o},Qe=function(e){var a=e.cx,n=e.cy,r=e.innerRadius,o=e.outerRadius,i=e.polarAngles,s=e.radialLines;if(!i||!i.length||!s)return null;var l=F({stroke:"#ccc"},D(e,!1));return u.createElement("g",{className:"recharts-polar-grid-angle"},i.map(function(d){var c=$(a,n,r,d),p=$(a,n,o,d);return u.createElement("line",O({},l,{key:"line-".concat(d),x1:c.x,y1:c.y,x2:p.x,y2:p.y}))}))},et=function(e){var a=e.cx,n=e.cy,r=e.radius,o=e.index,i=F(F({stroke:"#ccc"},D(e,!1)),{},{fill:"none"});return u.createElement("circle",O({},i,{className:G("recharts-polar-grid-concentric-circle",e.className),key:"circle-".concat(o),cx:a,cy:n,r}))},tt=function(e){var a=e.radius,n=e.index,r=F(F({stroke:"#ccc"},D(e,!1)),{},{fill:"none"});return u.createElement("path",O({},r,{className:G("recharts-polar-grid-concentric-polygon",e.className),key:"path-".concat(n),d:Je(a,e.cx,e.cy,e.polarAngles)}))},nt=function(e){var a=e.polarRadius,n=e.gridType;return!a||!a.length?null:u.createElement("g",{className:"recharts-polar-grid-concentric"},a.map(function(r,o){var i=o;return n==="circle"?u.createElement(et,O({key:i},e,{radius:r,index:o})):u.createElement(tt,O({key:i},e,{radius:r,index:o}))}))},ue=function(e){var a=e.cx,n=a===void 0?0:a,r=e.cy,o=r===void 0?0:r,i=e.innerRadius,s=i===void 0?0:i,l=e.outerRadius,d=l===void 0?0:l,c=e.gridType,p=c===void 0?"polygon":c,h=e.radialLines,f=h===void 0?!0:h,g=He(e,Ge);return d<=0?null:u.createElement("g",{className:"recharts-polar-grid"},u.createElement(Qe,O({cx:n,cy:o,innerRadius:s,outerRadius:d,gridType:p,radialLines:f},g)),u.createElement(nt,O({cx:n,cy:o,innerRadius:s,outerRadius:d,gridType:p,radialLines:f},g)))};ue.displayName="PolarGrid";var J,oe;function at(){if(oe)return J;oe=1;function t(e){return e&&e.length?e[0]:void 0}return J=t,J}var Q,ie;function rt(){return ie||(ie=1,Q=at()),Q}var ot=rt();const it=Ae(ot);var st=["key"];function S(t){"@babel/helpers - typeof";return S=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(t)}function lt(t,e){if(t==null)return{};var a=ct(t,e),n,r;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],!(e.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}function ct(t,e){if(t==null)return{};var a={};for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){if(e.indexOf(n)>=0)continue;a[n]=t[n]}return a}function H(){return H=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},H.apply(this,arguments)}function se(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable})),a.push.apply(a,n)}return a}function m(t){for(var e=1;e<arguments.length;e++){var a=arguments[e]!=null?arguments[e]:{};e%2?se(Object(a),!0).forEach(function(n){A(t,n,a[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):se(Object(a)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(a,n))})}return t}function dt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function le(t,e){for(var a=0;a<e.length;a++){var n=e[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,he(n.key),n)}}function ut(t,e,a){return e&&le(t.prototype,e),a&&le(t,a),Object.defineProperty(t,"prototype",{writable:!1}),t}function pt(t,e,a){return e=U(e),ht(t,pe()?Reflect.construct(e,a||[],U(t).constructor):e.apply(t,a))}function ht(t,e){if(e&&(S(e)==="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return mt(t)}function mt(t){if(t===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function pe(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(pe=function(){return!!t})()}function U(t){return U=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(a){return a.__proto__||Object.getPrototypeOf(a)},U(t)}function ft(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&ee(t,e)}function ee(t,e){return ee=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,r){return n.__proto__=r,n},ee(t,e)}function A(t,e,a){return e=he(e),e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function he(t){var e=yt(t,"string");return S(e)=="symbol"?e:e+""}function yt(t,e){if(S(t)!="object"||!t)return t;var a=t[Symbol.toPrimitive];if(a!==void 0){var n=a.call(t,e);if(S(n)!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}var W=function(t){function e(){var a;dt(this,e);for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return a=pt(this,e,[].concat(r)),A(a,"state",{isAnimationFinished:!1}),A(a,"handleAnimationEnd",function(){var i=a.props.onAnimationEnd;a.setState({isAnimationFinished:!0}),B(i)&&i()}),A(a,"handleAnimationStart",function(){var i=a.props.onAnimationStart;a.setState({isAnimationFinished:!1}),B(i)&&i()}),A(a,"handleMouseEnter",function(i){var s=a.props.onMouseEnter;s&&s(a.props,i)}),A(a,"handleMouseLeave",function(i){var s=a.props.onMouseLeave;s&&s(a.props,i)}),a}return ft(e,t),ut(e,[{key:"renderDots",value:function(n){var r=this.props,o=r.dot,i=r.dataKey,s=D(this.props,!1),l=D(o,!0),d=n.map(function(c,p){var h=m(m(m({key:"dot-".concat(p),r:3},s),l),{},{dataKey:i,cx:c.x,cy:c.y,index:p,payload:c});return e.renderDotItem(o,h)});return u.createElement(Z,{className:"recharts-radar-dots"},d)}},{key:"renderPolygonStatically",value:function(n){var r=this.props,o=r.shape,i=r.dot,s=r.isRange,l=r.baseLinePoints,d=r.connectNulls,c;return u.isValidElement(o)?c=u.cloneElement(o,m(m({},this.props),{},{points:n})):B(o)?c=o(m(m({},this.props),{},{points:n})):c=u.createElement(Be,H({},D(this.props,!0),{onMouseEnter:this.handleMouseEnter,onMouseLeave:this.handleMouseLeave,points:n,baseLinePoints:s?l:null,connectNulls:d})),u.createElement(Z,{className:"recharts-radar-polygon"},c,i?this.renderDots(n):null)}},{key:"renderPolygonWithAnimation",value:function(){var n=this,r=this.props,o=r.points,i=r.isAnimationActive,s=r.animationBegin,l=r.animationDuration,d=r.animationEasing,c=r.animationId,p=this.state.prevPoints;return u.createElement(Te,{begin:s,duration:l,isActive:i,easing:d,from:{t:0},to:{t:1},key:"radar-".concat(c),onAnimationEnd:this.handleAnimationEnd,onAnimationStart:this.handleAnimationStart},function(h){var f=h.t,g=p&&p.length/o.length,P=o.map(function(y,b){var j=p&&p[Math.floor(b*g)];if(j){var M=K(j.x,y.x),Y=K(j.y,y.y);return m(m({},y),{},{x:M(f),y:Y(f)})}var E=K(y.cx,y.x),X=K(y.cy,y.y);return m(m({},y),{},{x:E(f),y:X(f)})});return n.renderPolygonStatically(P)})}},{key:"renderPolygon",value:function(){var n=this.props,r=n.points,o=n.isAnimationActive,i=n.isRange,s=this.state.prevPoints;return o&&r&&r.length&&!i&&(!s||!Ne(s,r))?this.renderPolygonWithAnimation():this.renderPolygonStatically(r)}},{key:"render",value:function(){var n=this.props,r=n.hide,o=n.className,i=n.points,s=n.isAnimationActive;if(r||!i||!i.length)return null;var l=this.state.isAnimationFinished,d=G("recharts-radar",o);return u.createElement(Z,{className:d},this.renderPolygon(),(!s||l)&&qe.renderCallByParent(this.props,i))}}],[{key:"getDerivedStateFromProps",value:function(n,r){return n.animationId!==r.prevAnimationId?{prevAnimationId:n.animationId,curPoints:n.points,prevPoints:r.curPoints}:n.points!==r.curPoints?{curPoints:n.points}:null}},{key:"renderDotItem",value:function(n,r){var o;if(u.isValidElement(n))o=u.cloneElement(n,r);else if(B(n))o=n(r);else{var i=r.key,s=lt(r,st);o=u.createElement(Re,H({},s,{key:i,className:G("recharts-radar-dot",typeof n!="boolean"?n.className:"")}))}return o}}])}(L.PureComponent);A(W,"displayName","Radar");A(W,"defaultProps",{angleAxisId:0,radiusAxisId:0,hide:!1,activeDot:!0,dot:!1,legendType:"rect",isAnimationActive:!Ie.isSsr,animationBegin:0,animationDuration:1500,animationEasing:"ease"});A(W,"getComposedData",function(t){var e=t.radiusAxis,a=t.angleAxis,n=t.displayedData,r=t.dataKey,o=t.bandSize,i=a.cx,s=a.cy,l=!1,d=[],c=a.type!=="number"?o??0:0;n.forEach(function(h,f){var g=ne(h,a.dataKey,f),P=ne(h,r),y=a.scale(g)+c,b=Array.isArray(P)?Ve(P):P,j=ae(b)?void 0:e.scale(b);Array.isArray(P)&&P.length>=2&&(l=!0),d.push(m(m({},$(i,s,j,y)),{},{name:g,value:P,cx:i,cy:s,radius:j,angle:y,payload:h}))});var p=[];return l&&d.forEach(function(h){if(Array.isArray(h.value)){var f=it(h.value),g=ae(f)?void 0:e.scale(f);p.push(m(m({},h),{},{radius:g},$(i,s,g,h.angle)))}else p.push(h)}),{points:d,isRange:l,baseLinePoints:p}});var gt=$e({chartName:"RadarChart",GraphicalChild:W,axisComponents:[{axisType:"angleAxis",AxisComp:ce},{axisType:"radiusAxis",AxisComp:de}],formatAxisMap:ze,defaultProps:{layout:"centric",startAngle:90,endAngle:-270,cx:"50%",cy:"50%",innerRadius:0,outerRadius:"80%"}});const bt={formatter:t=>t},vt={formatter:Ee,opacity:.5},x=L.forwardRef((t,e)=>{const{loading:a,loadingDelay:n,dataset:r,noLegend:o,noAnimation:i,tooltipConfig:s,onDataPointClick:l,onLegendClick:d,onClick:c,style:p,className:h,slot:f,ChartPlaceholder:g,children:P,...y}=t,b={legendPosition:"bottom",legendHorizontalAlign:"center",polarGridType:"circle",resizeDebounce:250,...t.chartConfig},{dimensions:j,measures:M}=Le(t.dimensions,t.measures,bt,vt),Y=ke(M),E=j[0],X=je(E?.formatter),me=E?.accessor,fe=De(d),_=L.useRef(!1),ye=L.useCallback((v,C)=>{typeof c=="function"&&!_.current&&c(te(C,{payload:v?.activePayload?.[0]?.payload,activePayloads:v?.activePayload})),_.current&&(_.current=!1)},[c,_.current]),ge=L.useCallback((v,C)=>{C.value&&l&&(l(te({},{value:C.value,dataKey:C.dataKey,name:C.payload.label,dataIndex:C.index,payload:C.payload})),_.current=!0)},[l,_.current]),{chartConfig:wt,dimensions:At,measures:Ot,...be}=y;return w.jsx(Fe,{dataset:r,ref:e,loading:a,loadingDelay:n,Placeholder:g??Ke,style:p,className:h,slot:f,resizeDebounce:b.resizeDebounce,...be,children:w.jsxs(gt,{onClick:ye,data:r,margin:b.margin,accessibilityLayer:b.accessibilityLayer,className:typeof l=="function"?"has-click-handler":void 0,children:[w.jsx(ue,{gridType:b.polarGridType}),w.jsx(ce,{dataKey:me,tickFormatter:E?.formatter,tick:{fill:Oe.sapContent_LabelColor}}),w.jsx(de,{}),M.map((v,C)=>w.jsx(W,{activeDot:{onClick:ge},name:v.label??v.accessor,dataKey:v.accessor,stroke:v.color??`var(--sapChart_OrderedColor_${C%12+1})`,fill:v.color??`var(--sapChart_OrderedColor_${C%12+1})`,fillOpacity:v.opacity,label:w.jsx(_e,{config:v,chartType:"radar",position:"outside"}),isAnimationActive:!i},v.reactKey)),s?.active!==!1&&w.jsx(We,{cursor:xe,formatter:Y,contentStyle:Se,labelFormatter:X,...s}),!o&&w.jsx(Me,{verticalAlign:b.legendPosition,align:b.legendHorizontalAlign,onClick:fe,...b.legendConfig}),P]})})});x.displayName="RadarChart";try{x.displayName="RadarChart",x.__docgenInfo={description:"A radar or spider or web chart is a two-dimensional chart type designed to plot one or more series of values over multiple quantitative variables.",displayName:"RadarChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties*
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs`,name:"dimensions",required:!0,type:{name:"IChartDimension[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one radar in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this radar should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this radar.\n- `DataLabel`: a custom component to be used for the data label\n- `opacity`: radar opacity, defaults to `0.5`",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of objects that contains all the measures and dimensions.\n\n__Note:__ The values for measure data points must be of type `number`.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n- `accessibilityLayer`: Experimental property to improve accessibility. Not supported by all charts and configurations!\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; legendConfig?: Omit<...>; accessibilityLayer?: boolean; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to override internally used tooltip props, so please use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}try{x.displayName="RadarChart",x.__docgenInfo={description:"A radar or spider or web chart is a two-dimensional chart type designed to plot one or more series of values over multiple quantitative variables.",displayName:"RadarChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties*
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs`,name:"dimensions",required:!0,type:{name:"IChartDimension[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one radar in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this radar should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this radar.\n- `DataLabel`: a custom component to be used for the data label\n- `opacity`: radar opacity, defaults to `0.5`",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of objects that contains all the measures and dimensions.\n\n__Note:__ The values for measure data points must be of type `number`.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n- `accessibilityLayer`: Experimental property to improve accessibility. Not supported by all charts and configurations!\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; legendConfig?: Omit<...>; accessibilityLayer?: boolean; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to override internally used tooltip props, so please use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}const Ct={title:"RadarChart",component:x,args:{dimensions:[{accessor:"name",formatter:t=>`${t} 2019`}],measures:[{accessor:"users",label:"Users",formatter:t=>t.toLocaleString()},{accessor:"sessions",label:"Active Sessions",formatter:t=>`${t} sessions`,hideDataLabel:!0},{accessor:"volume",label:"Vol."}],dataset:ve},argTypes:{dataset:{control:{disable:!0}}}},k={},R={args:{dimensions:[{accessor:"name"}],measures:[{accessor:"users",color:"red"}],dataset:Ce}},T={args:{dimensions:[{accessor:"name"}],measures:[{accessor:"users"},{accessor:"sessions"},{accessor:"volume"}]}},N={args:{dimensions:[{accessor:"name",formatter:t=>t.slice(0,3)}],measures:[{accessor:"users",formatter:t=>`${t/10}`,label:"number of users"},{accessor:"sessions"},{accessor:"volume"}],chartConfig:{polarGridType:"polygon"}}},q={args:{dataset:[]}},I={args:Pe},V={args:we};k.parameters={...k.parameters,docs:{...k.parameters?.docs,source:{originalSource:"{}",...k.parameters?.docs?.source}}};R.parameters={...R.parameters,docs:{...R.parameters?.docs,source:{originalSource:`{
  args: {
    dimensions: [{
      accessor: 'name'
    }],
    measures: [{
      accessor: 'users',
      color: 'red'
    }],
    dataset: simpleDataSet
  }
}`,...R.parameters?.docs?.source}}};T.parameters={...T.parameters,docs:{...T.parameters?.docs,source:{originalSource:`{
  args: {
    dimensions: [{
      accessor: 'name'
    }],
    measures: [{
      accessor: 'users'
    }, {
      accessor: 'sessions'
    }, {
      accessor: 'volume'
    }]
  }
}`,...T.parameters?.docs?.source}}};N.parameters={...N.parameters,docs:{...N.parameters?.docs,source:{originalSource:`{
  args: {
    dimensions: [{
      accessor: 'name',
      formatter: element => element.slice(0, 3)
    }],
    measures: [{
      accessor: 'users',
      formatter: element => \`\${element / 10}\`,
      label: 'number of users'
    }, {
      accessor: 'sessions'
    }, {
      accessor: 'volume'
    }],
    chartConfig: {
      polarGridType: 'polygon'
    }
  }
}`,...N.parameters?.docs?.source}}};q.parameters={...q.parameters,docs:{...q.parameters?.docs,source:{originalSource:`{
  args: {
    dataset: []
  }
}`,...q.parameters?.docs?.source}}};I.parameters={...I.parameters,docs:{...I.parameters?.docs,source:{originalSource:`{
  args: tooltipConfig
}`,...I.parameters?.docs?.source}}};V.parameters={...V.parameters,docs:{...V.parameters?.docs,source:{originalSource:`{
  args: legendConfig
}`,...V.parameters?.docs?.source}}};const Pt=["Default","WithCustomColor","WithDataLabels","Polygon","LoadingPlaceholder","WithCustomTooltipConfig","WithCustomLegendConfig"],Rt=Object.freeze(Object.defineProperty({__proto__:null,Default:k,LoadingPlaceholder:q,Polygon:N,WithCustomColor:R,WithCustomLegendConfig:V,WithCustomTooltipConfig:I,WithDataLabels:T,__namedExportsOrder:Pt,default:Ct},Symbol.toStringTag,{value:"Module"}));export{Rt as C,k as D,q as L,N as P,R as W,T as a,I as b,V as c};
