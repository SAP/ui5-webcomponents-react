import{f as ge,t as be,l as Ce}from"./DemoProps-DZtJgWZK.js";import{j as e,r as D,ap as xe,o as U}from"./iframe-BxEu-xci.js";import{T as Y}from"./ThemingParameters-pyhX3s39.js";import{u as ve,a as we,C as ke,b as R,c as W,Y as T,X as N}from"./YAxisTicks-D3DUxG1K.js";import{u as _e,C as Ae}from"./ChartDataLabel-B4gxgNc2.js";import{u as je,t as Ve,a as Le,b as qe,c as Pe,e as G}from"./staticProps-BxPvVnNT.js";import{u as Se}from"./useLongestYAxisLabel-DvxVkyFT.js";import{u as ze}from"./useOnClickInternal-hkxJOnU5.js";import{u as Ie,a as De,r as Te,b as X}from"./useTooltipFormatter-tYphE1W4.js";import{m as Ne,R as Ye,T as Be,n as Oe,B as Re,o as We,p as Ee}from"./ChartContainer-DWgogM34.js";import{C as Ke}from"./react-content-loader.es-DV85UdMK.js";import{C as Fe}from"./ComposedChart-BaFH41hc.js";import{u as Me}from"./useIsRTL-BpqbY7M4.js";const V=o=>{const{x:u,y:d,width:h,height:p,index:f,fill:q,strokeWidth:c,layout:P}=o,S={x1:c?u+(h-c)/2-1:u-3,x2:c?u+c+(h-c)/2:u+h+3},b={y1:c?d+(p-c)/2-1:d-3,y2:c?d+c+(p-c)/2:d+p+3};return P==="horizontal"?e.jsx("line",{x1:S.x1,x2:S.x2,y1:d,y2:d,stroke:q,strokeWidth:3},`target-${f}`):e.jsx("line",{x1:u+h,x2:u+h,y1:b.y1,y2:b.y2,stroke:q,strokeWidth:3},`target-${f}`)};try{V.displayName="ComparisonLine",V.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}try{V.displayName="ComparisonLine",V.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}const $e=e.jsxs(e.Fragment,{children:[e.jsx("rect",{x:"20",y:"20",width:"85",height:"15"}),e.jsx("rect",{x:"20",y:"40",width:"117",height:"15"}),e.jsx("rect",{x:"20",y:"60",width:"67",height:"15"}),e.jsx("rect",{x:"20",y:"80",width:"75",height:"15"}),e.jsx("rect",{x:"20",y:"100",width:"125",height:"15"}),e.jsx("rect",{x:"20",y:"120",width:"60",height:"15"}),e.jsx("rect",{x:"115",y:"17.5",width:"2",height:"20"}),e.jsx("rect",{x:"150",y:"37.5",width:"2",height:"20"}),e.jsx("rect",{x:"90",y:"57.5",width:"2",height:"20"}),e.jsx("rect",{x:"100",y:"77.5",width:"2",height:"20"}),e.jsx("rect",{x:"120",y:"97.5",width:"2",height:"20"}),e.jsx("rect",{x:"87",y:"117.5",width:"2",height:"20"})]}),He=e.jsxs(e.Fragment,{children:[e.jsx("rect",{x:"20",y:"50",width:"15",height:"85"}),e.jsx("rect",{x:"40",y:"70",width:"15",height:"65"}),e.jsx("rect",{x:"60",y:"68",width:"15",height:"67"}),e.jsx("rect",{x:"80",y:"60",width:"15",height:"75"}),e.jsx("rect",{x:"100",y:"10",width:"15",height:"125"}),e.jsx("rect",{x:"120",y:"75",width:"15",height:"60"}),e.jsx("rect",{x:"17.5",y:"35",width:"20",height:"2"}),e.jsx("rect",{x:"37.5",y:"62",width:"20",height:"2"}),e.jsx("rect",{x:"57.5",y:"56",width:"20",height:"2"}),e.jsx("rect",{x:"77.5",y:"37",width:"20",height:"2"}),e.jsx("rect",{x:"97.5",y:"45",width:"20",height:"2"}),e.jsx("rect",{x:"117.5",y:"70",width:"20",height:"2"})]}),L=({layout:o,measures:u})=>{const d=new Set(u.map(h=>h.type));return e.jsxs(Ke,{viewBox:"0 0 165 145",preserveAspectRatio:"xMidYMid meet",width:"100%",height:"100%",speed:2,backgroundColor:Y.sapContent_ImagePlaceholderBackground,foregroundColor:Y.sapContent_ImagePlaceholderForegroundColor,backgroundOpacity:Y.sapContent_DisabledOpacity,children:[o==="vertical"&&e.jsx("rect",{x:"20",y:"10",width:"1",height:"135"}),o==="horizontal"&&e.jsx("rect",{x:"10",y:"135",width:"135",height:"1"}),o==="vertical"&&d.has("primary")&&$e,o==="horizontal"&&d.has("primary")&&He]})};try{L.displayName="BulletChartPlaceholder",L.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}try{L.displayName="BulletChartPlaceholder",L.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}const Ue={formatter:G},Xe={formatter:G,opacity:1},g=D.forwardRef((o,u)=>{const{loading:d,loadingDelay:h,dataset:p,onDataPointClick:f,noLegend:q,noAnimation:c,tooltipConfig:P,onLegendClick:S,onClick:b,layout:i="horizontal",style:J,className:Q,slot:Z,syncId:ee,ChartPlaceholder:te,children:ae,...oe}=o,[ne,E]=xe(u),a={yAxisVisible:!1,xAxisVisible:!0,gridStroke:Y.sapList_BorderColor,gridHorizontal:!0,gridVertical:!1,legendPosition:"bottom",legendHorizontalAlign:"left",zoomingTool:!1,resizeDebounce:250,yAxisConfig:{},xAxisConfig:{},secondYAxisConfig:{},secondXAxisConfig:{},...o.chartConfig},{referenceLine:l}=a,{dimensions:B,measures:z}=Ie(o.dimensions,o.measures,Ue,Xe),C=D.useMemo(()=>z.sort(t=>t.type==="comparison"?1:t.type==="primary"?-1:0),[z]),re=De(C),O=B[0],{primaryMeasure:K,secondaryMeasure:F}=Te(C,a?.secondYAxis?.dataKey),ie=_e(O?.formatter),se=C.map(({accessor:t})=>t),y=a.secondYAxis?se.findIndex(t=>t===a.secondYAxis?.dataKey):0,M=D.useCallback((t,s,n)=>{if(typeof f=="function")if(t.name){const r=t?.value?.length;f(U(n??s,{value:r?t.value[1]-t.value[0]:t.value,dataIndex:t.index??s,dataKey:r?Object.keys(t).filter(m=>t.value.length?t[m]===t.value[1]-t.value[0]:t[m]===t.value&&m!=="value")[0]:t.dataKey??Object.keys(t).find(m=>t[m]===t.value&&m!=="value"),payload:t.payload}))}else f(U({},{value:s.value,dataKey:s.dataKey,dataIndex:s.index,payload:s.payload}))},[f]),le=je(S),ce=ze(b),I=p?.length>30,de=O?.accessor,[$,ue]=Se(p,i==="vertical"?B:C,a.legendPosition),he=ve(a.margin,a.zoomingTool),pe=we(E,i==="vertical"?1:o.dimensions.length),H={axisLine:a.yAxisVisible,tickLine:Ve,interval:0},x=Me(E),me=D.useCallback(()=>e.jsx(L,{layout:i,measures:z}),[i,z]),{chartConfig:Qe,dimensions:Ze,measures:et,...fe}=oe;return e.jsx(Ne,{ref:ne,loading:d,loadingDelay:h,dataset:p,Placeholder:te??me,style:J,className:Q,slot:Z,resizeDebounce:a.resizeDebounce,...fe,children:e.jsxs(Fe,{syncId:ee,onClick:ce,stackOffset:"sign",margin:he,data:p,layout:i,accessibilityLayer:a.accessibilityLayer,className:typeof f=="function"||typeof b=="function"?"has-click-handler":void 0,children:[e.jsx(ke,{vertical:a.gridVertical,horizontal:a.gridHorizontal,stroke:a.gridStroke}),a.xAxisVisible&&B.map((t,s)=>{let n;const r={dataKey:t.accessor,interval:t?.interval??(I?"preserveStartEnd":0),tickLine:s<1,axisLine:s<1,allowDuplicatedCategory:s===0};return i==="vertical"?(r.type="category",r.tick=e.jsx(R,{formatter:t?.formatter}),r.yAxisId=s,r.width=$,n=T,r.orientation=x?"right":"left",r.interval="preserveStartEnd",r.minTickGap=I?void 0:-10):(r.dataKey=t.accessor,r.tick=e.jsx(W,{formatter:t?.formatter}),r.xAxisId=s,r.height=pe[s],n=N,r.reversed=x),e.jsx(n,{...r},t.reactKey)}),i==="horizontal"&&e.jsx(T,{...H,yAxisId:"primary",width:$,orientation:x?"right":"left",tick:e.jsx(R,{formatter:K?.formatter}),...a.yAxisConfig}),i==="vertical"&&e.jsx(N,{...H,reversed:x,xAxisId:"primary",type:"number",tick:e.jsx(W,{formatter:K?.formatter}),...a.xAxisConfig}),a.secondYAxis?.dataKey&&i==="horizontal"&&e.jsx(T,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${y%12+1})`},tick:e.jsx(R,{formatter:F?.formatter,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${y%12+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${y%12+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:x?"left":"right",interval:0,yAxisId:"secondary",...a.secondYAxisConfig}),a.secondYAxis?.dataKey&&i==="vertical"&&e.jsx(N,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${y%12+1})`},tick:e.jsx(W,{formatter:F?.formatter,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${y%12+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${y%12+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:"top",interval:0,xAxisId:"secondary",type:"number",...a.secondXAxisConfig}),i==="horizontal"&&e.jsx(N,{xAxisId:"comparisonXAxis",hide:!0}),i==="vertical"&&e.jsx(T,{yAxisId:"comparisonYAxis",type:"category",hide:!0}),l&&e.jsx(Ye,{...l,stroke:l?.color??l?.stroke,y:l?.value?i==="horizontal"?l?.value:void 0:l?.y,x:l?.value?i==="vertical"?l?.value:void 0:l?.x,yAxisId:l?.yAxisId??i==="horizontal"?"primary":void 0,xAxisId:l?.xAxisId??i==="vertical"?"primary":void 0,label:l?.label}),P?.active!==!1&&e.jsx(Be,{cursor:qe,formatter:re,contentStyle:Le,labelFormatter:ie,...P}),!q&&e.jsx(Oe,{verticalAlign:a.legendPosition,align:a.legendHorizontalAlign,onClick:le,wrapperStyle:ue,...a.legendConfig}),C?.map((t,s)=>{const n={isAnimationActive:!c};let r="top";switch(t.type){case"primary":case"additional":n.fillOpacity=t.opacity,n.strokeOpacity=t.opacity,n.barSize=t.width,n.onClick=M,n.stackId="A",n.labelPosition=t.stackId?"insideTop":"top",i==="vertical"?r="insideRight":r="insideTop";break;case"comparison":n.onClick=M,n.fill=t.color??"black",n.strokeWidth=t.width,n.shape=e.jsx(V,{layout:i}),n.strokeOpacity=t.opacity,n.label=!1,n.xAxisId="comparisonXAxis",n.yAxisId="comparisonYAxis",n.dot=!I;break}return i==="vertical"?n.xAxisId=a.secondYAxis?.dataKey===t.accessor?"secondary":"primary":n.yAxisId=a.secondYAxis?.dataKey===t.accessor?"secondary":"primary",e.jsx(Re,{name:t.label??t.accessor,label:I?null:e.jsx(Ae,{config:t,chartType:"bar",position:r}),stroke:t.color??`var(--sapChart_OrderedColor_${s%12+1})`,fill:t.color??`var(--sapChart_OrderedColor_${s%12+1})`,type:"monotone",dataKey:t.accessor,...n,children:t.type!=="comparison"&&p.map((m,ye)=>e.jsx(We,{fill:X(t,m,s),stroke:X(t,m,s)},ye))},t.reactKey)}),!!a.zoomingTool&&e.jsx(Ee,{dataKey:de,tickFormatter:O?.formatter,...Pe,...typeof a.zoomingTool=="object"?a.zoomingTool:{}}),ae]})})});g.displayName="BulletChart";try{g.displayName="BulletChart",g.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of objects that contains all the measures and dimensions.\n\n__Note:__ The values for measure data points must be of type `number`.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n- `accessibilityLayer`: Experimental property to improve accessibility. Not supported by all charts and configurations!\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; legendConfig?: Omit<...>; accessibilityLayer?: boolean; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to override internally used tooltip props, so please use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}try{g.displayName="BulletChart",g.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of objects that contains all the measures and dimensions.\n\n__Note:__ The values for measure data points must be of type `number`.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n- `accessibilityLayer`: Experimental property to improve accessibility. Not supported by all charts and configurations!\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; legendConfig?: Omit<...>; accessibilityLayer?: boolean; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to override internally used tooltip props, so please use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}const Ge={title:"BulletChart",component:g,argTypes:{dataset:{control:{disable:!0}},children:{control:{disable:!0}}},args:{dataset:ge,layout:"horizontal",dimensions:[{accessor:"name",formatter:o=>`${o} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional"},{accessor:"volume",label:"Volume",formatter:o=>o.toLocaleString(),type:"comparison"}]}},v={},w={args:{layout:"vertical",dimensions:[{accessor:"name",formatter:o=>o.slice(0,3)}],measures:[{accessor:"users",formatter:o=>`${o/10}`,type:"additional",label:"Number of users",width:10},{accessor:"sessions",type:"primary",width:10,opacity:.5},{accessor:"volume",type:"comparison",width:10}]}},k={args:{dimensions:[{accessor:"name",formatter:o=>`${o} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional",highlightColor:o=>{if(o>100)return"red"}},{accessor:"volume",label:"Volume",formatter:o=>o.toLocaleString(),type:"comparison"}]}},_={args:{dataset:[]}},A={args:be},j={args:Ce};v.parameters={...v.parameters,docs:{...v.parameters?.docs,source:{originalSource:"{}",...v.parameters?.docs?.source}}};w.parameters={...w.parameters,docs:{...w.parameters?.docs,source:{originalSource:`{
  args: {
    layout: 'vertical',
    dimensions: [{
      accessor: 'name',
      formatter: element => element.slice(0, 3)
    }],
    measures: [{
      accessor: 'users',
      formatter: element => \`\${element / 10}\`,
      type: 'additional',
      label: 'Number of users',
      width: 10
    }, {
      accessor: 'sessions',
      type: 'primary',
      width: 10,
      opacity: 0.5
    }, {
      accessor: 'volume',
      type: 'comparison',
      width: 10
    }]
  }
}`,...w.parameters?.docs?.source}}};k.parameters={...k.parameters,docs:{...k.parameters?.docs,source:{originalSource:`{
  args: {
    dimensions: [{
      accessor: 'name',
      formatter: d => \`\${d} 2019\`,
      interval: 0
    }],
    measures: [{
      accessor: 'sessions',
      label: 'Active Sessions',
      type: 'primary'
    }, {
      accessor: 'users',
      label: 'Users',
      type: 'additional',
      highlightColor: value => {
        if (value > 100) {
          return 'red';
        }
      }
    }, {
      accessor: 'volume',
      label: 'Volume',
      formatter: val => val.toLocaleString(),
      type: 'comparison'
    }]
  }
}`,...k.parameters?.docs?.source}}};_.parameters={..._.parameters,docs:{..._.parameters?.docs,source:{originalSource:`{
  args: {
    dataset: []
  }
}`,..._.parameters?.docs?.source}}};A.parameters={...A.parameters,docs:{...A.parameters?.docs,source:{originalSource:`{
  args: tooltipConfig
}`,...A.parameters?.docs?.source}}};j.parameters={...j.parameters,docs:{...j.parameters?.docs,source:{originalSource:`{
  args: legendConfig
}`,...j.parameters?.docs?.source}}};const Je=["Default","WithCustomSize","WithHighlightedMeasures","LoadingPlaceholder","WithCustomTooltipConfig","WithCustomLegendConfig"],mt=Object.freeze(Object.defineProperty({__proto__:null,Default:v,LoadingPlaceholder:_,WithCustomLegendConfig:j,WithCustomSize:w,WithCustomTooltipConfig:A,WithHighlightedMeasures:k,__namedExportsOrder:Je,default:Ge},Symbol.toStringTag,{value:"Module"}));export{mt as C,v as D,_ as L,w as W,k as a,A as b,j as c};
