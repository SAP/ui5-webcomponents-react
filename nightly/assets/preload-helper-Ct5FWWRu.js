const p="modulepreload",y=function(u,i){return new URL(u,i).href},E={},P=function(i,a,f){let d=Promise.resolve();if(a&&a.length>0){let s=function(e){return Promise.all(e.map(r=>Promise.resolve(r).then(o=>({status:"fulfilled",value:o}),o=>({status:"rejected",reason:o}))))};const t=document.getElementsByTagName("link"),m=document.querySelector("meta[property=csp-nonce]"),v=m?.nonce||m?.getAttribute("nonce");d=s(a.map(e=>{if(e=y(e,f),e in E)return;E[e]=!0;const r=e.endsWith(".css"),o=r?'[rel="stylesheet"]':"";if(!!f)for(let l=t.length-1;l>=0;l--){const c=t[l];if(c.href===e&&(!r||c.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${o}`))return;const n=document.createElement("link");if(n.rel=r?"stylesheet":p,r||(n.as="script"),n.crossOrigin="",n.href=e,v&&n.setAttribute("nonce",v),document.head.appendChild(n),r)return new Promise((l,c)=>{n.addEventListener("load",l),n.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${e}`)))})}))}function h(s){const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=s,window.dispatchEvent(t),!t.defaultPrevented)throw s}return d.then(s=>{for(const t of s||[])t.status==="rejected"&&h(t.reason);return i().catch(h)})};export{P as _};
