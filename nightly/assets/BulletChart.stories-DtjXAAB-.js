import{f as Re,t as We,l as Ee}from"./DemoProps-CwaW7u4O.js";import{j as t,r as B,ap as Ke,o as Z}from"./iframe-D5q1aMGI.js";import{T as W}from"./ThemingParameters-pyhX3s39.js";import{u as Fe,a as $e,C as He,b as K,c as F,Y as O,X as R}from"./YAxisTicks-raZEqVHW.js";import{u as Ue,C as Xe}from"./ChartDataLabel-d79T7WrX.js";import{u as Me,t as Ge,a as Je,b as Qe,c as Ze,e as Ce}from"./staticProps-B0XyMZ1O.js";import{u as et}from"./useLongestYAxisLabel-BF-gxYNo.js";import{u as tt}from"./useOnClickInternal-DE_neBEa.js";import{u as at,a as ot,r as nt,b as ee}from"./useTooltipFormatter-Csq5GQNX.js";import{m as rt,R as it,T as st,n as lt,B as ct,o as dt,p as ut}from"./ChartContainer-DYcXZqZd.js";import{C as ht}from"./react-content-loader.es-CXOrnAQ_.js";import{C as pt}from"./ComposedChart-DwYE71IV.js";import{u as mt}from"./useIsRTL-D1kDzTdS.js";const I=n=>{const{x:h,y:d,width:p,height:u,index:y,fill:D,strokeWidth:c,layout:b}=n,L={x1:c?h+(p-c)/2-1:h-3,x2:c?h+c+(p-c)/2:h+p+3},k={y1:c?d+(u-c)/2-1:d-3,y2:c?d+c+(u-c)/2:d+u+3};return b==="horizontal"?t.jsx("line",{x1:L.x1,x2:L.x2,y1:d,y2:d,stroke:D,strokeWidth:3},`target-${y}`):t.jsx("line",{x1:h+p,x2:h+p,y1:k.y1,y2:k.y2,stroke:D,strokeWidth:3},`target-${y}`)};try{I.displayName="ComparisonLine",I.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}try{I.displayName="ComparisonLine",I.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}const ft=t.jsxs(t.Fragment,{children:[t.jsx("rect",{x:"20",y:"20",width:"85",height:"15"}),t.jsx("rect",{x:"20",y:"40",width:"117",height:"15"}),t.jsx("rect",{x:"20",y:"60",width:"67",height:"15"}),t.jsx("rect",{x:"20",y:"80",width:"75",height:"15"}),t.jsx("rect",{x:"20",y:"100",width:"125",height:"15"}),t.jsx("rect",{x:"20",y:"120",width:"60",height:"15"}),t.jsx("rect",{x:"115",y:"17.5",width:"2",height:"20"}),t.jsx("rect",{x:"150",y:"37.5",width:"2",height:"20"}),t.jsx("rect",{x:"90",y:"57.5",width:"2",height:"20"}),t.jsx("rect",{x:"100",y:"77.5",width:"2",height:"20"}),t.jsx("rect",{x:"120",y:"97.5",width:"2",height:"20"}),t.jsx("rect",{x:"87",y:"117.5",width:"2",height:"20"})]}),yt=t.jsxs(t.Fragment,{children:[t.jsx("rect",{x:"20",y:"50",width:"15",height:"85"}),t.jsx("rect",{x:"40",y:"70",width:"15",height:"65"}),t.jsx("rect",{x:"60",y:"68",width:"15",height:"67"}),t.jsx("rect",{x:"80",y:"60",width:"15",height:"75"}),t.jsx("rect",{x:"100",y:"10",width:"15",height:"125"}),t.jsx("rect",{x:"120",y:"75",width:"15",height:"60"}),t.jsx("rect",{x:"17.5",y:"35",width:"20",height:"2"}),t.jsx("rect",{x:"37.5",y:"62",width:"20",height:"2"}),t.jsx("rect",{x:"57.5",y:"56",width:"20",height:"2"}),t.jsx("rect",{x:"77.5",y:"37",width:"20",height:"2"}),t.jsx("rect",{x:"97.5",y:"45",width:"20",height:"2"}),t.jsx("rect",{x:"117.5",y:"70",width:"20",height:"2"})]}),T=({layout:n,measures:h})=>{const d=new Set(h.map(p=>p.type));return t.jsxs(ht,{viewBox:"0 0 165 145",preserveAspectRatio:"xMidYMid meet",width:"100%",height:"100%",speed:2,backgroundColor:W.sapContent_ImagePlaceholderBackground,foregroundColor:W.sapContent_ImagePlaceholderForegroundColor,backgroundOpacity:W.sapContent_DisabledOpacity,children:[n==="vertical"&&t.jsx("rect",{x:"20",y:"10",width:"1",height:"135"}),n==="horizontal"&&t.jsx("rect",{x:"10",y:"135",width:"135",height:"1"}),n==="vertical"&&d.has("primary")&&ft,n==="horizontal"&&d.has("primary")&&yt]})};try{T.displayName="BulletChartPlaceholder",T.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}try{T.displayName="BulletChartPlaceholder",T.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}const gt={formatter:Ce},bt={formatter:Ce,opacity:1},w=B.forwardRef((n,h)=>{var M,G,J;const{loading:d,loadingDelay:p,dataset:u,onDataPointClick:y,noLegend:D,noAnimation:c,tooltipConfig:b,onLegendClick:L,onClick:k,layout:l="horizontal",style:xe,className:ve,slot:we,syncId:ke,ChartPlaceholder:_e,children:Ae,...je}=n,[Ve,$]=Ke(h),a={yAxisVisible:!1,xAxisVisible:!0,gridStroke:W.sapList_BorderColor,gridHorizontal:!0,gridVertical:!1,legendPosition:"bottom",legendHorizontalAlign:"left",zoomingTool:!1,resizeDebounce:250,yAxisConfig:{},xAxisConfig:{},secondYAxisConfig:{},secondXAxisConfig:{},...n.chartConfig},{referenceLine:o}=a,{dimensions:E,measures:N}=at(n.dimensions,n.measures,gt,bt),g=B.useMemo(()=>N.sort(e=>e.type==="comparison"?1:e.type==="primary"?-1:0),[N]),qe=ot(g),m=E[0],{primaryMeasure:C,secondaryMeasure:x}=nt(g,(M=a==null?void 0:a.secondYAxis)==null?void 0:M.dataKey),Pe=Ue(m==null?void 0:m.formatter),Se=g.map(({accessor:e})=>e),v=a.secondYAxis?Se.findIndex(e=>{var i;return e===((i=a.secondYAxis)==null?void 0:i.dataKey)}):0,H=B.useCallback((e,i,r)=>{var s;if(typeof y=="function")if(e.name){const A=(s=e==null?void 0:e.value)==null?void 0:s.length;y(Z(r??i,{value:A?e.value[1]-e.value[0]:e.value,dataIndex:e.index??i,dataKey:A?Object.keys(e).filter(f=>e.value.length?e[f]===e.value[1]-e.value[0]:e[f]===e.value&&f!=="value")[0]:e.dataKey??Object.keys(e).find(f=>e[f]===e.value&&f!=="value"),payload:e.payload}))}else y(Z({},{value:i.value,dataKey:i.dataKey,dataIndex:i.index,payload:i.payload}))},[y]),ze=Me(L),Ie=tt(k),Y=(u==null?void 0:u.length)>30,Te=m==null?void 0:m.accessor,[U,De]=et(u,l==="vertical"?E:g,a.legendPosition),Le=Fe(a.margin,a.zoomingTool),Ne=$e($,l==="vertical"?1:n.dimensions.length),X={axisLine:a.yAxisVisible,tickLine:Ge,interval:0},_=mt($),Ye=B.useCallback(()=>t.jsx(T,{layout:l,measures:N}),[l,N]),{chartConfig:vt,dimensions:wt,measures:kt,...Be}=je;return t.jsx(rt,{ref:Ve,loading:d,loadingDelay:p,dataset:u,Placeholder:_e??Ye,style:xe,className:ve,slot:we,resizeDebounce:a.resizeDebounce,...Be,children:t.jsxs(pt,{syncId:ke,onClick:Ie,stackOffset:"sign",margin:Le,data:u,layout:l,accessibilityLayer:a.accessibilityLayer,className:typeof y=="function"||typeof k=="function"?"has-click-handler":void 0,children:[t.jsx(He,{vertical:a.gridVertical,horizontal:a.gridHorizontal,stroke:a.gridStroke}),a.xAxisVisible&&E.map((e,i)=>{let r;const s={dataKey:e.accessor,interval:(e==null?void 0:e.interval)??(Y?"preserveStartEnd":0),tickLine:i<1,axisLine:i<1,allowDuplicatedCategory:i===0};return l==="vertical"?(s.type="category",s.tick=t.jsx(K,{formatter:e==null?void 0:e.formatter}),s.yAxisId=i,s.width=U,r=O,s.orientation=_?"right":"left",s.interval="preserveStartEnd",s.minTickGap=Y?void 0:-10):(s.dataKey=e.accessor,s.tick=t.jsx(F,{formatter:e==null?void 0:e.formatter}),s.xAxisId=i,s.height=Ne[i],r=R,s.reversed=_),t.jsx(r,{...s},e.reactKey)}),l==="horizontal"&&t.jsx(O,{...X,yAxisId:"primary",width:U,orientation:_?"right":"left",tick:t.jsx(K,{formatter:C==null?void 0:C.formatter}),...a.yAxisConfig}),l==="vertical"&&t.jsx(R,{...X,reversed:_,xAxisId:"primary",type:"number",tick:t.jsx(F,{formatter:C==null?void 0:C.formatter}),...a.xAxisConfig}),((G=a.secondYAxis)==null?void 0:G.dataKey)&&l==="horizontal"&&t.jsx(O,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${v%12+1})`},tick:t.jsx(K,{formatter:x==null?void 0:x.formatter,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${v%12+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${v%12+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:_?"left":"right",interval:0,yAxisId:"secondary",...a.secondYAxisConfig}),((J=a.secondYAxis)==null?void 0:J.dataKey)&&l==="vertical"&&t.jsx(R,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${v%12+1})`},tick:t.jsx(F,{formatter:x==null?void 0:x.formatter,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${v%12+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${v%12+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:"top",interval:0,xAxisId:"secondary",type:"number",...a.secondXAxisConfig}),l==="horizontal"&&t.jsx(R,{xAxisId:"comparisonXAxis",hide:!0}),l==="vertical"&&t.jsx(O,{yAxisId:"comparisonYAxis",type:"category",hide:!0}),o&&t.jsx(it,{...o,stroke:(o==null?void 0:o.color)??(o==null?void 0:o.stroke),y:o!=null&&o.value?l==="horizontal"?o==null?void 0:o.value:void 0:o==null?void 0:o.y,x:o!=null&&o.value?l==="vertical"?o==null?void 0:o.value:void 0:o==null?void 0:o.x,yAxisId:(o==null?void 0:o.yAxisId)??l==="horizontal"?"primary":void 0,xAxisId:(o==null?void 0:o.xAxisId)??l==="vertical"?"primary":void 0,label:o==null?void 0:o.label}),(b==null?void 0:b.active)!==!1&&t.jsx(st,{cursor:Qe,formatter:qe,contentStyle:Je,labelFormatter:Pe,...b}),!D&&t.jsx(lt,{verticalAlign:a.legendPosition,align:a.legendHorizontalAlign,onClick:ze,wrapperStyle:De,...a.legendConfig}),g==null?void 0:g.map((e,i)=>{var A,f;const r={isAnimationActive:!c};let s="top";switch(e.type){case"primary":case"additional":r.fillOpacity=e.opacity,r.strokeOpacity=e.opacity,r.barSize=e.width,r.onClick=H,r.stackId="A",r.labelPosition=e.stackId?"insideTop":"top",l==="vertical"?s="insideRight":s="insideTop";break;case"comparison":r.onClick=H,r.fill=e.color??"black",r.strokeWidth=e.width,r.shape=t.jsx(I,{layout:l}),r.strokeOpacity=e.opacity,r.label=!1,r.xAxisId="comparisonXAxis",r.yAxisId="comparisonYAxis",r.dot=!Y;break}return l==="vertical"?r.xAxisId=((A=a.secondYAxis)==null?void 0:A.dataKey)===e.accessor?"secondary":"primary":r.yAxisId=((f=a.secondYAxis)==null?void 0:f.dataKey)===e.accessor?"secondary":"primary",t.jsx(ct,{name:e.label??e.accessor,label:Y?null:t.jsx(Xe,{config:e,chartType:"bar",position:s}),stroke:e.color??`var(--sapChart_OrderedColor_${i%12+1})`,fill:e.color??`var(--sapChart_OrderedColor_${i%12+1})`,type:"monotone",dataKey:e.accessor,...r,children:e.type!=="comparison"&&u.map((Q,Oe)=>t.jsx(dt,{fill:ee(e,Q,i),stroke:ee(e,Q,i)},Oe))},e.reactKey)}),!!a.zoomingTool&&t.jsx(ut,{dataKey:Te,tickFormatter:m==null?void 0:m.formatter,...Ze,...typeof a.zoomingTool=="object"?a.zoomingTool:{}}),Ae]})})});w.displayName="BulletChart";try{w.displayName="BulletChart",w.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of objects that contains all the measures and dimensions.\n\n__Note:__ The values for measure data points must be of type `number`.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n- `accessibilityLayer`: Experimental property to improve accessibility. Not supported by all charts and configurations!\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; legendConfig?: Omit<...>; accessibilityLayer?: boolean; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to override internally used tooltip props, so please use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}try{w.displayName="BulletChart",w.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of objects that contains all the measures and dimensions.\n\n__Note:__ The values for measure data points must be of type `number`.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n- `accessibilityLayer`: Experimental property to improve accessibility. Not supported by all charts and configurations!\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; legendConfig?: Omit<...>; accessibilityLayer?: boolean; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to override internally used tooltip props, so please use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}const Ct={title:"BulletChart",component:w,argTypes:{dataset:{control:{disable:!0}},children:{control:{disable:!0}}},args:{dataset:Re,layout:"horizontal",dimensions:[{accessor:"name",formatter:n=>`${n} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional"},{accessor:"volume",label:"Volume",formatter:n=>n.toLocaleString(),type:"comparison"}]}},j={},V={args:{layout:"vertical",dimensions:[{accessor:"name",formatter:n=>n.slice(0,3)}],measures:[{accessor:"users",formatter:n=>`${n/10}`,type:"additional",label:"Number of users",width:10},{accessor:"sessions",type:"primary",width:10,opacity:.5},{accessor:"volume",type:"comparison",width:10}]}},q={args:{dimensions:[{accessor:"name",formatter:n=>`${n} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional",highlightColor:n=>{if(n>100)return"red"}},{accessor:"volume",label:"Volume",formatter:n=>n.toLocaleString(),type:"comparison"}]}},P={args:{dataset:[]}},S={args:We},z={args:Ee};var te,ae,oe;j.parameters={...j.parameters,docs:{...(te=j.parameters)==null?void 0:te.docs,source:{originalSource:"{}",...(oe=(ae=j.parameters)==null?void 0:ae.docs)==null?void 0:oe.source}}};var ne,re,ie;V.parameters={...V.parameters,docs:{...(ne=V.parameters)==null?void 0:ne.docs,source:{originalSource:`{
  args: {
    layout: 'vertical',
    dimensions: [{
      accessor: 'name',
      formatter: element => element.slice(0, 3)
    }],
    measures: [{
      accessor: 'users',
      formatter: element => \`\${element / 10}\`,
      type: 'additional',
      label: 'Number of users',
      width: 10
    }, {
      accessor: 'sessions',
      type: 'primary',
      width: 10,
      opacity: 0.5
    }, {
      accessor: 'volume',
      type: 'comparison',
      width: 10
    }]
  }
}`,...(ie=(re=V.parameters)==null?void 0:re.docs)==null?void 0:ie.source}}};var se,le,ce;q.parameters={...q.parameters,docs:{...(se=q.parameters)==null?void 0:se.docs,source:{originalSource:`{
  args: {
    dimensions: [{
      accessor: 'name',
      formatter: d => \`\${d} 2019\`,
      interval: 0
    }],
    measures: [{
      accessor: 'sessions',
      label: 'Active Sessions',
      type: 'primary'
    }, {
      accessor: 'users',
      label: 'Users',
      type: 'additional',
      highlightColor: value => {
        if (value > 100) {
          return 'red';
        }
      }
    }, {
      accessor: 'volume',
      label: 'Volume',
      formatter: val => val.toLocaleString(),
      type: 'comparison'
    }]
  }
}`,...(ce=(le=q.parameters)==null?void 0:le.docs)==null?void 0:ce.source}}};var de,ue,he;P.parameters={...P.parameters,docs:{...(de=P.parameters)==null?void 0:de.docs,source:{originalSource:`{
  args: {
    dataset: []
  }
}`,...(he=(ue=P.parameters)==null?void 0:ue.docs)==null?void 0:he.source}}};var pe,me,fe;S.parameters={...S.parameters,docs:{...(pe=S.parameters)==null?void 0:pe.docs,source:{originalSource:`{
  args: tooltipConfig
}`,...(fe=(me=S.parameters)==null?void 0:me.docs)==null?void 0:fe.source}}};var ye,ge,be;z.parameters={...z.parameters,docs:{...(ye=z.parameters)==null?void 0:ye.docs,source:{originalSource:`{
  args: legendConfig
}`,...(be=(ge=z.parameters)==null?void 0:ge.docs)==null?void 0:be.source}}};const xt=["Default","WithCustomSize","WithHighlightedMeasures","LoadingPlaceholder","WithCustomTooltipConfig","WithCustomLegendConfig"],Yt=Object.freeze(Object.defineProperty({__proto__:null,Default:j,LoadingPlaceholder:P,WithCustomLegendConfig:z,WithCustomSize:V,WithCustomTooltipConfig:S,WithHighlightedMeasures:q,__namedExportsOrder:xt,default:Ct},Symbol.toStringTag,{value:"Module"}));export{Yt as C,j as D,P as L,V as W,q as a,S as b,z as c};
