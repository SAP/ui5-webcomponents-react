import{j as o}from"./jsx-runtime-D_zvdyIk.js";import{useMDXComponents as m}from"./index-B5Ip8tK9.js";import{I as p,F as e}from"./CommandsAndQueries-CYusQEqR.js";import{M as n,C as l}from"./index-DRHIgYYh.js";import"./index-CIMhrZAh.js";import"./index-CvHFfG2W.js";import"./TagDesign-Ga50IS6u.js";import"./index-U0ga5oGA.js";import"./index-B8m469-U.js";import"./Button-BhunxXU0.js";import"./jsx-runtime-gx_Zcjo3.js";import"./copy-1xAMALOS.js";import"./WrappingType-BBpR8qCJ.js";import"./Title-Bi6E7_f2.js";import{d as s}from"./AnalyticalTableHooks.stories-D222DY1l.js";import"./preview-DGaNhHdg.js";import"./iframe-B_cdSChh.js";import"./DocsRenderer-CFRXHY34-DHZ-BsvI.js";import"./react-18-SRpBHcoT.js";import"./index-BVR6w1bU.js";import"./Popover-inHmHWag.js";import"./slot-_4yKMUwC.js";import"./PopupsCommon.css-C6QW1NU3.js";import"./event-strict-DgQLNDEV.js";import"./FocusableElements-B0ox-u2n.js";import"./isElementHidden-B4HqmI2E.js";import"./AccessibilityTextsHelper-4hgGqLyb.js";import"./CustomElementsScope-CjZbIYTD.js";import"./Keys-B3oBAe0t.js";import"./getActiveElement-kltGt_DR.js";import"./ResizeHandler-DeuUg-iv.js";import"./MediaRange-Bnzt26Xb.js";import"./toLowercaseEnumValue-C_8o5td_.js";import"./parameters-bundle.css-Dkq9X0yL.js";import"./getEffectiveScrollbarStyle-C9nZ6DfS.js";import"./index-CvFb7rar.js";import"./clsx-B-dksMZM.js";import"./useStylesheet-DUe1LpVj.js";import"./index-DNdqOyXb.js";import"./Label-Xvb1prxJ.js";import"./i18n-CjR4HGlq.js";import"./i18n-defaults-B158X0Y5.js";import"./index-BWd6G_fU.js";import"./index-DY8ctAYr.js";import"./Link-CCYqxCbK.js";import"./Icon-CZw5gRks.js";import"./index-DMDy6m5O.js";import"./index-_2xpPfjR.js";import"./Text-CkerREnW.js";import"./willShowContent-CZcfsNXp.js";import"./addCustomCSSWithScoping-PCpHaHtG.js";import"./index-D9fhKjZm.js";import"./BusyIndicator-DjtkhCPk.js";import"./index-DkwX2oO3.js";import"./index-DWxMKmlL.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-qIXMnRwj.js";import"./index-BdS02loY.js";import"./I18nStore-XmjZR7rr.js";import"./index-CXQShRbs.js";import"./index-DrFu-skq.js";import"./decline-BwbUHmi7.js";import"./i18n-defaults-BJtDw6Mf.js";import"./information-Beb07qW6.js";import"./information-DPOcXyRn.js";import"./sys-enter-2-SJ-ADG9s.js";import"./sys-enter-2-3iNjTkh9.js";import"./alert-OoqNCaQj.js";import"./Tooltips-8xifowfb.js";import"./EventProvider-ChtD9rRX.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-Cvg-U5x_.js";import"./delete-h-db6HRa.js";import"./edit-9GVMyE3q.js";import"./settings-Cp3lgPls.js";import"./NoData-D2qOF6YX.js";import"./IllustratedMessage-8JnATl3w.js";import"./i18n-defaults-BpYbS4V6.js";import"./parameters-bundle.css-VMdlhyu5.js";import"./sapIllus-Dialog-NoData-9Efc9X2b.js";import"./sapIllus-Scene-NoData-0Vdzn1mw.js";import"./sapIllus-Spot-NoData-BpflD-Nf.js";import"./index-spO6LjSz.js";import"./index-CsS0MypD.js";import"./ValueState-Bg0UWejw.js";import"./slim-arrow-down-DtYGSLu3.js";import"./ListBoxItemGroupTemplate-fh_84J7x.js";import"./ListItemGroup-CsRDqRTe.js";import"./DropIndicator-yg2DufZG.js";import"./TabbableElements-XzXYKyvZ.js";import"./ComboBoxItemGroup-eO5_lMSG.js";import"./ListItemBaseTemplate-BF_oW5Ft.js";import"./Token-B7YXP0K6.js";import"./ItemNavigation-DmP37oe7.js";import"./ScrollEnablement-dLnK06fg.js";import"./animate-JylhYHXj.js";import"./List-qZDTvK7t.js";import"./handleDrop-AMQxvv7R.js";import"./getNormalizedTarget-C4mxORXI.js";import"./debounce-TTkz9ISH.js";import"./ListItemStandard-CSAXuhZR.js";import"./ListItemTemplate-BBhCmTgZ.js";import"./ListItemAdditionalText.css-DI-wOckb.js";import"./slim-arrow-right-DkPO2Wac.js";import"./RadioButton-DA5UCl3f.js";import"./CheckBox-WFu_Bb_l.js";import"./accept-tKQJV64V.js";import"./ResponsivePopover-Blp0O4E4.js";import"./Dialog-BSquvsbt.js";import"./ResponsivePopoverCommon.css-ngelvl8I.js";import"./Suggestions.css-CNnloLYM.js";import"./ToggleButton-J6qlGg9k.js";import"./Input-ZELxVt8f.js";import"./ValueStateMessage.css-E0DjtdJ4.js";import"./SuggestionItem-DvzuGtwH.js";import"./index-D4N6r4Rb.js";import"./Option-Dr-HXByj.js";import"./index-BjLlZVLT.js";import"./SegmentedButton-DZCOStQQ.js";import"./index-CgACGHI8.js";import"./Select-C61xPb0K.js";import"./InvisibleMessage-B5xNggWT.js";import"./slim-arrow-down-DQ2NAFnC.js";import"./index-Bpis0SRi.js";import"./Tag-CEzSQIl5.js";import"./sys-help-2-RmNMPhxT.js";import"./i18n-defaults-DCll23ma.js";import"./useIsRTL-BwLW7KlC.js";import"./directionChange-BzugKGnv.js";import"./index-BkyL84wW.js";import"./IconDesign-DXd8PPVF.js";import"./filter-BoAtszab.js";import"./group-2-DHfGnKNi.js";import"./sort-descending-B3_yxEpT.js";import"./ThemingParameters-BB3UHRT7.js";import"./index-BRtmXPLB.js";import"./stopPropagation-BJWsenK5.js";import"./index-DBAyVIIG.js";import"./utils-D3kWNUYF.js";import"./index-CLjVIuna.js";import"./index-SplRWNME.js";import"./ListItemCustom-CRnEbr0Q.js";import"./index-Ddx17rcJ.js";import"./navigation-down-arrow-CF9nwE3G.js";import"./navigation-right-arrow-CLEp72dC.js";import"./navigation-right-arrow-DH4h8-Nv.js";import"./useCurrentTheme-BmPmSXQH.js";import"./IndicationColor-DVw-fSM_.js";import"./index-rH-i952H.js";import"./debounce-D7W5PopO.js";import"./index-BPNKDOce.js";import"./index-Bh5trjmT.js";function r(t){const i={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...m(),...t.components};return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin Hooks / useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(l,{sourceState:"none",of:s}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = useCallback((e) => {
    console.log(e.columnWidth, e.header);
  }, []);

  const tableHooks = useMemo(
    () => [
      AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
        liveUpdate: false,
        wait: 100,
      }),
    ],
    [handleColumResize],
  );

  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={tableHooks}
    />
  );
};
`})}),`
`,o.jsx(e,{})]})}function it(t={}){const{wrapper:i}={...m(),...t.components};return i?o.jsx(i,{...t,children:o.jsx(r,{...t})}):r(t)}export{it as default};
