import{j as e}from"./iframe-BGPLLWda.js";import{useMDXComponents as r}from"./index-CUo1Jk3b.js";import{I as n,F as a}from"./CommandsAndQueries-CMwJiC-3.js";import{M as s,C as m}from"./blocks-indAdCXu.js";import"./Tag-BJtvEZ6A.js";import{M as p}from"./index-CQHuRrhk.js";import"./i18n-DSpjDgSK.js";import"./copy-BU9AAITa.js";import{b as l}from"./AnalyticalTableHooks.stories-Bz_VtBIz.js";import"./preload-helper-D9Z9MdNV.js";import"./index-BYQsmpt9.js";import"./index-DatG_EGp.js";import"./index-DxdciquJ.js";import"./Link-7mG2PaxS.js";import"./addCustomCSSWithScoping-C37q5SY_.js";import"./index-Bm9Gzw8H.js";import"./index-7SSPTye2.js";import"./index-DkEMFegB.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-Bg9viRhL.js";import"./index-BUzvoCUF.js";import"./information-CN6qajRX.js";import"./sys-enter-2-DEzg8GhV.js";import"./alert-CDWQg-Kt.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-TS6DhnPd.js";import"./delete-BWX4MlMm.js";import"./settings-CFgijcO_.js";import"./NoData-BGEkmZoQ.js";import"./IllustratedMessage-BD1EvJ9X.js";import"./i18n-defaults-Cjp7arcT.js";import"./parameters-bundle.css-34zgZIqy.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-BJmJUlHD.js";import"./index-BNy7Dn0g.js";import"./slim-arrow-down-DMfTGr50.js";import"./Input-CpVfGSwY.js";import"./ResponsivePopoverCommon.css-951IwDN3.js";import"./ValueStateMessage.css-Djn4UmzD.js";import"./Suggestions.css-DqxhEkKs.js";import"./ListBoxItemGroupTemplate-cIHi7oo8.js";import"./ComboBoxItemGroup-TToYvkYQ.js";import"./ListItemBaseTemplate-Dg-uXgOx.js";import"./Token-sHPc753X.js";import"./ScrollEnablement-SdEABngw.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-gVzTb5tv.js";import"./ToggleButton-DqvQERLg.js";import"./SuggestionItem-Cxo33OCr.js";import"./index-CnuSgVMh.js";import"./Option-DtMR1hW6.js";import"./index-BtbM9UQ5.js";import"./SegmentedButton-U5MRkYAs.js";import"./index-D84y9kSV.js";import"./Select-D9d1AFpt.js";import"./InvisibleMessage-CxuvqbmW.js";import"./slim-arrow-down-CPLxRpFv.js";import"./useIsRTL-B1VPnJL4.js";import"./index-B91ASvCc.js";import"./IconDesign-DXd8PPVF.js";import"./filter-CCfyYYk6.js";import"./group-2-Dnk-pTKH.js";import"./sort-descending-DB8J7SKA.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-WIExqiEM.js";import"./utils-TBfvB8Vn.js";import"./index-C5SS4mkA.js";import"./index-I5I4BdBq.js";import"./index-I4ELerEx.js";import"./navigation-down-arrow-BxgwGxy_.js";import"./navigation-right-arrow-wPwk5NCr.js";import"./navigation-right-arrow-CuKMCHYh.js";import"./useCurrentTheme-Nu7Bfg1U.js";import"./IndicationColor-DVw-fSM_.js";import"./index-BxdEUa6a.js";import"./debounce-D7W5PopO.js";import"./paper-plane-BMGxioyT.js";import"./index-AkNk4559.js";import"./less-BflIj0KR.js";import"./index-Di9vvrRS.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function ze(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{ze as default};
