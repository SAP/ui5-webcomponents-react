import{j as e}from"./iframe-BM9OIWQT.js";import{useMDXComponents as r}from"./index-BmDGYHRp.js";import{I as n,F as a}from"./CommandsAndQueries-CxAAQY3-.js";import{M as s,C as m}from"./blocks-DGMiQa0Z.js";import"./Tag-Bg9SPuPk.js";import{M as p}from"./index-DdMY_iOX.js";import"./copy-C5RvIJ1i.js";import{b as l}from"./AnalyticalTableHooks.stories-BZ7zBJHa.js";import"./preload-helper-Ct5FWWRu.js";import"./index-9uui-4yc.js";import"./index-BFMSgsw3.js";import"./index-9kU-764p.js";import"./Link-D90fL3tj.js";import"./addCustomCSSWithScoping-DJtAPEon.js";import"./index-CLY-4HWK.js";import"./index-DnPpq_H3.js";import"./index-6r2kDh88.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-B4WbvrxN.js";import"./index-DEAaUqYT.js";import"./information-Ofjl_yVD.js";import"./sys-enter-2-BDJ8zEGu.js";import"./alert-BRWAPDyh.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-CyuqtK2r.js";import"./delete-onoyAsqE.js";import"./settings--1Ip8lPf.js";import"./NoData-CQH_6cEc.js";import"./IllustratedMessage-Bwpwi4hz.js";import"./i18n-defaults-Cjp7arcT.js";import"./parameters-bundle.css-34zgZIqy.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-B7uotIo3.js";import"./index-_M5hu1Ve.js";import"./slim-arrow-down-DZH9bZ7T.js";import"./Input-Dn5iQQwi.js";import"./ResponsivePopoverCommon.css-C06uDNZk.js";import"./ValueStateMessage.css-45247xTr.js";import"./Suggestions.css-D3BTSrmf.js";import"./ListBoxItemGroupTemplate-DRaugEOq.js";import"./ComboBoxItemGroup-DPclcPz1.js";import"./ListItemBaseTemplate-4FD8RdDt.js";import"./Token-DULBBXqN.js";import"./ScrollEnablement-B6aqSdEO.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-CN3OLFlW.js";import"./ToggleButton-BiNCtIf_.js";import"./SuggestionItem-9SkfTs2v.js";import"./index-DDgoevNI.js";import"./Option-C3MxzwCu.js";import"./index-B9VkeBUH.js";import"./SegmentedButton-DYNlW9qo.js";import"./index-C4RyrHZD.js";import"./Select-BMZ7_MPl.js";import"./InvisibleMessage-B5HLZjpk.js";import"./slim-arrow-down-BTYV_0EQ.js";import"./useIsRTL-uL9buPdP.js";import"./index-4j8VosmR.js";import"./IconDesign-DXd8PPVF.js";import"./filter-BU0dRrZB.js";import"./group-2-IGI1Z0iD.js";import"./sort-descending-Ce7w9FbB.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BD-49ib6.js";import"./utils-BX52KHbp.js";import"./index-CEfW1Ie-.js";import"./index-6oxIcK4F.js";import"./index-DDsSh8_M.js";import"./navigation-down-arrow-DRy-Plf1.js";import"./navigation-right-arrow-C4LKuMFg.js";import"./navigation-right-arrow-B77x5HAj.js";import"./useCurrentTheme-BO1dkmZn.js";import"./IndicationColor-DVw-fSM_.js";import"./index-BV7JsfdZ.js";import"./debounce-D7W5PopO.js";import"./index-SxXIoXoc.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Xe(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Xe as default};
