import{e as Se}from"./DemoProps-BWWtsAFv.js";import{j as e}from"./useIsomorphicLayoutEffect-Dhma_bjk.js";import{T as _}from"./ThemingParameters-DOkJX3Ed.js";import{e as J}from"./index-C-Zfmu7Z.js";import{r as z}from"./index-RYns6xqu.js";import{u as De,a as Te,C as Le,Y as S,b as R,X as D,c as K}from"./YAxisTicks-BNlYCTvY.js";import{u as Ye,C as Be}from"./ChartDataLabel-tElD2fCE.js";import{u as Ne,t as Oe,a as Re,b as Ke,c as he}from"./staticProps-CzXIglM8.js";import{u as We}from"./useLongestYAxisLabel-B7z11bxZ.js";import{u as Fe}from"./useOnClickInternal-CrvD_ZAc.js";import{u as Ee,a as $e,r as He,b as Q}from"./useTooltipFormatter-CTV0Jluf.js";import{m as Me,R as Ue,T as Xe,n as Ge,B as Je,o as Qe,p as Ze}from"./ChartContainer-CAV-rvah.js";import{C as et}from"./react-content-loader.es-BcmDwNEo.js";import{C as tt}from"./ComposedChart-BzOY1iSx.js";import{u as at}from"./withWebComponent-YgbOdVTg.js";import{u as ot}from"./useIsRTL-BKJHvl9n.js";import"./_getPrototype-B0L0C3AT.js";import"./_baseUniq-DGDOfdbw.js";import"./debounce-D7W5PopO.js";import"./isPlainObject-CkURvjQU.js";import"./tiny-invariant-CCoILDQG.js";import"./debounce-BszCn3T9.js";import"./index-nXFm8DeZ.js";import"./addCustomCSSWithScoping-kPHcp3gn.js";import"./utils-C_Hfx9mc.js";import"./clsx-B-dksMZM.js";import"./useStylesheet-DcbwKAeb.js";import"./index-CH8lNo3T.js";import"./BusyIndicator-DuGIcogQ.js";import"./i18nBundle-CRmnyxU0.js";import"./Keys-D1SxbTOd.js";import"./Label-CPv3jFl2.js";import"./i18n-defaults-PZPXNaBc.js";import"./parameters-bundle.css-Bga-3Zi8.js";import"./class-map-D12-v36h.js";import"./index-DYtJKmyC.js";import"./Line-DIrNPbhm.js";import"./Scatter-CRoGZHcB.js";import"./directionChange-KEBON-uE.js";const j=n=>{const{x:u,y:d,width:p,height:h,index:f,fill:q,strokeWidth:c,layout:b}=n,P={x1:c?u+(p-c)/2-1:u-3,x2:c?u+c+(p-c)/2:u+p+3},v={y1:c?d+(h-c)/2-1:d-3,y2:c?d+c+(h-c)/2:d+h+3};return b==="horizontal"?e.jsx("line",{x1:P.x1,x2:P.x2,y1:d,y2:d,stroke:q,strokeWidth:3},`target-${f}`):e.jsx("line",{x1:u+p,x2:u+p,y1:v.y1,y2:v.y2,stroke:q,strokeWidth:3},`target-${f}`)};try{j.displayName="ComparisonLine",j.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}try{j.displayName="ComparisonLine",j.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}const nt=e.jsxs(e.Fragment,{children:[e.jsx("rect",{x:"20",y:"20",width:"85",height:"15"}),e.jsx("rect",{x:"20",y:"40",width:"117",height:"15"}),e.jsx("rect",{x:"20",y:"60",width:"67",height:"15"}),e.jsx("rect",{x:"20",y:"80",width:"75",height:"15"}),e.jsx("rect",{x:"20",y:"100",width:"125",height:"15"}),e.jsx("rect",{x:"20",y:"120",width:"60",height:"15"}),e.jsx("rect",{x:"115",y:"17.5",width:"2",height:"20"}),e.jsx("rect",{x:"150",y:"37.5",width:"2",height:"20"}),e.jsx("rect",{x:"90",y:"57.5",width:"2",height:"20"}),e.jsx("rect",{x:"100",y:"77.5",width:"2",height:"20"}),e.jsx("rect",{x:"120",y:"97.5",width:"2",height:"20"}),e.jsx("rect",{x:"87",y:"117.5",width:"2",height:"20"})]}),rt=e.jsxs(e.Fragment,{children:[e.jsx("rect",{x:"20",y:"50",width:"15",height:"85"}),e.jsx("rect",{x:"40",y:"70",width:"15",height:"65"}),e.jsx("rect",{x:"60",y:"68",width:"15",height:"67"}),e.jsx("rect",{x:"80",y:"60",width:"15",height:"75"}),e.jsx("rect",{x:"100",y:"10",width:"15",height:"125"}),e.jsx("rect",{x:"120",y:"75",width:"15",height:"60"}),e.jsx("rect",{x:"17.5",y:"35",width:"20",height:"2"}),e.jsx("rect",{x:"37.5",y:"62",width:"20",height:"2"}),e.jsx("rect",{x:"57.5",y:"56",width:"20",height:"2"}),e.jsx("rect",{x:"77.5",y:"37",width:"20",height:"2"}),e.jsx("rect",{x:"97.5",y:"45",width:"20",height:"2"}),e.jsx("rect",{x:"117.5",y:"70",width:"20",height:"2"})]}),V=({layout:n,measures:u})=>{const d=new Set(u.map(p=>p.type));return e.jsxs(et,{viewBox:"0 0 165 145",preserveAspectRatio:"xMidYMid meet",width:"100%",height:"100%",speed:2,backgroundColor:_.sapContent_ImagePlaceholderBackground,foregroundColor:_.sapContent_ImagePlaceholderForegroundColor,backgroundOpacity:_.sapContent_DisabledOpacity,children:[n==="vertical"&&e.jsx("rect",{x:"20",y:"10",width:"1",height:"135"}),n==="horizontal"&&e.jsx("rect",{x:"10",y:"135",width:"135",height:"1"}),n==="vertical"&&d.has("primary")&&nt,n==="horizontal"&&d.has("primary")&&rt]})};try{V.displayName="BulletChartPlaceholder",V.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}try{V.displayName="BulletChartPlaceholder",V.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}const it={formatter:he},st={formatter:he,opacity:1},C=z.forwardRef((n,u)=>{var M,U,X;const{loading:d,loadingDelay:p,dataset:h,onDataPointClick:f,noLegend:q,noAnimation:c,tooltipConfig:b,onLegendClick:P,onClick:v,layout:s="horizontal",style:ue,className:pe,slot:me,syncId:fe,ChartPlaceholder:ye,children:ge,...be}=n,[xe,W]=at(u),a={yAxisVisible:!1,xAxisVisible:!0,gridStroke:_.sapList_BorderColor,gridHorizontal:!0,gridVertical:!1,legendPosition:"bottom",legendHorizontalAlign:"left",zoomingTool:!1,resizeDebounce:250,yAxisConfig:{},xAxisConfig:{},secondYAxisConfig:{},secondXAxisConfig:{},...n.chartConfig},{referenceLine:o}=a,{dimensions:N,measures:I}=Ee(n.dimensions,n.measures,it,st),y=z.useMemo(()=>I.sort(t=>t.type==="comparison"?1:t.type==="primary"?-1:0),[I]),Ce=$e(y),g=N[0],{primaryMeasure:w,secondaryMeasure:F}=He(y,(M=a==null?void 0:a.secondYAxis)==null?void 0:M.dataKey),ve=Ye(g),we=y.map(({accessor:t})=>t),x=a.secondYAxis?we.findIndex(t=>{var i;return t===((i=a.secondYAxis)==null?void 0:i.dataKey)}):0,E=z.useCallback((t,i,r)=>{var l;if(typeof f=="function")if(t.name){const A=(l=t==null?void 0:t.value)==null?void 0:l.length;f(J(r??i,{value:A?t.value[1]-t.value[0]:t.value,dataIndex:t.index??i,dataKey:A?Object.keys(t).filter(m=>t.value.length?t[m]===t.value[1]-t.value[0]:t[m]===t.value&&m!=="value")[0]:t.dataKey??Object.keys(t).find(m=>t[m]===t.value&&m!=="value"),payload:t.payload}))}else f(J({},{value:i.value,dataKey:i.dataKey,dataIndex:i.index,payload:i.payload}))},[f]),ke=Ne(P),Ae=Fe(v),O=(h==null?void 0:h.length)>30,_e=g==null?void 0:g.accessor,[$,je]=We(h,s==="vertical"?N:y,a.legendPosition),Ve=De(a.margin,a.zoomingTool),qe=Te(W,s==="vertical"?1:n.dimensions.length),H={axisLine:a.yAxisVisible,tickLine:Oe,tickFormatter:w==null?void 0:w.formatter,interval:0},k=ot(W),Pe=z.useCallback(()=>e.jsx(V,{layout:s,measures:I}),[s,I]),{chartConfig:lt,dimensions:ct,measures:dt,...Ie}=be;return e.jsx(Me,{ref:xe,loading:d,loadingDelay:p,dataset:h,Placeholder:ye??Pe,style:ue,className:pe,slot:me,resizeDebounce:a.resizeDebounce,...Ie,children:e.jsxs(tt,{syncId:fe,onClick:Ae,stackOffset:"sign",margin:Ve,data:h,layout:s,className:typeof f=="function"||typeof v=="function"?"has-click-handler":void 0,children:[e.jsx(Le,{vertical:a.gridVertical,horizontal:a.gridHorizontal,stroke:a.gridStroke}),a.xAxisVisible&&N.map((t,i)=>{let r;const l={dataKey:t.accessor,interval:(t==null?void 0:t.interval)??(O?"preserveStart":0),tickLine:i<1,axisLine:i<1,allowDuplicatedCategory:i===0};return s==="vertical"?(l.type="category",l.tick=e.jsx(R,{config:t}),l.yAxisId=i,l.width=$,r=S,l.orientation=k?"right":"left"):(l.dataKey=t.accessor,l.tick=e.jsx(K,{config:t}),l.xAxisId=i,l.height=qe[i],r=D,l.reversed=k),e.jsx(r,{...l},t.reactKey)}),s==="horizontal"&&e.jsx(S,{...H,yAxisId:"primary",width:$,orientation:k?"right":"left",tick:e.jsx(R,{config:w}),...a.yAxisConfig}),s==="vertical"&&e.jsx(D,{...H,reversed:k,xAxisId:"primary",type:"number",tick:e.jsx(K,{config:w}),...a.xAxisConfig}),((U=a.secondYAxis)==null?void 0:U.dataKey)&&s==="horizontal"&&e.jsx(S,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${x%11+1})`},tick:e.jsx(R,{config:F,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${x%11+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${x%11+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:k?"left":"right",interval:0,yAxisId:"secondary",...a.secondYAxisConfig}),((X=a.secondYAxis)==null?void 0:X.dataKey)&&s==="vertical"&&e.jsx(D,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${x%11+1})`},tick:e.jsx(K,{config:F,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${x%11+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${x%11+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:"top",interval:0,xAxisId:"secondary",type:"number",...a.secondXAxisConfig}),s==="horizontal"&&e.jsx(D,{xAxisId:"comparisonXAxis",hide:!0}),s==="vertical"&&e.jsx(S,{yAxisId:"comparisonYAxis",type:"category",hide:!0}),o&&e.jsx(Ue,{...o,stroke:(o==null?void 0:o.color)??(o==null?void 0:o.stroke),y:o!=null&&o.value?s==="horizontal"?o==null?void 0:o.value:void 0:o==null?void 0:o.y,x:o!=null&&o.value?s==="vertical"?o==null?void 0:o.value:void 0:o==null?void 0:o.x,yAxisId:(o==null?void 0:o.yAxisId)??s==="horizontal"?"primary":void 0,xAxisId:(o==null?void 0:o.xAxisId)??s==="vertical"?"primary":void 0,label:o==null?void 0:o.label}),(b==null?void 0:b.active)!==!1&&e.jsx(Xe,{cursor:Re,formatter:Ce,contentStyle:Ke,labelFormatter:ve,...b}),!q&&e.jsx(Ge,{verticalAlign:a.legendPosition,align:a.legendHorizontalAlign,onClick:ke,wrapperStyle:je}),y==null?void 0:y.map((t,i)=>{var A,m;const r={isAnimationActive:!c};let l="top";switch(t.type){case"primary":case"additional":r.fillOpacity=t.opacity,r.strokeOpacity=t.opacity,r.barSize=t.width,r.onClick=E,r.stackId="A",r.labelPosition=t.stackId?"insideTop":"top",s==="vertical"?l="insideRight":l="insideTop";break;case"comparison":r.onClick=E,r.fill=t.color??"black",r.strokeWidth=t.width,r.shape=e.jsx(j,{layout:s}),r.strokeOpacity=t.opacity,r.label=!1,r.xAxisId="comparisonXAxis",r.yAxisId="comparisonYAxis",r.dot=!O;break}return s==="vertical"?r.xAxisId=((A=a.secondYAxis)==null?void 0:A.dataKey)===t.accessor?"secondary":"primary":r.yAxisId=((m=a.secondYAxis)==null?void 0:m.dataKey)===t.accessor?"secondary":"primary",e.jsx(Je,{name:t.label??t.accessor,label:O?null:e.jsx(Be,{config:t,chartType:"bar",position:l}),stroke:t.color??`var(--sapChart_OrderedColor_${i%11+1})`,fill:t.color??`var(--sapChart_OrderedColor_${i%11+1})`,type:"monotone",dataKey:t.accessor,...r,children:t.type!=="comparison"&&h.map((G,ze)=>e.jsx(Qe,{fill:Q(t,G,i),stroke:Q(t,G,i)},ze))},t.reactKey)}),a.zoomingTool&&e.jsx(Ze,{y:10,dataKey:_e,tickFormatter:g==null?void 0:g.formatter,stroke:_.sapObjectHeader_BorderColor,travellerWidth:10,height:20}),ge]})})});C.displayName="BulletChart";try{C.displayName="BulletChart",C.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of object which will be displayed in the chart.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to overwrite internally used tooltip props, so use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}try{C.displayName="BulletChart",C.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of object which will be displayed in the chart.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to overwrite internally used tooltip props, so use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}const Gt={title:"BulletChart",component:C,argTypes:{dataset:{control:{disable:!0}},children:{control:{disable:!0}}},args:{dataset:Se,layout:"horizontal",dimensions:[{accessor:"name",formatter:n=>`${n} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional"},{accessor:"volume",label:"Volume",formatter:n=>n.toLocaleString(),type:"comparison"}]}},T={},L={args:{layout:"vertical",dimensions:[{accessor:"name",formatter:n=>n.slice(0,3)}],measures:[{accessor:"users",formatter:n=>`${n/10}`,type:"additional",label:"Number of users",width:10},{accessor:"sessions",type:"primary",width:10,opacity:.5},{accessor:"volume",type:"comparison",width:10}]}},Y={args:{dimensions:[{accessor:"name",formatter:n=>`${n} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional",highlightColor:n=>{if(n>100)return"red"}},{accessor:"volume",label:"Volume",formatter:n=>n.toLocaleString(),type:"comparison"}]}},B={args:{dataset:[]}};var Z,ee,te;T.parameters={...T.parameters,docs:{...(Z=T.parameters)==null?void 0:Z.docs,source:{originalSource:"{}",...(te=(ee=T.parameters)==null?void 0:ee.docs)==null?void 0:te.source}}};var ae,oe,ne;L.parameters={...L.parameters,docs:{...(ae=L.parameters)==null?void 0:ae.docs,source:{originalSource:`{
  args: {
    layout: 'vertical',
    dimensions: [{
      accessor: 'name',
      formatter: element => element.slice(0, 3)
    }],
    measures: [{
      accessor: 'users',
      formatter: element => \`\${element / 10}\`,
      type: 'additional',
      label: 'Number of users',
      width: 10
    }, {
      accessor: 'sessions',
      type: 'primary',
      width: 10,
      opacity: 0.5
    }, {
      accessor: 'volume',
      type: 'comparison',
      width: 10
    }]
  }
}`,...(ne=(oe=L.parameters)==null?void 0:oe.docs)==null?void 0:ne.source}}};var re,ie,se;Y.parameters={...Y.parameters,docs:{...(re=Y.parameters)==null?void 0:re.docs,source:{originalSource:`{
  args: {
    dimensions: [{
      accessor: 'name',
      formatter: d => \`\${d} 2019\`,
      interval: 0
    }],
    measures: [{
      accessor: 'sessions',
      label: 'Active Sessions',
      type: 'primary'
    }, {
      accessor: 'users',
      label: 'Users',
      type: 'additional',
      highlightColor: value => {
        if (value > 100) {
          return 'red';
        }
      }
    }, {
      accessor: 'volume',
      label: 'Volume',
      formatter: val => val.toLocaleString(),
      type: 'comparison'
    }]
  }
}`,...(se=(ie=Y.parameters)==null?void 0:ie.docs)==null?void 0:se.source}}};var le,ce,de;B.parameters={...B.parameters,docs:{...(le=B.parameters)==null?void 0:le.docs,source:{originalSource:`{
  args: {
    dataset: []
  }
}`,...(de=(ce=B.parameters)==null?void 0:ce.docs)==null?void 0:de.source}}};const Jt=["Default","WithCustomSize","WithHighlightedMeasures","LoadingPlaceholder"];export{T as Default,B as LoadingPlaceholder,L as WithCustomSize,Y as WithHighlightedMeasures,Jt as __namedExportsOrder,Gt as default};
