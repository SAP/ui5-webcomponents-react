import{j as e}from"./iframe-Cmm295l6.js";import{useMDXComponents as r}from"./index-BXOSXmsP.js";import{I as n,F as a}from"./CommandsAndQueries-BP_0RozZ.js";import{M as s,C as m}from"./blocks-BannUWtC.js";import"./Tag-Dz2xCnCd.js";import{M as p}from"./index-DNlfqL0I.js";import"./copy-D4RoINZh.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-dvFW3tl2.js";import"./preload-helper-D9Z9MdNV.js";import"./index-DjP2_XyX.js";import"./index-Ca8aNZdv.js";import"./index-CFxjX_iC.js";import"./Link-Dxfcpnmp.js";import"./addCustomCSSWithScoping-CT21Dj5u.js";import"./index-BCkLQQTq.js";import"./index-DcC0F_LL.js";import"./index-Bv1uLuLp.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-Bxty8qUP.js";import"./index-B2P7pH2V.js";import"./information-CcrqmRhS.js";import"./sys-enter-2-hqDN1aaD.js";import"./alert-CIjWWYk9.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-BOW3byXA.js";import"./delete-BpJ7jMu4.js";import"./settings-DfuIK5Du.js";import"./NoData-B9fBQ-2X.js";import"./IllustratedMessage-DMoUKb2N.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-DyS6OgFp.js";import"./index-D9-J-CUh.js";import"./slim-arrow-down-BPs-5Hw-.js";import"./Input-CKOQVRzo.js";import"./ResponsivePopoverCommon.css-CuPlJ6XL.js";import"./ValueStateMessage.css-CpF9zfZB.js";import"./Suggestions.css-URl81ueP.js";import"./ListBoxItemGroupTemplate-BE6yQGK-.js";import"./ComboBoxItemGroup-ZNf2Vk0l.js";import"./ListItemBaseTemplate-CToCzb2R.js";import"./Token-DKJgf7x_.js";import"./ScrollEnablement-BWqjOtqg.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-BSk0UJEE.js";import"./ToggleButton-zP3wC5RY.js";import"./SuggestionItem-Ct7jePU3.js";import"./index-Dpgfdfru.js";import"./Option-CXrrCfUx.js";import"./index-Ws9shfnM.js";import"./SegmentedButton-DjidyPv_.js";import"./index-D9kRi0IC.js";import"./Select-DRZNQuJi.js";import"./InvisibleMessage-BUQae6f9.js";import"./slim-arrow-down-iUDTzeiV.js";import"./useIsRTL-CEwtxJyB.js";import"./index-BzcZFawy.js";import"./IconDesign-DXd8PPVF.js";import"./filter-BqgfgZAq.js";import"./group-2-DGba-0Tt.js";import"./sort-descending-Cv9BhC3z.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-DynqqBp0.js";import"./utils-CxbvwC5_.js";import"./index-CJAzT50r.js";import"./index-CggMFlL9.js";import"./index-DIyb4d_p.js";import"./navigation-down-arrow-C11LdM0-.js";import"./navigation-right-arrow-B54lSWMn.js";import"./navigation-right-arrow--DddG-Qx.js";import"./useCurrentTheme-Q0o_lrzg.js";import"./IndicationColor-DVw-fSM_.js";import"./index-YJpka7ZF.js";import"./debounce-D7W5PopO.js";import"./paper-plane-DQu_UXSp.js";import"./index-DL20h0zh.js";import"./less-CttwOBtS.js";import"./index-BtYSUoXS.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
