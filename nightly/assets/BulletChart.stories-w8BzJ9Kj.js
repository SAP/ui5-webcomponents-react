import{f as Re,t as We,l as Ee}from"./DemoProps-BerORI7p.js";import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{T as R}from"./ThemingParameters-pyhX3s39.js";import"./CustomElementsScope-BZQ-yqK5.js";import{r as Y}from"./index-U0ga5oGA.js";import{A as Ke,k as Z}from"./jsx-runtime-2NO35c9p.js";import{u as Fe,a as $e,C as He,Y as B,b as E,X as O,c as K}from"./YAxisTicks-C0AnjT1g.js";import{u as Me,C as Ue}from"./ChartDataLabel-1MCQhEF4.js";import{u as Xe,t as Ge,a as Je,b as Qe,c as Ze,e as Ce}from"./staticProps-CsoqpBtB.js";import{u as et}from"./useLongestYAxisLabel-BKQknJCW.js";import{u as tt}from"./useOnClickInternal-CrJVn7-y.js";import{u as at,a as ot,r as nt,b as ee}from"./useTooltipFormatter-Bp9j4QwV.js";import{l as it,R as rt,T as st,m as lt,B as ct,n as dt,o as ut}from"./ChartContainer-Dgssy5tr.js";import{C as ht}from"./react-content-loader.es-C9Vmu4FD.js";import{C as pt}from"./ComposedChart-DlbnVuJ_.js";import{u as mt}from"./useIsRTL-WiH5er_M.js";const z=n=>{const{x:h,y:d,width:p,height:u,index:f,fill:D,strokeWidth:c,layout:b}=n,T={x1:c?h+(p-c)/2-1:h-3,x2:c?h+c+(p-c)/2:h+p+3},v={y1:c?d+(u-c)/2-1:d-3,y2:c?d+c+(u-c)/2:d+u+3};return b==="horizontal"?e.jsx("line",{x1:T.x1,x2:T.x2,y1:d,y2:d,stroke:D,strokeWidth:3},`target-${f}`):e.jsx("line",{x1:h+p,x2:h+p,y1:v.y1,y2:v.y2,stroke:D,strokeWidth:3},`target-${f}`)};try{z.displayName="ComparisonLine",z.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}try{z.displayName="ComparisonLine",z.__docgenInfo={description:"",displayName:"ComparisonLine",props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"number"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"Fill"}},layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}const ft=e.jsxs(e.Fragment,{children:[e.jsx("rect",{x:"20",y:"20",width:"85",height:"15"}),e.jsx("rect",{x:"20",y:"40",width:"117",height:"15"}),e.jsx("rect",{x:"20",y:"60",width:"67",height:"15"}),e.jsx("rect",{x:"20",y:"80",width:"75",height:"15"}),e.jsx("rect",{x:"20",y:"100",width:"125",height:"15"}),e.jsx("rect",{x:"20",y:"120",width:"60",height:"15"}),e.jsx("rect",{x:"115",y:"17.5",width:"2",height:"20"}),e.jsx("rect",{x:"150",y:"37.5",width:"2",height:"20"}),e.jsx("rect",{x:"90",y:"57.5",width:"2",height:"20"}),e.jsx("rect",{x:"100",y:"77.5",width:"2",height:"20"}),e.jsx("rect",{x:"120",y:"97.5",width:"2",height:"20"}),e.jsx("rect",{x:"87",y:"117.5",width:"2",height:"20"})]}),yt=e.jsxs(e.Fragment,{children:[e.jsx("rect",{x:"20",y:"50",width:"15",height:"85"}),e.jsx("rect",{x:"40",y:"70",width:"15",height:"65"}),e.jsx("rect",{x:"60",y:"68",width:"15",height:"67"}),e.jsx("rect",{x:"80",y:"60",width:"15",height:"75"}),e.jsx("rect",{x:"100",y:"10",width:"15",height:"125"}),e.jsx("rect",{x:"120",y:"75",width:"15",height:"60"}),e.jsx("rect",{x:"17.5",y:"35",width:"20",height:"2"}),e.jsx("rect",{x:"37.5",y:"62",width:"20",height:"2"}),e.jsx("rect",{x:"57.5",y:"56",width:"20",height:"2"}),e.jsx("rect",{x:"77.5",y:"37",width:"20",height:"2"}),e.jsx("rect",{x:"97.5",y:"45",width:"20",height:"2"}),e.jsx("rect",{x:"117.5",y:"70",width:"20",height:"2"})]}),I=({layout:n,measures:h})=>{const d=new Set(h.map(p=>p.type));return e.jsxs(ht,{viewBox:"0 0 165 145",preserveAspectRatio:"xMidYMid meet",width:"100%",height:"100%",speed:2,backgroundColor:R.sapContent_ImagePlaceholderBackground,foregroundColor:R.sapContent_ImagePlaceholderForegroundColor,backgroundOpacity:R.sapContent_DisabledOpacity,children:[n==="vertical"&&e.jsx("rect",{x:"20",y:"10",width:"1",height:"135"}),n==="horizontal"&&e.jsx("rect",{x:"10",y:"135",width:"135",height:"1"}),n==="vertical"&&d.has("primary")&&ft,n==="horizontal"&&d.has("primary")&&yt]})};try{I.displayName="BulletChartPlaceholder",I.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}try{I.displayName="BulletChartPlaceholder",I.__docgenInfo={description:"",displayName:"BulletChartPlaceholder",props:{layout:{defaultValue:null,description:"",name:"layout",required:!0,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},measures:{defaultValue:null,description:"",name:"measures",required:!0,type:{name:"(IChartMeasure & { type: string; })[]"}}}}}catch{}const gt={formatter:Ce},bt={formatter:Ce,opacity:1},x=Y.forwardRef((n,h)=>{var X,G,J;const{loading:d,loadingDelay:p,dataset:u,onDataPointClick:f,noLegend:D,noAnimation:c,tooltipConfig:b,onLegendClick:T,onClick:v,layout:l="horizontal",style:xe,className:ve,slot:we,syncId:ke,ChartPlaceholder:_e,children:Ae,...je}=n,[Ve,F]=Ke(h),a={yAxisVisible:!1,xAxisVisible:!0,gridStroke:R.sapList_BorderColor,gridHorizontal:!0,gridVertical:!1,legendPosition:"bottom",legendHorizontalAlign:"left",zoomingTool:!1,resizeDebounce:250,yAxisConfig:{},xAxisConfig:{},secondYAxisConfig:{},secondXAxisConfig:{},...n.chartConfig},{referenceLine:o}=a,{dimensions:W,measures:L}=at(n.dimensions,n.measures,gt,bt),y=Y.useMemo(()=>L.sort(t=>t.type==="comparison"?1:t.type==="primary"?-1:0),[L]),qe=ot(y),g=W[0],{primaryMeasure:w,secondaryMeasure:$}=nt(y,(X=a==null?void 0:a.secondYAxis)==null?void 0:X.dataKey),Pe=Me(g),Se=y.map(({accessor:t})=>t),C=a.secondYAxis?Se.findIndex(t=>{var r;return t===((r=a.secondYAxis)==null?void 0:r.dataKey)}):0,H=Y.useCallback((t,r,i)=>{var s;if(typeof f=="function")if(t.name){const _=(s=t==null?void 0:t.value)==null?void 0:s.length;f(Z(i??r,{value:_?t.value[1]-t.value[0]:t.value,dataIndex:t.index??r,dataKey:_?Object.keys(t).filter(m=>t.value.length?t[m]===t.value[1]-t.value[0]:t[m]===t.value&&m!=="value")[0]:t.dataKey??Object.keys(t).find(m=>t[m]===t.value&&m!=="value"),payload:t.payload}))}else f(Z({},{value:r.value,dataKey:r.dataKey,dataIndex:r.index,payload:r.payload}))},[f]),ze=Xe(T),Ie=tt(v),N=(u==null?void 0:u.length)>30,De=g==null?void 0:g.accessor,[M,Te]=et(u,l==="vertical"?W:y,a.legendPosition),Le=Fe(a.margin,a.zoomingTool),Ne=$e(F,l==="vertical"?1:n.dimensions.length),U={axisLine:a.yAxisVisible,tickLine:Ge,tickFormatter:w==null?void 0:w.formatter,interval:0},k=mt(F),Ye=Y.useCallback(()=>e.jsx(I,{layout:l,measures:L}),[l,L]),{chartConfig:vt,dimensions:wt,measures:kt,...Be}=je;return e.jsx(it,{ref:Ve,loading:d,loadingDelay:p,dataset:u,Placeholder:_e??Ye,style:xe,className:ve,slot:we,resizeDebounce:a.resizeDebounce,...Be,children:e.jsxs(pt,{syncId:ke,onClick:Ie,stackOffset:"sign",margin:Le,data:u,layout:l,accessibilityLayer:a.accessibilityLayer,className:typeof f=="function"||typeof v=="function"?"has-click-handler":void 0,children:[e.jsx(He,{vertical:a.gridVertical,horizontal:a.gridHorizontal,stroke:a.gridStroke}),a.xAxisVisible&&W.map((t,r)=>{let i;const s={dataKey:t.accessor,interval:(t==null?void 0:t.interval)??(N?"preserveStartEnd":0),tickLine:r<1,axisLine:r<1,allowDuplicatedCategory:r===0};return l==="vertical"?(s.type="category",s.tick=e.jsx(E,{config:t}),s.yAxisId=r,s.width=M,i=B,s.orientation=k?"right":"left",s.interval="preserveStartEnd",s.minTickGap=N?void 0:-10):(s.dataKey=t.accessor,s.tick=e.jsx(K,{config:t}),s.xAxisId=r,s.height=Ne[r],i=O,s.reversed=k),e.jsx(i,{...s},t.reactKey)}),l==="horizontal"&&e.jsx(B,{...U,yAxisId:"primary",width:M,orientation:k?"right":"left",tick:e.jsx(E,{config:w}),...a.yAxisConfig}),l==="vertical"&&e.jsx(O,{...U,reversed:k,xAxisId:"primary",type:"number",tick:e.jsx(K,{config:w}),...a.xAxisConfig}),((G=a.secondYAxis)==null?void 0:G.dataKey)&&l==="horizontal"&&e.jsx(B,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${C%12+1})`},tick:e.jsx(E,{config:$,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${C%12+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${C%12+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:k?"left":"right",interval:0,yAxisId:"secondary",...a.secondYAxisConfig}),((J=a.secondYAxis)==null?void 0:J.dataKey)&&l==="vertical"&&e.jsx(O,{dataKey:a.secondYAxis.dataKey,axisLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${C%12+1})`},tick:e.jsx(K,{config:$,secondYAxisConfig:{color:a.secondYAxis.color??`var(--sapChart_OrderedColor_${C%12+1})`}}),tickLine:{stroke:a.secondYAxis.color??`var(--sapChart_OrderedColor_${C%12+1})`},label:{value:a.secondYAxis.name,offset:2,angle:90,position:"center"},orientation:"top",interval:0,xAxisId:"secondary",type:"number",...a.secondXAxisConfig}),l==="horizontal"&&e.jsx(O,{xAxisId:"comparisonXAxis",hide:!0}),l==="vertical"&&e.jsx(B,{yAxisId:"comparisonYAxis",type:"category",hide:!0}),o&&e.jsx(rt,{...o,stroke:(o==null?void 0:o.color)??(o==null?void 0:o.stroke),y:o!=null&&o.value?l==="horizontal"?o==null?void 0:o.value:void 0:o==null?void 0:o.y,x:o!=null&&o.value?l==="vertical"?o==null?void 0:o.value:void 0:o==null?void 0:o.x,yAxisId:(o==null?void 0:o.yAxisId)??l==="horizontal"?"primary":void 0,xAxisId:(o==null?void 0:o.xAxisId)??l==="vertical"?"primary":void 0,label:o==null?void 0:o.label}),(b==null?void 0:b.active)!==!1&&e.jsx(st,{cursor:Qe,formatter:qe,contentStyle:Je,labelFormatter:Pe,...b}),!D&&e.jsx(lt,{verticalAlign:a.legendPosition,align:a.legendHorizontalAlign,onClick:ze,wrapperStyle:Te,...a.legendConfig}),y==null?void 0:y.map((t,r)=>{var _,m;const i={isAnimationActive:!c};let s="top";switch(t.type){case"primary":case"additional":i.fillOpacity=t.opacity,i.strokeOpacity=t.opacity,i.barSize=t.width,i.onClick=H,i.stackId="A",i.labelPosition=t.stackId?"insideTop":"top",l==="vertical"?s="insideRight":s="insideTop";break;case"comparison":i.onClick=H,i.fill=t.color??"black",i.strokeWidth=t.width,i.shape=e.jsx(z,{layout:l}),i.strokeOpacity=t.opacity,i.label=!1,i.xAxisId="comparisonXAxis",i.yAxisId="comparisonYAxis",i.dot=!N;break}return l==="vertical"?i.xAxisId=((_=a.secondYAxis)==null?void 0:_.dataKey)===t.accessor?"secondary":"primary":i.yAxisId=((m=a.secondYAxis)==null?void 0:m.dataKey)===t.accessor?"secondary":"primary",e.jsx(ct,{name:t.label??t.accessor,label:N?null:e.jsx(Ue,{config:t,chartType:"bar",position:s}),stroke:t.color??`var(--sapChart_OrderedColor_${r%12+1})`,fill:t.color??`var(--sapChart_OrderedColor_${r%12+1})`,type:"monotone",dataKey:t.accessor,...i,children:t.type!=="comparison"&&u.map((Q,Oe)=>e.jsx(dt,{fill:ee(t,Q,r),stroke:ee(t,Q,r)},Oe))},t.reactKey)}),!!a.zoomingTool&&e.jsx(ut,{dataKey:De,tickFormatter:g==null?void 0:g.formatter,...Ze,...typeof a.zoomingTool=="object"?a.zoomingTool:{}}),Ae]})})});x.displayName="BulletChart";try{x.displayName="BulletChart",x.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of objects that contains all the measures and dimensions.\n\n__Note:__ The values for measure data points must be of type `number`.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n- `accessibilityLayer`: Experimental property to improve accessibility. Not supported by all charts and configurations!\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; legendConfig?: Omit<...>; accessibilityLayer?: boolean; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to override internally used tooltip props, so please use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}try{x.displayName="BulletChart",x.__docgenInfo={description:"The `BulletChart` is used to compare primary and secondary (comparison) values. The primary and additional values\nare rendered as a stacked Bar Chart while the comparison value is displayed as a line above.",displayName:"BulletChart",props:{dimensions:{defaultValue:null,description:`An array of config objects. Each object will define one dimension of the chart.

**Required Properties**
- \`accessor\`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.
  Can also be a getter.

**Optional Properties**
- \`formatter\`: function will be called for each data label and allows you to format it according to your needs
- \`interval\`: number that controls how many ticks are rendered on the x axis`,name:"dimensions",required:!0,type:{name:"DimensionConfig[]"}},measures:{defaultValue:null,description:"An array of config objects. Each object is defining one element in the chart.\n\n**Required properties**\n- `accessor`: string containing the path to the dataset key this element should display. Supports object structures by using <code>'parent.child'</code>.\n  Can also be a getter.\n- `type`: string which chart element (value type) to show. Possible values: `primary`, `comparison`, `additional`.\n\n**Optional properties**\n\n- `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n- `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n- `formatter`: function will be called for each data label and allows you to format it according to your needs\n- `hideDataLabel`: flag whether the data labels should be hidden in the chart for this element.\n- `DataLabel`: a custom component to be used for the data label\n- `width`: width of the current chart element, defaults to `1` for `lines` and `20` for bars\n- `opacity`: element opacity, defaults to `1`\n- `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   defined condition. Overwrites code>color</code> of the element.",name:"measures",required:!0,type:{name:"MeasureConfig[]"}},layout:{defaultValue:{value:'`"horizontal"`'},description:"layout for showing measures. `horizontal` bars would equal the column chart, `vertical` would be a bar chart.\nDefault Value: `horizontal`",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},loading:{defaultValue:null,description:"Flag whether the chart should display a loading indicator.\n\nThis can either be a skeleton placeholder shimmer (in case the chart has no data yet) or a `BusyIndicator` on top of the chart (in case the chart has already some data to display).",name:"loading",required:!1,type:{name:"boolean"}},loadingDelay:{defaultValue:{value:"1000"},description:"Defines the delay in milliseconds, after which the `BusyIndicator` will be visible on the screen.",name:"loadingDelay",required:!1,type:{name:"number"}},dataset:{defaultValue:null,description:"The `dataset` is an array of objects that contains all the measures and dimensions.\n\n__Note:__ The values for measure data points must be of type `number`.",name:"dataset",required:!1,type:{name:"Record<string, unknown>[]"}},children:{defaultValue:null,description:"With the help of the `children` prop you can add more svg elements to the chart, e.g. if you want to display\na linear gradient.",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},noLegend:{defaultValue:null,description:"`noLegend` toggles the visibility of the legend below the chart. If this prop is `true`, no legend will be rendered.",name:"noLegend",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Fired when clicked anywhere in the chart.",name:"onClick",required:!1,type:{name:"(event: CustomEvent<{ payload: unknown; activePayloads: Record<string, unknown>[]; }>) => void"}},onDataPointClick:{defaultValue:null,description:"The `onDataPointClick` event fires whenever the user clicks on e.g. a  bar in `BarChart` or a point the `LineChart`.\n\nYou can use this event to trigger e.g. navigations or set filters based on the last clicked data point.",name:"onDataPointClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},onLegendClick:{defaultValue:null,description:`The \`onLegendClick\` event fires when the user clicks on a label of the legend.

This can be useful to e.g. show/hide the current dataset in case you have multiple datasets in in your chart.
@param event`,name:"onLegendClick",required:!1,type:{name:"(event: CustomEvent<any>) => void"}},noAnimation:{defaultValue:null,description:"`noAnimation` disables all chart animations when set to `true`.",name:"noAnimation",required:!1,type:{name:"boolean"}},chartConfig:{defaultValue:null,description:'Defines possible configurations of the chart.\n\n**Properties available on all charts:**\n\n- `margin`: Sets the margin of the chart container. Receives a object with four possible properties (`right`, `left`, `top`, `bottom`) that expect a number as value.\n- `legendPosition`: Vertical position of the legend. Can be one of the following: `"top"`,`"middle"`, `"bottom"` (`"middle"` is not supported for: ColumnChartWithTrend, DonutChart, PieChart)\n- `legendHorizontalAlign`: Alignment of the legend. Can be one of the following: `"left"`, `"center"`, `"right"`\n- `resizeDebounce`: Number that sets the amount of delay time the chart waits when resizing.\n- `accessibilityLayer`: Experimental property to improve accessibility. Not supported by all charts and configurations!\n\nPlease note that depending on the chart type, the `chartConfig` prop may accept more properties.',name:"chartConfig",required:!1,type:{name:'ICartesianChartConfig & { margin?: { right?: number; left?: number; top?: number; bottom?: number; }; legendPosition?: "top" | "bottom" | "middle"; legendHorizontalAlign?: "center" | ... 1 more ... | "right"; resizeDebounce?: number; legendConfig?: Omit<...>; accessibilityLayer?: boolean; }'}},tooltipConfig:{defaultValue:null,description:`Defines the configuration object for the internally used \`recharts\` Tooltip popover that is displayed when hovering over data points.
You can find all possible configuration properties [here](https://recharts.org/en-US/api/Tooltip).

__Note:__ It is possible to override internally used tooltip props, so please use with caution!`,name:"tooltipConfig",required:!1,type:{name:"TooltipProps<string | number | (string | number)[], string | number>"}},syncId:{defaultValue:null,description:`A string which defines an id to synchronize two separate charts. Charts with the same syncId synchronize the position
of the tooltips, the startIndex and the endIndex of the zooming tool.`,name:"syncId",required:!1,type:{name:"string"}},ChartPlaceholder:{defaultValue:null,description:`Injects a custom loading placeholder which is used when no data are available. If the property isn't set the
standard loading placeholder of the specific chart is used.`,name:"ChartPlaceholder",required:!1,type:{name:"ComponentType"}},className:{defaultValue:null,description:`CSS Class Name which will be appended to the most outer element of a component.
Use this prop carefully, overwriting CSS rules might break the component.`,name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:`Element style which will be appended to the most outer element of a component.
Use this prop carefully, some css properties might break the component.`,name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}const Ct={title:"BulletChart",component:x,argTypes:{dataset:{control:{disable:!0}},children:{control:{disable:!0}}},args:{dataset:Re,layout:"horizontal",dimensions:[{accessor:"name",formatter:n=>`${n} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional"},{accessor:"volume",label:"Volume",formatter:n=>n.toLocaleString(),type:"comparison"}]}},A={},j={args:{layout:"vertical",dimensions:[{accessor:"name",formatter:n=>n.slice(0,3)}],measures:[{accessor:"users",formatter:n=>`${n/10}`,type:"additional",label:"Number of users",width:10},{accessor:"sessions",type:"primary",width:10,opacity:.5},{accessor:"volume",type:"comparison",width:10}]}},V={args:{dimensions:[{accessor:"name",formatter:n=>`${n} 2019`,interval:0}],measures:[{accessor:"sessions",label:"Active Sessions",type:"primary"},{accessor:"users",label:"Users",type:"additional",highlightColor:n=>{if(n>100)return"red"}},{accessor:"volume",label:"Volume",formatter:n=>n.toLocaleString(),type:"comparison"}]}},q={args:{dataset:[]}},P={args:We},S={args:Ee};var te,ae,oe;A.parameters={...A.parameters,docs:{...(te=A.parameters)==null?void 0:te.docs,source:{originalSource:"{}",...(oe=(ae=A.parameters)==null?void 0:ae.docs)==null?void 0:oe.source}}};var ne,ie,re;j.parameters={...j.parameters,docs:{...(ne=j.parameters)==null?void 0:ne.docs,source:{originalSource:`{
  args: {
    layout: 'vertical',
    dimensions: [{
      accessor: 'name',
      formatter: element => element.slice(0, 3)
    }],
    measures: [{
      accessor: 'users',
      formatter: element => \`\${element / 10}\`,
      type: 'additional',
      label: 'Number of users',
      width: 10
    }, {
      accessor: 'sessions',
      type: 'primary',
      width: 10,
      opacity: 0.5
    }, {
      accessor: 'volume',
      type: 'comparison',
      width: 10
    }]
  }
}`,...(re=(ie=j.parameters)==null?void 0:ie.docs)==null?void 0:re.source}}};var se,le,ce;V.parameters={...V.parameters,docs:{...(se=V.parameters)==null?void 0:se.docs,source:{originalSource:`{
  args: {
    dimensions: [{
      accessor: 'name',
      formatter: d => \`\${d} 2019\`,
      interval: 0
    }],
    measures: [{
      accessor: 'sessions',
      label: 'Active Sessions',
      type: 'primary'
    }, {
      accessor: 'users',
      label: 'Users',
      type: 'additional',
      highlightColor: value => {
        if (value > 100) {
          return 'red';
        }
      }
    }, {
      accessor: 'volume',
      label: 'Volume',
      formatter: val => val.toLocaleString(),
      type: 'comparison'
    }]
  }
}`,...(ce=(le=V.parameters)==null?void 0:le.docs)==null?void 0:ce.source}}};var de,ue,he;q.parameters={...q.parameters,docs:{...(de=q.parameters)==null?void 0:de.docs,source:{originalSource:`{
  args: {
    dataset: []
  }
}`,...(he=(ue=q.parameters)==null?void 0:ue.docs)==null?void 0:he.source}}};var pe,me,fe;P.parameters={...P.parameters,docs:{...(pe=P.parameters)==null?void 0:pe.docs,source:{originalSource:`{
  args: tooltipConfig
}`,...(fe=(me=P.parameters)==null?void 0:me.docs)==null?void 0:fe.source}}};var ye,ge,be;S.parameters={...S.parameters,docs:{...(ye=S.parameters)==null?void 0:ye.docs,source:{originalSource:`{
  args: legendConfig
}`,...(be=(ge=S.parameters)==null?void 0:ge.docs)==null?void 0:be.source}}};const xt=["Default","WithCustomSize","WithHighlightedMeasures","LoadingPlaceholder","WithCustomTooltipConfig","WithCustomLegendConfig"],Rt=Object.freeze(Object.defineProperty({__proto__:null,Default:A,LoadingPlaceholder:q,WithCustomLegendConfig:S,WithCustomSize:j,WithCustomTooltipConfig:P,WithHighlightedMeasures:V,__namedExportsOrder:xt,default:Ct},Symbol.toStringTag,{value:"Module"}));export{Rt as C,A as D,q as L,j as W,V as a,P as b,S as c};
