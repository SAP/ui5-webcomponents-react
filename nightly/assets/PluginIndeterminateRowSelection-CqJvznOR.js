import{j as e}from"./iframe-L-onm66G.js";import{useMDXComponents as r}from"./index-B-8X1idt.js";import{I as n,F as a}from"./CommandsAndQueries-CjMnaUpZ.js";import{M as s,C as m}from"./blocks-CAXm6uro.js";import"./Tag-o6hxXhYX.js";import{M as p}from"./index-Dko-x7sv.js";import"./copy-CyGTlTXm.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-B6a9T0HW.js";import"./preload-helper-D9Z9MdNV.js";import"./index-JuCVJ27S.js";import"./index-CQskOaEx.js";import"./index-CLaX2vCd.js";import"./Link-CoryH5zD.js";import"./addCustomCSSWithScoping-t6gTkkzF.js";import"./index-DT1EUYqc.js";import"./index-BHqaG8Gu.js";import"./index-ChEZQsiK.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-D-TcA8Vj.js";import"./index-8n5QiMPz.js";import"./information-IlAVq7Cq.js";import"./sys-enter-2-CVLUP2WD.js";import"./alert-DwHKgn-N.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-B1_8XGg8.js";import"./delete-BP7Y4W0Z.js";import"./settings-BSMVF4P8.js";import"./NoData-DnnW4MlD.js";import"./IllustratedMessage-CrIvOtjh.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-BNsi7JET.js";import"./index-Ce5VAjSH.js";import"./slim-arrow-down-2tkvGwp5.js";import"./Input-nqzPZ96D.js";import"./ResponsivePopoverCommon.css-D-PzE_uD.js";import"./ValueStateMessage.css-BaFYLAgr.js";import"./Suggestions.css-D-XGNpUr.js";import"./ListBoxItemGroupTemplate-B6VO1di5.js";import"./ComboBoxItemGroup-DJNgoJAP.js";import"./ListItemBaseTemplate-DP9XcBYw.js";import"./Token-BVbFDKE3.js";import"./ScrollEnablement-KL0tx3I1.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-B_8XW66x.js";import"./ToggleButton-DCwG-sk7.js";import"./SuggestionItem-DAuqasmm.js";import"./index-B9nLBvvk.js";import"./Option-BNL500vH.js";import"./index-CpL49Q8X.js";import"./SegmentedButton-BHylJxn3.js";import"./index-rpzDZ4-g.js";import"./Select-wICm3x2r.js";import"./InvisibleMessage-Cke9mTfM.js";import"./slim-arrow-down-CT86qGUz.js";import"./useIsRTL-DCVW4Rtb.js";import"./index-DktfzuQk.js";import"./IconDesign-DXd8PPVF.js";import"./filter-C7JNINRu.js";import"./group-2-Chn_1rqX.js";import"./sort-descending-2FxNAz71.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BirFsVWW.js";import"./utils-D_L3Vszq.js";import"./index-Dvts4QuH.js";import"./index-CKeKsxlO.js";import"./index-0iYZ-1q5.js";import"./navigation-down-arrow-B6KjmG5s.js";import"./navigation-right-arrow-CESkN4Yn.js";import"./navigation-right-arrow-CV8pPszO.js";import"./useCurrentTheme-7RFsuHvO.js";import"./IndicationColor-DVw-fSM_.js";import"./index-CojyC1AK.js";import"./debounce-D7W5PopO.js";import"./paper-plane-BSUczLtF.js";import"./index-lxUncTW2.js";import"./less-IYmAbgpg.js";import"./index-BJt60Esi.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
