const n=new WeakMap;class i{static get tasks(){return n}static enqueue(t,e){n.has(t)||n.set(t,[]),n.get(t).push(e)}static run(t,e){return n.has(t)||n.set(t,[]),e().then(()=>{const a=n.get(t);if(a.length>0)return i.run(t,a.shift());n.delete(t)})}static push(t,e){n.get(t)?i.enqueue(t,e):i.run(t,e)}}const f=r=>{let t=null,e=!1,a,u,s;const c=new Promise((o,l)=>{s=m=>{t=t||m;const h=m-t,p=r.duration-h;if(h<=r.duration){const d=1-p/r.duration;r.advance(d),e||(a=requestAnimationFrame(s))}else r.advance(1),o()},u=()=>{e=!0,cancelAnimationFrame(a),l(new Error("animation stopped"))}}).catch(o=>o);return i.push(r.element,()=>(typeof r.beforeStart=="function"&&r.beforeStart(),requestAnimationFrame(s),new Promise(o=>{c.then(()=>o())}))),{promise:()=>c,stop:()=>u}},g=400;export{f,g as v};
