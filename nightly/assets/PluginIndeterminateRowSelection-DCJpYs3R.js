import{j as e}from"./iframe-yjMKSaW2.js";import{useMDXComponents as r}from"./index-DX8fpWzX.js";import{I as n,F as a}from"./CommandsAndQueries-ClO5_6SR.js";import{M as s,C as m}from"./blocks-qO1HNk-b.js";import"./Tag-BxGYemBH.js";import{M as p}from"./index-EVdkIx1d.js";import"./copy-Bx6gkJby.js";import{b as l}from"./AnalyticalTableHooks.stories-CG1Ne1jJ.js";import"./preload-helper-Dp1pzeXC.js";import"./index-BTcK53Xp.js";import"./index-tTu9lfPG.js";import"./index-CM3jZrAN.js";import"./Link-hbFO0ZkL.js";import"./addCustomCSSWithScoping-DI9eG_9m.js";import"./index-BPvXEz4B.js";import"./index-C0kheMH7.js";import"./index-BFYU0Mvp.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-wtqIr7A-.js";import"./index-D2oaGTxE.js";import"./information-Cn2Ycis7.js";import"./sys-enter-2-CQXBhP7E.js";import"./alert-509BGbEm.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-Cwkh_r41.js";import"./delete-BtuN8EqN.js";import"./settings-Db3_TAtG.js";import"./NoData-D0tuWWQx.js";import"./IllustratedMessage-L768Lgnu.js";import"./i18n-defaults-dyGKyNAh.js";import"./parameters-bundle.css-gLosEED4.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-7a9cOrxB.js";import"./index-B3sgNhVy.js";import"./slim-arrow-down-C3a-usnI.js";import"./Input-CTJTUFFu.js";import"./ResponsivePopoverCommon.css-DxFeQbMc.js";import"./ValueStateMessage.css-CA2fAuCP.js";import"./Suggestions.css-Ck69pShO.js";import"./ListBoxItemGroupTemplate-xaDsElnd.js";import"./ComboBoxItemGroup-BrQqIK5D.js";import"./ListItemBaseTemplate-CFF0kaEn.js";import"./Token-CLQwip2z.js";import"./ScrollEnablement-WnQFRWHc.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-Bt6MekvC.js";import"./ToggleButton-C0wnat4A.js";import"./SuggestionItem-DfB634lH.js";import"./index-uRmgFaxR.js";import"./Option-CrJKrJ5f.js";import"./index-CaZpvffh.js";import"./SegmentedButton-37GVceHj.js";import"./index-DRSoUGaL.js";import"./Select-B7f5ZkNn.js";import"./InvisibleMessage-CpX70GFw.js";import"./slim-arrow-down-Brvh4Ud1.js";import"./useIsRTL-MY_nF6I_.js";import"./index-BymYChZy.js";import"./IconDesign-DXd8PPVF.js";import"./filter-h9FGD-0R.js";import"./group-2-DcalmJYS.js";import"./sort-descending-BYf0SDBC.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-BJWsenK5.js";import"./index-Cs91-3HF.js";import"./utils-DOHC3Pr_.js";import"./index-CuxALFU6.js";import"./index-CElhn7R2.js";import"./index-DvKVlSVq.js";import"./navigation-down-arrow-BY4lPGb9.js";import"./navigation-right-arrow-DnvMFDg-.js";import"./navigation-right-arrow-DlglppO6.js";import"./useCurrentTheme-QOXIU8ro.js";import"./IndicationColor-DVw-fSM_.js";import"./index-DTbfOaKr.js";import"./debounce-D7W5PopO.js";import"./index-BVFfVLn8.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Xe(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Xe as default};
