import{j as e}from"./iframe-caVmfS0N.js";import{useMDXComponents as r}from"./index-CXGNJi-m.js";import{I as n,F as a}from"./CommandsAndQueries-DetWBOzr.js";import{M as s,C as m}from"./blocks-ZTuRQuXn.js";import"./Tag-D02fgpVR.js";import{M as p}from"./index-ChGg5Mmk.js";import"./copy-DWhnNq-F.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-BCB-wVty.js";import"./preload-helper-D9Z9MdNV.js";import"./index-BDC18DOY.js";import"./index-IhZ6wtTw.js";import"./index-Bs2xAB6r.js";import"./Link-CXOXdny5.js";import"./addCustomCSSWithScoping-QAXJ-c-T.js";import"./index-D2ylaH5D.js";import"./index-C-mTSqge.js";import"./index-CxKirG4i.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-BGaiMck6.js";import"./index-CIcgqU5O.js";import"./information-Dyf6S5us.js";import"./sys-enter-2-D5_eC5h3.js";import"./alert-BiCZhGMN.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-C3ZVADDU.js";import"./delete-Coj8x0c2.js";import"./settings-BF6yTijn.js";import"./NoData-CsITxXfr.js";import"./IllustratedMessage-CTMgPAIw.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-D20unOQc.js";import"./index-Cwz-GXgg.js";import"./slim-arrow-down-DGRzOAYw.js";import"./Input-WFpKrumU.js";import"./ResponsivePopoverCommon.css-Ce7KHyvw.js";import"./ValueStateMessage.css-BRyE1X0p.js";import"./Suggestions.css-CteNzd-N.js";import"./ListBoxItemGroupTemplate-BjfXbqSJ.js";import"./ComboBoxItemGroup-C0lfAAfP.js";import"./ListItemBaseTemplate-Cae7dQEd.js";import"./Token-Da1u6OUU.js";import"./ScrollEnablement-DgdQ7xkj.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-DMUaO3aP.js";import"./ToggleButton-lfA0Sh9N.js";import"./SuggestionItem-N9yMpNBd.js";import"./index-s22r0EiM.js";import"./Option-DyUZB-Rv.js";import"./index-CAkcfUNV.js";import"./SegmentedButton-CjrpYGhu.js";import"./index-ui_8MH4g.js";import"./Select-bTsVYF8t.js";import"./InvisibleMessage-X31FjsM3.js";import"./slim-arrow-down-ChlFFHmi.js";import"./useIsRTL-DKqS38_i.js";import"./index-BMPIp6h6.js";import"./IconDesign-DXd8PPVF.js";import"./filter-DRe9wWWm.js";import"./group-2-B_WAeg2W.js";import"./sort-descending-BXjAOUZq.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-C4SBQasY.js";import"./utils-BKtL8ae0.js";import"./index-D_Zb-Qtb.js";import"./index-ggLsWFgW.js";import"./index-DPOI5qRi.js";import"./navigation-down-arrow-BIm6SbwE.js";import"./navigation-right-arrow-mE_QgPeY.js";import"./navigation-right-arrow-oN1zG5y0.js";import"./useCurrentTheme-C15qikew.js";import"./IndicationColor-DVw-fSM_.js";import"./index-BZoYXHai.js";import"./debounce-D7W5PopO.js";import"./paper-plane-B8WUez_T.js";import"./index-Ba33ybf0.js";import"./less-GsgW5m6X.js";import"./index-BXO50M8O.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
