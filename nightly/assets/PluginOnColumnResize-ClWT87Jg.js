import{j as o}from"./jsx-runtime-D_zvdyIk.js";import{useMDXComponents as m}from"./index-zdXs1Etw.js";import{I as e,F as p}from"./CommandsAndQueries-BLDuAUYk.js";import{M as n,C as l}from"./index-BJb_M2id.js";import"./index-Ckh4UXjO.js";import"./index-BqNknw2w.js";import"./TagDesign-Ga50IS6u.js";import"./index-C--kS4iy.js";import"./index-DJcrgQOn.js";import"./Button-CDUAIOHY.js";import"./jsx-runtime-TYk6ziax.js";import"./copy-BIm13QSs.js";import"./WrappingType-BBpR8qCJ.js";import"./Title-BZr7m-U9.js";import{d as s}from"./AnalyticalTableHooks.stories-DJui1QOP.js";import"./preview-BjXjALsJ.js";import"./iframe-CdxCY8oT.js";import"./DocsRenderer-CFRXHY34-COYWOKJi.js";import"./react-18-DGA_MWY9.js";import"./index-B-pEBbkX.js";import"./Popover-CYWkC5M7.js";import"./slot-_4yKMUwC.js";import"./PopupsCommon.css-C4odaWdv.js";import"./event-strict-DgQLNDEV.js";import"./FocusableElements-B0h6XdH-.js";import"./isElementHidden-B4HqmI2E.js";import"./AccessibilityTextsHelper-4hgGqLyb.js";import"./CustomElementsScope-BUTWMsdD.js";import"./Keys-B3oBAe0t.js";import"./getActiveElement-kltGt_DR.js";import"./ResizeHandler-BhhEdsAZ.js";import"./MediaRange-Bnzt26Xb.js";import"./toLowercaseEnumValue-C_8o5td_.js";import"./parameters-bundle.css-DHLNbl9v.js";import"./getEffectiveScrollbarStyle-C9nZ6DfS.js";import"./index-JVGOCdcg.js";import"./clsx-B-dksMZM.js";import"./useStylesheet-D-3zc5-n.js";import"./index-BxZpBR5v.js";import"./Label-CNIQ9f-B.js";import"./i18n-CjR4HGlq.js";import"./i18n-defaults-BXUwkpCs.js";import"./index-DmVWxwwF.js";import"./index-DG9f8b92.js";import"./Link-DJmP58JE.js";import"./Icon-CJfyoCyo.js";import"./index-C4AHKFdV.js";import"./index-DA4Nf3tz.js";import"./Text-BE7aNcNC.js";import"./willShowContent-CZcfsNXp.js";import"./addCustomCSSWithScoping-_tNs8Q2d.js";import"./index-CkLIGxQ0.js";import"./BusyIndicator-DRlXpx-R.js";import"./index-PdcYfHMq.js";import"./index-BGMpZMYY.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-DCPNHV1H.js";import"./index--wwGKOdw.js";import"./I18nStore-DdNtknPF.js";import"./index-CXQShRbs.js";import"./index-DrFu-skq.js";import"./decline-Ctf1iLC2.js";import"./i18n-defaults-BJtDw6Mf.js";import"./information-CaDfZmsc.js";import"./information-axph4kwY.js";import"./sys-enter-2-W20sQgrM.js";import"./sys-enter-2-Dj0rlhGw.js";import"./Tooltips-DGo6fNOA.js";import"./EventProvider-ChtD9rRX.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-DrHid4Ax.js";import"./delete-dm4tBIbb.js";import"./edit-CKCr7GKW.js";import"./settings-Du4fiNbD.js";import"./index-vBW6l7zs.js";import"./ValueState-Bg0UWejw.js";import"./slim-arrow-down-Bt-iwN9_.js";import"./ListBoxItemGroupTemplate-akL2U9PU.js";import"./ListItemGroup-CMdRBa5_.js";import"./DropIndicator-aa1VaaHv.js";import"./TabbableElements-XzXYKyvZ.js";import"./ListItemBaseTemplate-Bh5w9A5L.js";import"./ComboBoxItemGroup-DDM6keqe.js";import"./Token-B43Ris5v.js";import"./ItemNavigation-CAinmIbD.js";import"./ScrollEnablement-D1kISw5Z.js";import"./animate-JylhYHXj.js";import"./List-BzJKOKyM.js";import"./handleDrop-DAKm39Zp.js";import"./getNormalizedTarget-C4mxORXI.js";import"./debounce-TTkz9ISH.js";import"./ListItemStandard-DADW69cq.js";import"./ListItemTemplate-BZGQny0L.js";import"./ListItemAdditionalText.css-Dsf8eclZ.js";import"./slim-arrow-right-Cb1dHIzE.js";import"./RadioButton-B1C6TTPw.js";import"./CheckBox-DRScB4rn.js";import"./accept-C4wh916l.js";import"./ResponsivePopover-B1wBYLBj.js";import"./Dialog-BomKBOpU.js";import"./ResponsivePopoverCommon.css-Dyu-3t3O.js";import"./Suggestions.css-DPbvJQOA.js";import"./ToggleButton-DFF0tQjI.js";import"./Input-DKBNRFui.js";import"./ValueStateMessage.css-hLRGYX_8.js";import"./index-CZitOBzd.js";import"./Option-DZaw-r6a.js";import"./index-CVh3NAtu.js";import"./Select-CycR8LxN.js";import"./InvisibleMessage-CmyZGU0D.js";import"./slim-arrow-down-BivbN2fg.js";import"./index-C0P7u1b2.js";import"./Tag-DIF-afEZ.js";import"./sys-help-2-3dHH1qFA.js";import"./i18n-defaults-CCwYnt0d.js";import"./useIsRTL-1WKdozp-.js";import"./directionChange-BzugKGnv.js";import"./index-CYkWZBgn.js";import"./IconDesign-DXd8PPVF.js";import"./filter-Dc_n7S18.js";import"./group-2-Cl5ukzuS.js";import"./sort-descending-B63sP0q7.js";import"./ThemingParameters-le4wpk1U.js";import"./index-C-K-tJyI.js";import"./stopPropagation-BJWsenK5.js";import"./index-BaLH8rxA.js";import"./utils-DiTSQB9E.js";import"./index-By8HFXdj.js";import"./index-BCJAPUuC.js";import"./ListItemCustom-BP9CAXRQ.js";import"./index-iB2ulyp3.js";import"./navigation-down-arrow-Um3EQ36O.js";import"./navigation-right-arrow-DflECNPL.js";import"./navigation-right-arrow-DTI9Ao2M.js";import"./useCurrentTheme-BN_HzRGJ.js";import"./IndicationColor-LRWnbNUo.js";import"./index-B7yuF-9p.js";import"./index-CZSXVSiI.js";import"./debounce-D7W5PopO.js";import"./index-DvOA6bGo.js";function r(t){const i={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...m(),...t.components};return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin Hooks / useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(e,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(l,{sourceState:"none",of:s}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(p,{})]})}function Li(t={}){const{wrapper:i}={...m(),...t.components};return i?o.jsx(i,{...t,children:o.jsx(r,{...t})}):r(t)}export{Li as default};
