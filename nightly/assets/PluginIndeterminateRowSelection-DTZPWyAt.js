import{j as e}from"./iframe-DrWv7kqk.js";import{useMDXComponents as r}from"./index-COfklbz7.js";import{I as n,F as a}from"./CommandsAndQueries-ChjYN9hd.js";import{M as s,C as m}from"./blocks-CanskeDB.js";import"./Tag-BpxYU6SX.js";import{M as p}from"./index-C2As05th.js";import"./copy-CdjvYQrK.js";import{b as l}from"./AnalyticalTableHooks.stories-CnJp7vsc.js";import"./preload-helper-Ct5FWWRu.js";import"./index-DNisCSrq.js";import"./index-BbYicUoT.js";import"./index-WYl7sJsX.js";import"./Link-BXBCrxeL.js";import"./addCustomCSSWithScoping-BHseblXn.js";import"./index-BObiMDAc.js";import"./index-BK7UTMeJ.js";import"./index-wUQSbSJP.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-BHbcK7Ba.js";import"./index-DJ9rRFX2.js";import"./information-BlWxhQJP.js";import"./sys-enter-2-yLdXaTo2.js";import"./alert-D-b4CjR7.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-B5_dIwBF.js";import"./delete-DGWWD-0M.js";import"./settings-uroI1SHr.js";import"./NoData-BgVa5JOE.js";import"./IllustratedMessage-C_P0VKyq.js";import"./i18n-defaults-dyGKyNAh.js";import"./parameters-bundle.css-B8Lg4lbk.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-BxKcZBZF.js";import"./index-c3XofLN-.js";import"./slim-arrow-down-y4onL6ln.js";import"./Input-C_5q9_az.js";import"./ResponsivePopoverCommon.css-D-NNNw7j.js";import"./ValueStateMessage.css-B0vfJtfY.js";import"./Suggestions.css-C2ZIvTf-.js";import"./ListBoxItemGroupTemplate-zsNoICuE.js";import"./ComboBoxItemGroup-CeeS4fDE.js";import"./ListItemBaseTemplate-BLP_ZL8i.js";import"./Token-D0IgVyFO.js";import"./ScrollEnablement-yOUkUvJ6.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-DThva79L.js";import"./ToggleButton-DEHdTx38.js";import"./SuggestionItem-DKn3SbjY.js";import"./index-DTmtyUb2.js";import"./Option-DaChME3c.js";import"./index-2qE_INpy.js";import"./SegmentedButton-DrvmVaQv.js";import"./index-Dfk_-AT2.js";import"./Select-BC5JSduM.js";import"./InvisibleMessage-AMXG7yy6.js";import"./slim-arrow-down-CTlrm5_E.js";import"./useIsRTL-XwDO1usx.js";import"./index-3r57QoEB.js";import"./IconDesign-DXd8PPVF.js";import"./filter-C4dwn6g9.js";import"./group-2-BKV6ywji.js";import"./sort-descending-_QmakTRe.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-9mrtC8Rr.js";import"./utils-Bx9oMGrL.js";import"./index-BXypK-HU.js";import"./index-CgKvkbcK.js";import"./index-xZd7WN2d.js";import"./navigation-down-arrow-D_XU2zOL.js";import"./navigation-right-arrow-3Y1kkBwG.js";import"./navigation-right-arrow-DbCp59vu.js";import"./useCurrentTheme-gchjG-U4.js";import"./IndicationColor-DVw-fSM_.js";import"./index-3so-AfDQ.js";import"./debounce-D7W5PopO.js";import"./index-_OTZPB8a.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleNames:["AnalyticalTableHooks"],packageName:"@ui5/webcomponents-react"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [AnalyticalTableHooks.useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Xe(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Xe as default};
